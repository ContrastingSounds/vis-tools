{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js","webpack:///./node_modules/ssf/ssf.js","webpack:///./src/vis_table_plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelField","vis","queryResponseField","this","view","view_label","label","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","heading","short_name","unit","tags","forEach","tag","split","Series","keys","values","types","length","line_items_only","with_subtotals","push","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelDimension","super","align","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","PivotField","Row","id","sort","data","Column","transposed","idx","pos","levels","pivot_key","colspans","variance_type","pivoted","subtotal","sort_by_measure_values","sort_by_pivot_values","level","labels","visId","useShortName","config_setting","useViewName","join","has_pivots","sortColsBy","useHeadings","_strrev","x","charAt","fill","pad0","v","pad_","rpad_","version","p2_32","pow","pad0r","round","pad0r1","pad0r2","isgeneral","charCodeAt","days","months","init_table","table_fmt","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","basedate","dnthresh","getTime","base1904","datenum_local","epoch","getTimezoneOffset","_general_int","general_fmt_num","gnr1","gnr2","gnr4","gnr5","gnr6","gfn5","indexOf","replace","V","LOG10E","toPrecision","w","toFixed","toExponential","gfn2","substr","gfn3","gfn4","general_fmt","Error","write_date","fmt","val","ss0","ss","tt","outl","commaify","j","_general_num","_general","write_num","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","String","fromCharCode","rnd","dd","dec","write_num_flt","match","ffmt","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","slice","lastIndexOf","split_fmt","in_str","_split","abstime","fmt_is_date","toUpperCase","eval_fmt","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","is_date","_eval","cfregex","cfregex2","chkcond","thresh","parseFloat","dateNF","table","f","lat","m1","m2","choose_fmt","load_entry","undefined","load","_table","get_table","load_table","tbl","make_ssf","DO_NOT_EXPORT_SSF","tableModelCoreOptions","theme","section","display","default","order","customTheme","layout","columnOrder","rowSubtotals","display_size","colSubtotals","spanRows","spanCols","sortColumnsBy","groupVarianceColumns","indexColumn","transposeTable","VisPluginTableModel","lookerData","queryResponse","dimensions","measures","columns","subtotals_data","transposed_columns","transposed_data","pivot_fields","pivots","pivot_values","variances","column_series","colspan_values","rowspan_values","useIndexColumn","addRowSubtotals","addSubtotalDepth","subtotalDepth","has_totals","has_subtotals","has_row_totals","has_supers","checkPivotsAndSupermeasures","checkVarianceCalculations","addDimensions","addMeasures","buildIndexColumn","checkSubtotalsData","buildRows","addColumnSeries","buildTotals","updateRowSpanValues","addSubTotals","addColumnSubTotals","addVarianceColumns","sortColumns","applyFormatting","transposeColumns","transposeRows","validateConfig","newOptions","subtotal_options","dimension","subtotal_option","measure","comparisonOptions","pivotComparisons","pivot","option","concat","comparisonMeasure","includeMeasure","unshift","fields","pivot_field","supermeasure_like","startsWith","baseline","reverse","comparison","col_idx","dimension_like","dim","measure_like","newMeasure","pivot_value","columnId","level_sort_values","supermeasure","meas","index_column","lookerSubtotal","visSubtotal","groups","group","cell_style","isSubtotal","lookerRow","cell_series","_parsed","to_string","all_dims","last_dim","getRenderedFromHtml","html","col","span_tracker","this_cell_value","cell_above_value","d_","dim_","depth","param","filter","setColSpans","subTotalGroups","latest_group","g","firstVisibleDimension","subTotalGroup","subtotal_label","entries","cellKey","subtotal_value","subtotal_items","data_row","Number","isFinite","cellValue","sortData","last_pivot_key","last_pivot_col","subtotals","pivot_dimension","p_value","Set","highest_pivot_col","previous_subtotal","subtotal_col","measure_idx","pivot_idx","after","field","calc","baseline_value","comparison_value","cell_value","colpair","variance","getColumnById","calculateVariance","variance_colpairs","calcs","is_total","index","top_level_pivots","createVarianceColumn","new_series","totals_data","truncated","calculate_others","totals_","totals_row","others_row","other_value","links","link","parser","DOMParser","parseFromString","documentElement","textContent","TypeError","default_colspan","index_parent","measure_parent","transposed_column","h","sourceRow","colspan","column_heading","header","measure_level","getLabel","transposed_row","rowspans","header_levels","span_values","end","this_value","above_value","l_","label_level","next_value","index_columns","measure_columns","total_columns","cells","cell","rowspan","from","to","updateColumnOrder","shift","col_order","field_option","field_name","keep_option","raw_values"],"mappings":"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","file":"vis_table_plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = queryResponseField.is_numeric\n    this.is_array = ['list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = ''\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style = style_setting\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'style':\n              this.style = tags[2] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' && queryResponseField.is_table_calculation\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = queryResponseField.is_turtle\n    this.can_pivot = can_pivot\n  }\n}\n\nclass PivotField {\n  constructor({ queryResponseField }) {\n    this.name = queryResponseField.name,\n    this.label = queryResponseField.label_short || queryResponseField.label,\n    this.view = queryResponseField.view_label || ''\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(with_subtotals)\n      this.max_for_display = Math.max(with_subtotals)\n      this.min = Math.min(line_items_only)\n      this.max = Math.max(line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  to_string() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    this.modelField = null\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n    this.colspans = []\n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.variance_type = '' // empty | absolute | percentage\n    this.pivoted = false\n    this.subtotal = false\n    this.super = false\n\n    this.series = null\n    \n    this.sort_by_measure_values = [] // [index -1|dimension 0|measure 1|row totals & supermeasures 2, column number, [measure values]  ]\n    this.sort_by_pivot_values = []   // [index -1|dimension 0|measure 1|row totals & supermeasures 2, [pivot values], column number    ]\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getLabel (level) {\n    if (this.transposed) {\n      return this.labels[level]\n    }\n\n    if (typeof this.vis.visId !== 'undefined' && this.vis.visId === 'report_table') {\n      var label = this.vis.useShortName ? this.modelField.short_name || this.modelField.label : this.modelField.label\n      switch (this.variance_type) {\n        case 'absolute':\n          var label = 'Var #'\n          break;\n        case 'percentage':\n          var label = 'Var %'\n          break;\n      }\n    } else {\n      var label = this.modelField.label\n    }\n    \n    var config_setting = this.vis.config['label|' + this.modelField.name]\n    if (typeof config_setting !== 'undefined' && config_setting !== this.modelField.label) {\n      label = config_setting ? config_setting : label\n    }\n\n    if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n      label = [this.modelField.view, label].join(' ') \n    }\n    \n    if (typeof this.vis.has_pivots !== 'undefined') {\n      if (this.vis.has_pivots) { \n        if (this.vis.sortColsBy === 'getSortByPivots') {\n          if (level < this.levels.length) {\n            label = this.levels[level]\n          } else {\n            // label already set\n          }\n        } else { // params.config.sortColumnsBy === 'getSortByMeasures'\n          if (level >= 1) {\n            label = this.levels[level - 1]\n          } else {\n            // label already set\n          }\n        } \n      } else { // flat table\n        if (this.vis.useHeadings && level === 0) {\n          var config_setting = this.vis.config['heading|' + this.modelField.name]\n          if (typeof config_setting !== 'undefined') {\n            label = config_setting ? config_setting : this.modelField.heading\n          } else {\n            label = this.modelField.heading\n          }\n        } else {\n          // label already set\n        }\n      }\n    }\n    return label\n  }\n\n  updateSortByMeasures (idx) {\n    if (this.sort_by_measure_values[0] == 1) {\n      if (!this.pivoted && !this.subtotal) {\n        this.sort_by_measure_values = [1, idx]\n      }\n    }\n  }\n\n  getSortByMeasures () {\n    return this.sort_by_measure_values\n  }\n\n  getSortByPivots () {\n    return this.sort_by_pivot_values\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.PivotField = PivotField\nexports.Row = Row\nexports.Column = Column\n","/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nvar make_ssf = function make_ssf(SSF){\nSSF.version = '0.11.0';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\tt[65535]= 'General';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\nfunction general_fmt_int(v) { return v.toString(10); }\nSSF._general_int = general_fmt_int;\nvar general_fmt_num = (function make_general_fmt_num() {\nvar gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/, gnr6 = /(E[+-])(\\d)$/;\nfunction gfn2(v) {\n\tvar w = (v<0?12:11);\n\tvar o = gfn5(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\nfunction gfn3(v) {\n\tvar o = v.toFixed(11).replace(gnr1,\".$1\");\n\tif(o.length > (v<0?12:11)) o = v.toPrecision(6);\n\treturn o;\n}\nfunction gfn4(o) {\n\tfor(var i = 0; i != o.length; ++i) if((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4,\".$1\").replace(gnr5,\"E\").replace(\"e\",\"E\").replace(gnr6,\"$10$2\");\n\treturn o;\n}\nfunction gfn5(o) {\n\treturn o.indexOf(\".\") > -1 ? o.replace(gnr2,\"\").replace(gnr1,\".$1\") : o;\n}\nreturn function general_fmt_num(v) {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = gfn2(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = gfn3(v);\n\treturn gfn5(gfn4(o));\n};})();\nSSF._general_num = general_fmt_num;\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri() { return 0; }\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1;\n\t}\n\tif(outl > 0) return pad0(out, outl); else return \"\";\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 0;\n\t}\n\treturn Math.round((val-Math.floor(val))*Math.pow(10,d));\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) { if(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0)); return \"\"+Math.floor(val); }\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase \"$\": out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\n};\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n","import SSF from \"ssf\"\n\nimport { newArray, ModelDimension, ModelMeasure, PivotField, CellSeries, ColumnSeries, Row, Column } from './vis_primitives'\n\nconst tableModelCoreOptions = {\n  theme: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Theme\",\n    values: [\n      { 'Traditional': 'traditional' },\n      { 'Looker': 'looker' },\n      { 'Contemporary': 'contemporary' },\n      { 'Use custom theme': 'custom'}\n    ],\n    default: \"traditional\",\n    order: 1,\n  },\n  customTheme: {\n    section: \"Theme\",\n    type: \"string\",\n    label: \"Load custom CSS from:\",\n    default: \"\",\n    order: 2,\n  },\n  layout: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Layout\",\n    values: [\n      { 'Even': 'fixed' },\n      { 'Auto': 'auto' }\n    ],\n    default: \"fixed\",\n    order: 3,\n  },\n  columnOrder: {},\n  rowSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Row Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 1,\n  },\n  colSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Col Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 2,\n  },\n  spanRows: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Dims\",\n    display_size: 'half',\n    default: true,\n    order: 3,\n  },\n  spanCols: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Headers\",\n    display_size: 'half',\n    default: true,\n    order: 4,\n  },\n  sortColumnsBy: {\n    section: \"Table\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Sort Columns By\",\n    values: [\n      { 'Pivots': 'getSortByPivots' },\n      { 'Measures': 'getSortByMeasures' }\n    ],\n    default: \"getSortByPivots\",\n    order: 6,\n  },\n  useViewName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Include View Name\",\n    default: false,\n    order: 7,\n  },\n  useHeadings: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Headings (non-pivots only)\",\n    default: false,\n    order: 8,\n  },\n  useShortName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Short Name (from model)\",\n    default: false,\n    order: 9,\n  },\n  groupVarianceColumns: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Group Variance Columns After Pivots\",\n    default: false,\n    order: 10,\n  },\n  indexColumn: {\n    section: \"Dimensions\",\n    type: \"boolean\",\n    label: \"Use Last Field Only\",\n    default: false,\n    order: 0,\n  },\n  transposeTable: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Transpose\",\n    default: false,\n    order: 100,\n  },\n}\n/**\n * Represents an \"enriched data object\" with additional methods and properties for data vis\n * Takes the data, config and queryResponse objects as inputs to the constructor\n */\nclass VisPluginTableModel {\n  /**\n   * Build the LookerData object\n   * @constructor\n   * \n   * - Check for pivots and supermeasures\n   * - Check for variance calculations\n   * - Add dimensions\n   * - Add measures\n   * - Build index column\n   *   - Index all original columns to preserve order later\n   *   - Add dimensions, list of ids, list of full objects\n   *   - Add measures, list of ids, list of full objects\n   * - TODO: CHECK FOR SUBTOTALS\n   *   – SET this.has_row_totals\n   *   - IF this.has_pivots, FLATTEN SUBTOTALS DATA\n   *   – SET this.subtotals\n   * - Build rows\n   * - Add column series\n   * - Build totals\n   * - Build row spans\n   * - If configured: Add row subtotals\n   * - If configured and 2 pivots: Add column subtotals\n   * - Add variances\n   * - TODO: add new column series\n   * - Sort columns\n   * - Apply formatting\n   * - If configured: transpose table\n   *   - add transposed_columns\n   *   - add transposed_rows\n   * - Validate config\n   * - TODO: Get table column groups\n   * \n   * @param {*} lookerData \n   * @param {*} queryResponse \n   * @param {*} config \n   */\n  constructor(lookerData, queryResponse, config) {\n    this.visId = 'report_table'\n    this.config = config\n\n    this.dimensions = []\n    this.measures = []\n    this.columns = []\n    this.data = []\n    this.subtotals_data = {}\n\n    this.transposed_columns = []\n    this.transposed_data = []\n\n    this.pivot_fields = []\n    this.pivots = []\n    this.pivot_values = []\n    this.variances = []\n    this.column_series = []\n\n    this.colspan_values = {}\n    this.rowspan_values = {}\n\n    this.useIndexColumn = config.indexColumn || false\n    this.useHeadings = config.useHeadings || false\n    this.useShortName = config.useShortName || false\n    this.useViewName = config.useViewName || false\n    this.addRowSubtotals = config.rowSubtotals || false\n    this.addSubtotalDepth = parseInt(config.subtotalDepth)|| this.dimensions.length - 1\n    this.spanRows = false || config.spanRows\n    this.spanCols = false || config.spanCols\n    this.sortColsBy = config.sortColumnsBy || 'getSortByPivots'\n\n    this.has_totals = false\n    this.has_subtotals = false\n    this.has_row_totals = queryResponse.has_row_totals || false\n    this.has_pivots = false\n    this.has_supers = false\n\n    this.transposeTable = config.transposeTable\n\n    \n\n    var col_idx = 0\n    this.checkPivotsAndSupermeasures(queryResponse)\n    this.checkVarianceCalculations()\n    this.addDimensions(queryResponse, col_idx)\n    this.addMeasures(queryResponse, col_idx)\n    this.buildIndexColumn(queryResponse)\n    this.checkSubtotalsData(queryResponse)\n    this.buildRows(lookerData)\n    this.addColumnSeries()\n    this.buildTotals(queryResponse)\n    this.updateRowSpanValues()\n    if (this.config.rowSubtotals) { this.addSubTotals() }\n    if (this.config.colSubtotals && this.pivot_fields.length == 2) { this.addColumnSubTotals() }\n    this.addVarianceColumns()\n    // this.addColumnSeries()    // TODO: add column series for generated columns (eg column subtotals)\n    this.sortColumns()\n    this.applyFormatting()\n    if (this.transposeTable) { \n      this.transposeColumns() \n      this.transposeRows()\n    }\n    this.validateConfig()\n    // this.getTableColumnGroups() \n  }\n\n  static getCoreConfigOptions() {\n    return tableModelCoreOptions\n  }\n\n  /**\n   * Hook to be called by a Looker custom vis, for example:\n   *    this.trigger('registerOptions', VisPluginTableModel.getConfigOptions())\n   * \n   * Returns a new config object, combining the core options with dynamic options based on available dimensions and measures\n   */\n  getConfigOptions() {\n    var newOptions = tableModelCoreOptions\n\n    var subtotal_options = []\n    this.dimensions.forEach((dimension, i) => {\n      newOptions['label|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: dimension.label,\n        default: dimension.label,\n        order: i * 10 + 1,\n      }\n\n      newOptions['heading|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: 'Heading',\n        default: '',\n        order: i * 10 + 2,\n      }\n\n      newOptions['hide|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'boolean',\n        label: 'Hide',\n        display_size: 'third',\n        default: false,\n        order: i * 10 + 3,\n      }\n\n      if (i < this.dimensions.length - 1) {\n        var subtotal_option = {}\n        subtotal_option[dimension.label] = (i + 1).toString()\n        subtotal_options.push(subtotal_option)\n      }\n    })\n\n    newOptions['subtotalDepth'] = {\n      section: \"Table\",\n      type: \"string\",\n      label: \"Sub Total Depth\",\n      display: 'select',\n      values: subtotal_options,\n      default: \"1\",\n      order: 5,\n    }\n\n    this.measures.forEach((measure, i) => {\n      newOptions['label|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: measure.label,\n        default: measure.label,\n        order: 100 + i * 10 + 1,\n      }\n\n      newOptions['heading|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Heading for ' + measure.label,\n        default: '',\n        order: 100 + i * 10 + 2,\n      }\n\n      newOptions['style|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Style',\n        display: 'select',\n        values: [\n          {'Normal': 'normal'},\n          {'Black/Red': 'black_red'},\n          {'Subtotal': 'subtotal'},\n          {'Hidden': 'hide'}\n        ],\n        order: 100 + i * 10 + 3\n      }\n\n      var comparisonOptions = []\n      \n      if (measure.can_pivot) {\n        var pivotComparisons = []\n        this.pivots.forEach((pivot, p) => {\n          if (this.pivots.length === 1 || p === 1 || this.config.colSubtotals ) {\n            var option = {}\n            option['By ' + pivot.label] = pivot.name\n            pivotComparisons.push(option)\n          }\n        })\n        comparisonOptions = comparisonOptions.concat(pivotComparisons)\n      }\n\n      // measures, row totals and supermeasures\n      this.measures.forEach((comparisonMeasure, j) => {\n        var includeMeasure = measure.can_pivot === comparisonMeasure.can_pivot\n                              || \n                            this.has_row_totals && !comparisonMeasure.is_table_calculation         \n        if (i != j && includeMeasure) {\n          var option = {}\n          option['vs. ' + comparisonMeasure.label] = comparisonMeasure.name\n          comparisonOptions.push(option)\n        }\n      })\n      comparisonOptions.unshift({ '(none)': 'no_variance'})\n\n      newOptions['comparison|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Comparison',\n        display: 'select',\n        values: comparisonOptions,\n        order: 100 + i * 10 + 5\n      }\n\n      newOptions['switch|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Switch',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 6,\n      }\n\n      newOptions['var_num|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var #',\n        display_size: 'third',\n        default: true,\n        order: 100 + i * 10 + 7,\n      }\n\n      newOptions['var_pct|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var %',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 8,\n      }\n    })\n    return newOptions\n  }\n\n  /**\n   * Update the VisPluginTableModel instance\n   * - this.pivots\n   * - this.pivot_fields\n   * - this.has_pivots\n   * - this.has_supers\n   * @param {*} queryResponse \n   */\n  checkPivotsAndSupermeasures(queryResponse) {\n    queryResponse.fields.pivots.forEach(pivot_field => { \n      this.pivot_fields.push(pivot_field.name) \n      this.pivots.push(new PivotField(pivot_field))\n    })\n\n    if (typeof queryResponse.pivots !== 'undefined') {\n      this.pivot_values = queryResponse.pivots\n      this.has_pivots = true\n    }\n\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      this.has_supers = true\n    }\n  }\n\n  /**\n   * Update the VisPluginTableModel instace\n   * - this.variances\n   */\n  checkVarianceCalculations() {\n    Object.keys(this.config).forEach(option => {\n      if (option.startsWith('comparison')) {\n        var baseline = option.split('|')[1]\n\n        if (this.pivot_fields.includes(this.config[option])) {\n          var type = 'by_pivot'\n        } else {\n          var type = 'vs_measure'\n        }\n\n        if (typeof this.config['switch|' + baseline] !== 'undefined') {\n          if (this.config['switch|' + baseline]) {\n            var reverse = true\n          } else {\n            var reverse = false\n          }\n        }\n\n        this.variances.push({\n          baseline: baseline,\n          comparison: this.config[option],\n          type: type,\n          reverse: reverse\n        })\n      }\n    })\n  }\n\n  /**\n   * Registers dimensions with the VisPluginTableModel\n   * - this.dimensions\n   * - this.columns\n   * \n   * Uses this.applyVisToolsTags() to enrich column information\n   * \n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addDimensions(queryResponse, col_idx) {\n    queryResponse.fields.dimension_like.forEach(dimension => {\n      var dim = new ModelDimension({\n        vis: this,\n        queryResponseField: dimension\n      })\n      this.dimensions.push(dim)\n\n      var column = new Column(dim.name, this, dim) \n      column.idx = col_idx\n      column.levels = newArray(queryResponse.fields.pivots.length, '')\n      column.sort_by_measure_values = [0, col_idx, ...newArray(this.pivot_fields.length, 0)]\n      column.sort_by_pivot_values = [0, ...newArray(this.pivot_fields.length, 0), col_idx]\n\n      this.columns.push(column)\n      col_idx += 10\n    })\n  }\n\n  /**\n   * Registers measures with the VisPluginTableModel\n   * - this.measures\n   * - this.columns\n   * \n   * Uses this.applyVisToolsTags() to enrich column information\n   * \n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addMeasures(queryResponse, col_idx) {\n    var config = this.config\n    // add measures, list of ids\n    queryResponse.fields.measure_like.forEach(measure => {\n      var newMeasure = new ModelMeasure({\n        vis: this,\n        queryResponseField: measure,\n        can_pivot: true\n      })\n      this.measures.push(newMeasure) \n    })\n    \n    // add measures, list of full objects\n    if (this.has_pivots) {\n      this.pivot_values.forEach(pivot_value => {\n        this.measures.forEach((measure, m) => {\n          var include_measure = (                         // for pivoted measures, skip table calcs for row totals\n            pivot_value.key != '$$$_row_total_$$$'        // if user wants a row total for table calc, must define separately\n          ) || (\n            pivot_value.key == '$$$_row_total_$$$' \n            && measure.is_table_calculation == false\n          )\n\n          if (include_measure) {\n            var columnId = pivot_value.key + '.' + measure.name\n\n            var levels = [] // will contain a list of all the pivot values for this column\n            var level_sort_values = []\n            queryResponse.fields.pivots.forEach(pivot_field => { \n              levels.push(pivot_value['data'][pivot_field.name])\n              level_sort_values.push(pivot_value['sort_values'][pivot_field.name]) \n            })\n\n            var modelField = measure\n            var column = new Column(columnId, this, modelField)\n            column.idx = col_idx\n            column.levels = levels\n            column.pivoted = true\n            column.pivot_key = pivot_value.key\n\n            if (pivot_value.key !== '$$$_row_total_$$$') {\n              column.sort_by_measure_values = [1, m, ...level_sort_values]\n              column.sort_by_pivot_values = [1, ...level_sort_values, col_idx]\n            } else {\n              column.super = true\n              column.sort_by_measure_values = [2, m, ...newArray(this.pivot_fields.length, 0)]\n              column.sort_by_pivot_values = [2, ...newArray(this.pivot_fields.length, 0), col_idx]\n            }\n\n            this.columns.push(column)\n            col_idx += 10\n          }\n        })\n      })\n    } else {\n      // noticeably simpler for flat tables!\n      this.measures.forEach(measure => {\n        var column = new Column(measure.name, this, measure)\n        column.idx = col_idx\n        try {\n          if (typeof config.columnOrder[column.id] !== 'undefined') {\n            column.pos = config.columnOrder[column.id]\n          } else {\n            column.pos = col_idx\n          }\n        }\n        catch {\n          column.pos = col_idx\n        }\n        column.sort_by_measure_values = [1, column.pos]\n        column.sort_by_pivot_values = [1, column.pos]\n        this.columns.push(column)\n\n        col_idx += 10\n      })\n    }\n    \n    // add supermeasures, if present\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      queryResponse.fields.supermeasure_like.forEach(supermeasure => {\n        var meas = new ModelMeasure({\n          vis: this,\n          queryResponseField: supermeasure,\n          can_pivot: false,\n        })\n        this.measures.push(meas) \n\n        var column = new Column(meas.name, this, meas)\n        column.idx = col_idx\n        column.levels = newArray(queryResponse.fields.pivots.length, '')\n        column.super = true\n        column.sort_by_measure_values = [2, col_idx, ...newArray(this.pivot_fields.length, 1)]\n        column.sort_by_pivot_values = [2, ...newArray(this.pivot_fields.length, 1), col_idx]\n\n        this.columns.push(column)\n        col_idx += 10\n      })\n    }\n  }\n\n  /**\n   * Creates the index column, a \"for display only\" column when the set of dimensions is reduced to\n   * a single column for reporting purposes.\n   * \n   * @param {*} queryResponse \n   */\n  buildIndexColumn(queryResponse) {\n    var index_column = new Column('$$$_index_$$$', this, this.dimensions[this.dimensions.length - 1])\n\n    index_column.levels = newArray(queryResponse.fields.pivots.length, '')\n    index_column.sort_by_measure_values = [-1, 0, ...newArray(this.pivot_fields.length, 0)]\n    index_column.sort_by_pivot_values = [-1, ...newArray(this.pivot_fields.length, 0), 0]\n    \n    this.columns.push(index_column)\n  }\n\n  checkSubtotalsData(queryResponse) {\n    if (typeof queryResponse.subtotals_data !== 'undefined') {\n      this.has_subtotals = true\n\n      if (typeof queryResponse.subtotals_data[this.addSubtotalDepth] !== 'undefined') {\n        queryResponse.subtotals_data[this.addSubtotalDepth].forEach(lookerSubtotal => {\n          var visSubtotal = new Row('subtotal')\n  \n          visSubtotal['$$$__grouping__$$$'] = lookerSubtotal['$$$__grouping__$$$']\n          var groups = ['Subtotal']\n          visSubtotal['$$$__grouping__$$$'].forEach(group => {\n            groups.push(lookerSubtotal[group].value)\n          })\n          visSubtotal.id = groups.join('|')\n  \n          this.columns.forEach(column => {\n            if (column.pivoted) {\n              visSubtotal.data[column.id] = lookerSubtotal[column.modelField.name][column.pivot_key]\n            } else {\n              visSubtotal.data[column.id] = lookerSubtotal[column.id]\n            }\n  \n            if (typeof visSubtotal.data[column.id] !== 'undefined') {\n              if (typeof visSubtotal.data[column.id].cell_style === 'undefined') {\n                visSubtotal.data[column.id].cell_style = ['total', 'subtotal']\n              } else {\n                isSubtotal.data[column.id].cell_style.concat(['total', 'subtotal'])\n              }\n              if (typeof column.modelField.style !== 'undefined') {\n                visSubtotal.data[column.id].cell_style = visSubtotal.data[column.id].cell_style.concat(column.modelField.style)\n              }\n              if (visSubtotal.data[column.id].value === null) {\n                visSubtotal.data[column.id].rendered = ''\n              }\n            }            \n          })\n          this.subtotals_data[visSubtotal.id] = visSubtotal\n        })\n      }\n    }\n  }\n\n  /**\n   * Populates this.data with Rows of data\n   * @param {*} lookerData \n   */\n  buildRows(lookerData) {\n    lookerData.forEach((lookerRow, i) => {\n      var row = new Row('line_item') // TODO: consider creating the row object once all required field values identified\n      \n      // flatten data, if pivoted. Looker's data structure is nested for pivots (to a single level, no matter how many pivots)\n      this.columns.forEach(column => {\n        \n        if (column.pivoted) {\n          row.data[column.id] = lookerRow[column.modelField.name][column.pivot_key]\n        } else {\n          row.data[column.id] = lookerRow[column.id]\n        }\n\n        if (typeof row.data[column.id] !== 'undefined') {\n          if (typeof row.data[column.id].cell_style === 'undefined') {\n            row.data[column.id].cell_style = []\n          }\n          if (typeof column.modelField.style !== 'undefined') {\n            row.data[column.id].cell_style = row.data[column.id].cell_style.concat(column.modelField.style)\n          }\n          if (row.data[column.id].value === null) {\n            row.data[column.id].rendered = ''\n          }\n          if (column.modelField.is_turtle) {\n            var cell_series = new CellSeries({\n              column: column,\n              row: row,\n              sort_value: row.data[column.id].sort_value,\n              series: {\n                keys: row.data[column.id]._parsed.keys,\n                values: row.data[column.id]._parsed.values\n              }\n            })\n            row.data[column.id].value = cell_series\n            row.data[column.id].rendered = cell_series.to_string()\n          }\n        }\n      })\n\n      // set a unique id for the row\n      var all_dims = []\n      this.dimensions.forEach(dimension => {\n        all_dims.push(row.data[dimension.name].value)\n      })\n      row.id = all_dims.join('|')\n\n      // set an index value (note: this is an index purely for display purposes; row.id remains the unique reference value)\n      var last_dim = this.dimensions[this.dimensions.length - 1].name\n\n      row.data['$$$_index_$$$'] = {\n        value: row.data[last_dim].value,\n        rendered: this.getRenderedFromHtml(row.data[last_dim]),\n        html: row.data[last_dim].html,\n        cell_style: ['indent']\n      }\n\n      row.sort = [0, 0, i]\n      this.data.push(row)\n    })\n  }\n\n  /**\n   * Applies conditional formatting (red if negative) to all measure columns set to use it \n   */\n  applyFormatting() {\n    this.columns.forEach(col => {\n      var config_setting = this.config['style|' + col.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        switch (config_setting) {\n          case 'black_red':\n            this.data.forEach(row => {\n              if (row.data[col.id].value < 0) {\n                row.data[col.id].cell_style.push('red')\n              }\n            })\n            break\n        }\n      }\n    })\n  }\n\n  /**\n   * Returns column that matches ID provided\n   * @param {*} id \n   */\n  getColumnById (id) {\n    var column = {}\n    this.columns.forEach(c => {\n      if (id === c.id) { \n        column = c \n      }\n    })\n    return column\n  }\n\n  getMeasureByName (name) {\n    var measure = ''\n    this.measures.forEach(m => {\n      if (name === m.name) { \n        measure = m\n      }\n    })\n    return measure\n  }\n\n  /**\n   * Performs vertical cell merge, by calculating required rowspan values\n   * Works backwards through the data rows.\n   */\n  updateRowSpanValues () {\n    var span_tracker = {}\n    this.dimensions.forEach(dimension => {\n      span_tracker[dimension.name] = 1\n    })\n\n    // loop backwards through data rows\n    for (var r = this.data.length-1; r >= 0 ; r--) {\n      var row = this.data[r]\n\n      // full reset and continue for totals\n      if (row.type !== 'line_item' ) {\n        this.dimensions.forEach(dimension => {\n          span_tracker[dimension.name] = 1\n        })\n        continue;\n      }\n\n      // loop fowards through the dimensions\n      this.rowspan_values[row.id] = {}\n      for (var i = 0; i < this.dimensions.length; i++) {\n        var dimension = this.dimensions[i]\n        var this_cell_value = this.data[r].data[dimension.name].value\n        if (r > 0) {\n          var cell_above_value = this.data[r-1].data[dimension.name].value\n        }\n\n        // increment the span_tracker if dimensions match\n        if (r > 0 && this_cell_value == cell_above_value) {\n          this.rowspan_values[row.id][dimension.name] = -1;\n          span_tracker[dimension.name] += 1;\n        } else {\n        // partial reset and continue if dimensions different\n          for (var d_ = i; d_ < this.dimensions.length; d_++) {\n            var dim_ = this.dimensions[d_].name\n            this.rowspan_values[row.id][dim_] = span_tracker[dim_];\n            span_tracker[dim_] = 1\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sorts the rows of data, then updates vertical cell merge \n   * \n   * Rows are sorted by three values:\n   * 1. Section\n   * 2. Subtotal Group\n   * 3. Row Value (currently based only on original row index from the Looker data object)\n   */\n  sortData () {\n    var compareRowSortValues = (a, b) => {\n      var depth = a.sort.length\n      for(var i=0; i<depth; i++) {\n          if (a.sort[i] > b.sort[i]) { return 1 }\n          if (a.sort[i] < b.sort[i]) { return -1 }\n      }\n      return -1\n    }\n    this.data.sort(compareRowSortValues)\n    this.updateRowSpanValues()\n  }\n\n  /**\n   * Sorts columns by config option\n   * \n   * Depending on the colsSortBy option, columns are sorted by either:\n   * \n   * Sort by Pivots (default)\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Pivot sort values\n   * 3. Original column number for the Looker data obect [last item in sort value array]\n   * \n   * Sort by Measures\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Original Column Number\n   * 3. Measure sort values [remainder of sort value array]\n   * \n   * Note that column sort values can be over-riden by manual drag'n'drop \n   */\n  sortColumns () {\n    var compareColSortValues = (a, b) => {\n      var param = this.sortColsBy\n      var depth = a[param]().length\n      for(var i=0; i<depth; i++) {\n          if (a[param]()[i] > b[param]()[i]) { return 1 }\n          if (a[param]()[i] < b[param]()[i]) { return -1 }\n      }\n      return -1\n    }\n    this.columns.sort(compareColSortValues)\n\n    if (this.useIndexColumn) {\n      var columns = this.columns.filter(c => c.modelField.type == 'measure' || c.id === '$$$_index_$$$').filter(c => !c.hide)\n    } else {\n      var columns =  this.columns.filter(c => c.id !== '$$$_index_$$$').filter(c => !c.hide)\n    }\n    this.setColSpans(columns)\n  }\n\n  /**\n   * Generates subtotals values\n   * \n   * 1. Build array of subtotal groups\n   *    - Based on the joined values of each row's dimensions (up to the configured subtotal depth)\n   *    - Update each row's sort value with its subtotal group number\n   * 2. Generate data rows\n   *    - For each subtotal group, create a new Row\n   *      - For each Column\n   *        - Set the style\n   *        - In the index dimension and the firstVisibleDimension, put the subtotal label\n   *        - If it's a measure \n   *          - Count & total all rows of type 'line_item'\n   *          - Use total or average value based on calculation type\n   *          - Set as blank if it's a string type\n   *            // This is a gap in functionality. Ideally subtotal would replicate the logic that generated\n   *            // the string values in the line items.\n   */\n  addSubTotals () { \n    var depth = this.addSubtotalDepth\n\n    // BUILD GROUPINGS / SORT VALUES\n    var subTotalGroups = []\n    var latest_group = []\n    this.data.forEach((row, i) => {    \n      if (row.type !== 'total') {\n        var group = []\n        for (var g = 0; g < depth; g++) {\n          var dim = this.dimensions[g].name\n          group.push(row.data[dim].value)\n        }\n        if (group.join('|') !== latest_group.join('|')) {\n          subTotalGroups.push(group)\n          latest_group = group\n        }\n        row.sort = [0, subTotalGroups.length-1, i]\n      }\n    })\n\n    var firstVisibleDimension = this.dimensions[0].name\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dimension = this.dimensions[i]\n      if (!dimension.hide) {\n        firstVisibleDimension = dimension.name\n        break\n      }\n    }\n\n    // GENERATE DATA ROWS FOR SUBTOTALS\n    subTotalGroups.forEach((subTotalGroup, s) => {\n      var subtotal = new Row('subtotal')\n      subtotal.id = 'Subtotal|' + subTotalGroup.join('|')\n\n      this.columns.forEach(column => {\n        subtotal.data[column.id] = { 'cell_style': ['total', 'subtotal'] } // set default\n\n        if (column.id === '$$$_index_$$$' || column.id === firstVisibleDimension ) {\n          var subtotal_label = subTotalGroup.join(' | ')\n          subtotal.data[column.id].value = subtotal_label\n        } \n\n        if (column.modelField.type == 'measure') {\n          if (Object.entries(this.subtotals_data).length > 0) {\n            subtotal.data[column.id] = { ...subtotal.data[column.id], ...this.subtotals_data[subtotal.id].data[column.id] }\n          } else {\n            if (column.pivoted) {\n              var cellKey = [column.pivot_key, column.modelField.name].join('.') \n            } else {\n              var cellKey = column.id\n            }\n\n            var subtotal_value = 0\n            var subtotal_items = 0\n            var rendered = ''\n            this.data.forEach(data_row => {\n              if (data_row.type == 'line_item' && data_row.sort[1] == s) { // data_row.sort[1] == s checks whether its part of the subtotal group\n                var value = data_row.data[cellKey].value\n                if (Number.isFinite(value)) {\n                  subtotal_value += value\n                  subtotal_items++\n                }\n              } \n            })\n            \n            if (column.modelField.calculation_type === 'average' && subtotal_items > 0) {\n              subtotal_value = subtotal_value / subtotal_items\n            }\n            if (subtotal_value) {\n              rendered = column.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(column.modelField.value_format, subtotal_value)\n            }\n            if (column.modelField.calculation_type === 'string') {\n              subtotal_value = ''\n              rendered = ''\n            } \n\n            var cellValue = {\n              value: subtotal_value,\n              rendered: rendered,\n              cell_style: ['subtotal', 'total']\n            }\n            subtotal.data[cellKey] = cellValue\n          }\n        }\n      })\n      subtotal.sort = [0, s, 9999]\n      this.data.push(subtotal)\n    })\n    this.sortData()\n    this.has_subtotals = true\n  }\n\n  /**\n   * Generates new column subtotals, where 2 pivot levels have been used\n   * // TODO: Could also have subtotals for 1 pivot tables sorted by measure\n   * \n   * 1. Derive the new column definitions\n   * 2. Use the new definitions to add subtotal columns to table.columns\n   * 3. Calculate the column subtotal values\n   */\n  addColumnSubTotals () {\n    var last_pivot_key = ''\n    var last_pivot_col = {}\n    var subtotals = []\n\n    var pivots = []\n    var pivot_dimension = this.pivot_fields[0]\n    this.pivot_values.forEach(pivot_value => {\n      var p_value = pivot_value['data'][pivot_dimension]\n      if (p_value !== null) { pivots.push(p_value) }\n    })\n    pivots = [...new Set(pivots)]\n\n    // DERIVE THE NEW COLUMN DEFINITIONS\n    pivots.forEach((pivot, p) => {\n      var highest_pivot_col = [0, '']\n      var previous_subtotal = null\n\n      this.measures.forEach((measure, m) => {\n        if (measure.can_pivot) {\n          var subtotal_col = {\n            modelField: measure,\n            pivot: pivot,\n            measure_idx: m,\n            pivot_idx: p,\n            columns: [],\n            id: ['$$$_subtotal_$$$', pivot, measure.name].join('.'),\n            after: ''\n          }\n  \n          this.columns.forEach((column, i) => {  \n            if (column.pivoted && column.levels[0] == pivot) {\n              if (column.modelField.name == measure.name) {\n                subtotal_col.columns.push(column.id)\n              }\n              if (column.levels[0] == pivot) {\n                if (i > highest_pivot_col[0]) {\n                  highest_pivot_col = [i, column.id]\n                }\n              }\n            }\n          })\n  \n          if (pivot != last_pivot_key) {\n            last_pivot_col[pivot] = highest_pivot_col[1]\n            previous_subtotal = null\n          }\n  \n          subtotal_col.after = previous_subtotal || last_pivot_col[pivot]\n          last_pivot_key = pivot\n          previous_subtotal = subtotal_col.id\n          subtotals.push(subtotal_col)\n        }\n      })\n    })\n\n    // USE THE NEW DEFINITIONS TO ADD SUBTOTAL COLUMNS TO TABLE.COLUMNS\n    subtotals.forEach((subtotal, s) => {\n      var modelField = this.measures[subtotal.measure_idx]\n      var column = new Column(subtotal.id, this, modelField)\n\n      column.levels = [subtotal.pivot, 'Subtotal']\n      column.sort_by_measure_values = [1, subtotal.measure_idx, ...column.levels]\n\n      var pivot_values = [...column.levels]\n      if (typeof pivot_values[pivot_values.length-1] == 'string') {\n        pivot_values[pivot_values.length-1] = 'ZZZZ'\n      } else {\n        pivot_values[pivot_values.length-1] = 9999\n      }\n      column.sort_by_pivot_values = [1, ...pivot_values, 10000 + s]\n      column.pivoted = true\n      column.subtotal = true\n      column.pivot_key = [subtotal.pivot, '$$$_subtotal_$$$'].join('|')\n      this.columns.push(column)\n    })\n    this.sortColumns()\n\n    // CALCULATE COLUMN SUB TOTAL VALUES\n    this.data.forEach(row => {\n      subtotals.forEach(subtotal => {\n        var subtotal_value = 0\n        subtotal.columns.forEach(field => {\n          subtotal_value += row.data[field].value\n        })\n        row.data[subtotal.id] = {\n          value: subtotal_value,\n          rendered: subtotal.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(subtotal.modelField.value_format, subtotal_value),\n          align: 'right',\n          cell_style: ['subtotal']\n        }\n        if (['subtotal', 'total'].includes(row.type)) { row.data[subtotal.id].cell_style.push('total') }\n      })\n    })\n\n    return subtotals\n  }\n\n  /**\n   * Variance calculation function to enable addVariance()\n   * @param {*} value_format \n   * @param {*} id \n   * @param {*} calc \n   * @param {*} baseline \n   * @param {*} comparison \n   */\n  calculateVariance (value_format, id, calc, baseline, comparison) {\n    this.data.forEach(row => {\n      var baseline_value = row.data[baseline.id].value\n      var comparison_value = row.data[comparison.id].value\n      if (calc === 'absolute') {\n        var cell_value = {\n          value: baseline_value - comparison_value,\n          rendered: value_format === '' ? (baseline_value - comparison_value).toString() : SSF.format(value_format, (baseline_value - comparison_value)),\n          cell_style: row.data[baseline.id].cell_style\n        }\n      } else {\n        var value = (baseline_value - comparison_value) / Math.abs(comparison_value)\n        if (!isFinite(value)) {\n          var cell_value = {\n            value: null,\n            rendered: '∞',\n            cell_style: row.data[baseline.id].cell_style\n          }\n        } else {\n          var cell_value = {\n            value: value,\n            rendered: SSF.format('#0.00%', value),\n            cell_style: row.data[baseline.id].cell_style\n          }\n        }\n      }\n      if (row.type == 'total' || row.type == 'subtotal') {\n        cell_value.cell_style.push('total')\n      }\n      if (row.type === 'subtotal') {\n        cell_value.cell_style.push('subtotal')\n      }\n      if (cell_value.value < 0) {\n        cell_value.cell_style.push('red')\n      }\n      row.data[id] = cell_value\n    })\n  }\n\n  createVarianceColumn (colpair) {\n    console.log('createVarianceColumn() colpair:', colpair)\n    if (!this.config.colSubtotals && colpair.variance.baseline.startsWith('$$$_subtotal_$$$')) {\n      console.log('Cannot calculate variance of column subtotals if subtotals disabled.')\n      return\n    }\n    var id = ['$$$_variance_$$$', colpair.calc, colpair.variance.baseline, colpair.variance.comparison].join('|')\n    var baseline = this.getColumnById(colpair.variance.baseline)\n    var comparison = this.getColumnById(colpair.variance.comparison)\n    console.log('baseline:', baseline)\n    var column = new Column(id, this, baseline.modelField)\n\n    if (colpair.calc === 'absolute') {\n      column.variance_type = 'absolute'\n      column.idx = baseline.idx + 1\n      column.pos = baseline.pos + 1\n      column.sort_by_measure_values = baseline.sort_by_measure_values.concat(1)\n      column.sort_by_pivot_values = baseline.sort_by_pivot_values.concat(1)\n      column.hide = !this.config['var_num|' + baseline.modelField.name]\n    } else {\n      column.variance_type = 'percentage'\n      column.idx = baseline.idx + 2\n      column.pos = baseline.pos + 2\n      column.sort_by_measure_values = baseline.sort_by_measure_values.concat(2)\n      column.sort_by_pivot_values = baseline.sort_by_pivot_values.concat(2)\n      column.unit = '%'\n      column.hide = !this.config['var_pct|' + baseline.modelField.name]\n    }\n\n    // TODO: Review sort values / algorithms\n    if (baseline.sort_by_measure_values.length < column.sort_by_measure_values.length) {\n      baseline.sort_by_measure_values.push(0)\n    }\n    if (baseline.sort_by_pivot_values.length < column.sort_by_pivot_values.length) {\n      baseline.sort_by_pivot_values.push(0)\n    }\n\n    if (typeof this.config.columnOrder[column.id] !== 'undefined') {\n      column.pos = this.config.columnOrder[column.id]\n    } \n\n    column.pivoted = baseline.pivoted\n    column.super = baseline.super\n    column.pivot_key = ''\n\n    column.levels = baseline.levels\n    if (this.config.groupVarianceColumns) {\n      if (this.config.sortColumnsBy === 'getSortByPivots') {\n        column.sort_by_pivot_values[0] = 1.5\n      }\n      if (baseline.levels.length === 1) {\n        column.levels = ['Variance']\n      } else {\n        column.levels = ['Variance', baseline.levels[1]]\n      }\n    }\n\n    this.columns.push(column)\n    if (colpair.variance.reverse) {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, comparison, baseline)\n    } else {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, baseline, comparison)\n    }\n  }\n\n  /**\n   * Function to add variance columns directly within table vis rather than requiring a table calc\n   * \n   * Takes list of variances configured by the user, and generates a list of column-pairs necessary\n   * to calculate those variances. There is at least one baseline-comparison pair per variance.\n   * Comparing different measures in a pivoted table will calculate a variance pair per pivot value.\n   * Comparing the same measure across pivots will calculate one pair less than there are pivots e.g.\n   * if comparing this year to last year, there are two \"Reporting Period\" values but only one variance.\n   */\n  addVarianceColumns () {\n    var variance_colpairs = []\n    var calcs = ['absolute', 'percent']\n    \n    Object.keys(this.variances).forEach(v => {\n      var variance = this.variances[v]\n      if (variance.comparison !== 'no_variance') {          \n        if (variance.type === 'vs_measure') {\n          if (!this.has_pivots) {\n            calcs.forEach(calc => {\n              variance_colpairs.push({\n                variance: variance,\n                calc: calc\n              })\n            })\n          } else {\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                calcs.forEach(calc => {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [pivot_value.key, variance.comparison].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                })\n              }\n            })\n          }\n        } else if (variance.type === 'by_pivot') { \n          if (this.pivot_fields.length === 1 || this.pivot_fields[1] === variance.comparison) {\n            this.pivot_values.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                if (!pivot_value.is_total) {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [this.pivot_values[index].key, variance.baseline].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                }\n              })\n            })\n          } else { // top pivot value - variance by subtotal\n            var top_level_pivots = []\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                var value = pivot_value.data[this.pivot_fields[0]]\n                if (!top_level_pivots.includes(value)) {\n                  top_level_pivots.push(value)\n                }\n              }\n            })\n            top_level_pivots.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                variance_colpairs.push({\n                  calc: calc,\n                  variance: {\n                    baseline: ['$$$_subtotal_$$$', pivot_value, variance.baseline].join('.'),\n                    comparison: ['$$$_subtotal_$$$', top_level_pivots[index], variance.baseline].join('.'),\n                    reverse: variance.reverse,\n                    type: variance.type\n                  }\n                })\n              })\n            })\n          } \n        }\n      }\n    })\n\n    variance_colpairs.forEach(colpair => {\n      this.createVarianceColumn(colpair)\n    })\n  }\n\n  /**\n   * Generate data series to support transposition\n   */\n  addColumnSeries() {\n    this.columns.forEach(column => {\n      var keys = []\n      var values = []\n      var types = []\n\n      this.data.forEach(row => {\n        keys.push(row.id)\n        values.push(row.data[column.id].value)\n        types.push(row.type)\n      })\n\n      var new_series = new ColumnSeries({\n        column: column,\n        is_numeric: column.modelField.is_numeric,\n        series: {\n          keys: keys,\n          values: values,\n          types: types\n        }\n      })\n      \n      column.series = new_series\n      this.column_series.push(new_series)\n    })\n  }\n\n  buildTotals(queryResponse) {\n    if (typeof queryResponse.totals_data !== 'undefined') {\n      if (typeof queryResponse.truncated !== 'undefined') {\n        var calculate_others = true\n      } else {\n        var calculate_others = false\n      }\n\n      var totals_ = queryResponse.totals_data\n\n      var firstVisibleDimension = this.dimensions[0].name\n      for (var i = 0; i > this.dimensions.length; i++) {\n        var dimension = this.dimensions[i]\n        if (!dimension.hide) {\n          firstVisibleDimension = dimension.name\n          break\n        }\n      }\n\n      var totals_row = new Row('total')\n      var others_row = new Row('line_item')\n\n      this.columns.forEach(column => {\n        var other_value = null\n        totals_row.id = 'Total'\n        others_row.id = 'Others'\n        totals_row.data[column.id] = { value: '', cell_style: ['total'] } // set a default on all columns\n        others_row.data[column.id] = { value: '', cell_style: [] } // set a default on all columns\n        \n        if (column.modelField.type == 'measure') {\n          if (column.pivoted == true) {\n            var cellValue = totals_[column.modelField.name][column.pivot_key]       \n          } else {\n            var cellValue = totals_[column.id]  \n          }\n          if (typeof cellValue.rendered == 'undefined' && typeof cellValue.html !== 'undefined' ){ // totals data may include html but not rendered value\n            cellValue.rendered = this.getRenderedFromHtml(cellValue)\n          }\n          if (calculate_others) {\n            if (['sum', 'count_distinct', 'count'].includes(column.modelField.calculation_type)) {\n              other_value = cellValue.value - column.series.series.sum\n            } else if (column.modelField.calculation_type === 'average') {\n              other_value = (cellValue.value + column.series.series.avg) / 2\n            }  \n          }\n          cellValue.cell_style = ['total']\n          totals_row.data[column.id] = cellValue\n          if (typeof totals_row.data[column.id].links !== 'undefined') {\n            totals_row.data[column.id].links.forEach(link => {\n              link.type = \"measure_default\"\n            })\n          }\n\n          if (calculate_others && other_value) {\n            var formatted_value = column.modelField.value_format === '' \n                  ? other_value.toString() \n                  : SSF.format(column.modelField.value_format, other_value)\n                  others_row.data[column.id] = { value: other_value, rendered: formatted_value } \n          }\n                    \n        }\n      })\n      totals_row.data['$$$_index_$$$'].value = 'TOTAL'\n      totals_row.data[firstVisibleDimension].value = 'TOTAL' \n      totals_row.sort = [1, 0, 0]\n\n      if (calculate_others) {\n        others_row.data['$$$_index_$$$'].value = 'Others'\n        others_row.data[firstVisibleDimension].value = 'Others'\n        others_row.sort = [1, -1, -1] \n      }\n      \n      this.data.push(totals_row)\n      calculate_others && this.data.push(others_row)\n\n      this.has_totals = true\n      this.sortData()\n    }\n  }\n\n  /**\n   * Extracts the formatted value of the field from the html: value\n   * There are cases (totals data) where the formatted value isn't available as usual rendered_value\n   * @param {*} cellValue \n   */\n  getRenderedFromHtml (cellValue) {\n    var parser = new DOMParser()\n    if (typeof cellValue.html !== 'undefined' && !['undefined', ''].includes(cellValue.html)) {\n      try {\n        var parsed_html = parser.parseFromString(cellValue.html, 'text/html')\n        var rendered = parsed_html.documentElement.textContent\n      }\n      catch(TypeError) {\n        var rendered = cellValue.html\n      }\n    } else {\n      var rendered = cellValue.value\n    }\n\n    return rendered\n  }\n\n  /**\n   * For rendering a transposed table i.e. with the list of measures on the left hand side\n   * 1. If used, add the 'header' column\n   * 2. Depending on column sort order, add pivot fields then a measure column (or vice versa) \n   * 3. Add a transposed column for every data row\n   */\n  transposeColumns () {\n    this.transposed_columns = []\n    var default_colspan = newArray(this.dimensions.length, 1)\n    var index_parent = {\n      align: 'left',\n      type: 'transposed_table_index',\n      is_table_calculation: false\n    }\n    var measure_parent = {\n      align: 'right',\n      type: 'transposed_table_measure',\n      is_table_calculation: false\n    }\n\n    if (this.useHeadings && !this.has_pivots) {\n      var transposed_column = new Column('header', this, index_parent)\n      transposed_column.labels = ['Header', '', '']\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'measure'\n      this.transposed_columns.push(transposed_column)\n    }\n\n    if (this.sortColsBy === 'getSortByPivots') {\n      this.pivots.forEach(pivot => {\n        var transposed_column = new Column(pivot.name, this, index_parent)\n        transposed_column.labels = [pivot.label_short, '', '']\n        transposed_column.colspans = default_colspan\n        transposed_column.type = 'dimension'\n        transposed_column.align = 'left'\n        this.transposed_columns.push(transposed_column)\n      })\n\n      var transposed_column = new Column('measure', this, index_parent)\n      transposed_column.labels = ['Meaure', '', '']\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'measure'\n      transposed_column.align = 'left'\n      this.transposed_columns.push(transposed_column)\n    } else {\n      var transposed_column = new Column('measure', this, index_parent)\n      transposed_column.labels = ['Meaure', '', '']\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'measure'\n      transposed_column.align = 'left'\n      this.transposed_columns.push(transposed_column)\n\n      this.pivots.forEach(pivot => {\n        var transposed_column = new Column(pivot.name, this, index_parent)\n        transposed_column.labels = [pivot.label_short, '', '']\n        transposed_column.colspans = default_colspan\n        transposed_column.type = 'dimension'\n        transposed_column.align = 'left'\n        this.transposed_columns.push(transposed_column)\n      })\n    }\n    \n    for (var h = 0; h < this.data.length; h++) {\n      var sourceRow = this.data[h]\n      if (sourceRow.type === 'line_item') {\n        var colspan = []\n        var labels = []\n        this.dimensions.forEach(dim => {\n          if (this.spanRows) {\n            colspan.push(this.rowspan_values[sourceRow.id][dim.name])\n          } else {\n            colspan.push(1)\n          }\n          labels.push(sourceRow.data[dim.name].value)\n        })\n      } else if (sourceRow.type === 'subtotal') {\n        var colspan = default_colspan\n        var labels = ['Subtotal'].concat(newArray(this.dimensions.length-1, ''))\n      } else if (sourceRow.type === 'total') {\n        var colspan = default_colspan\n        var labels = ['TOTAL'].concat(newArray(this.dimensions.length-1, ''))\n      }\n\n      var transposed_column = new Column(sourceRow.id, this, measure_parent)\n      transposed_column.transposed = true\n      transposed_column.colspans = colspan\n      transposed_column.labels = labels\n      transposed_column.align = 'right'\n      this.transposed_columns.push(transposed_column)\n    }\n  }\n\n  transposeRows () {\n    this.columns.filter(c => c.modelField.type === 'measure').forEach(column => {\n      var transposed_data = {}\n      this.data.forEach(row => {\n        if (typeof row.data[column.id] !== 'undefined') {\n          transposed_data[row.id] = row.data[column.id]\n          transposed_data[row.id]['align'] = 'right'\n          if (typeof transposed_data[row.id]['cell_style'] !== 'undefined') {\n            transposed_data[row.id]['cell_style'].push('transposed')\n          } else {\n            transposed_data[row.id]['cell_style'] = ['transposed']\n          }\n        } else {\n          console.log('row data does not exist for', column.id)\n        }\n      })\n\n      // INDEX FIELDS (header, pivot values, measure name)\n      var column_heading = column.modelField.heading\n      var key = 'heading|' + column.modelField.name\n      if (typeof this.config[key] !== 'undefined') {\n        column_heading = this.config[key] ? this.config[key] : column_heading\n      } \n      transposed_data.header = { value: column_heading, cell_style: [] }\n      if (column.subtotal) { transposed_data.header.cell_style.push('subtotal') }\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        var measure_level = this.pivots.length\n      } else {\n        var measure_level = 0\n      }\n      if (this.useHeadings) { measure_level++ }\n\n      transposed_data.measure = { value: column.getLabel(measure_level), cell_style: [] }\n      if (column.subtotal) { transposed_data.measure.cell_style.push('subtotal') }\n      if (column.modelField.style.includes('subtotal')) { transposed_data.measure.cell_style.push('subtotal') }\n      \n      this.pivot_fields.forEach((pivot_field, idx) => {\n        transposed_data[pivot_field] = { value: column.levels[idx], cell_style: [] }\n        if (column.subtotal) { transposed_data[pivot_field].cell_style.push('subtotal') }\n      })\n\n      var transposed_row = new Row('line_item')\n      transposed_row.id = column.id\n      transposed_row.modelField = column.modelField\n      transposed_row.hide = column.hide\n      transposed_row.rowspans = column.colspans\n      transposed_row.data = transposed_data\n\n      this.transposed_data.push(transposed_row)\n    })\n  }\n\n  /**\n   * Used to support rendering of table as vis. \n   * Returns an array of 0s, of length to match the required number of header rows\n   */\n  getLevels () {\n    var levels = []\n    if (!this.transposeTable) {\n      if (this.useHeadings && !this.has_pivots) { levels.push('headers level') }\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        this.pivots.forEach(pivot => {\n          levels.push(pivot.name)\n        })\n        levels.push('measures level')\n      } else {\n        levels.push('measures level')\n        this.pivots.forEach(pivot => {\n          levels.push(pivot.name)\n        })\n      }\n    } else {\n      levels = this.dimensions\n    }\n\n    return levels\n  }\n\n  /**\n   * Performs horizontal cell merge of header values by calculating required colspan values\n   * @param {*} columns \n   */\n  setColSpans (columns) {\n    var config = this.config\n    var header_levels = []\n    var span_values = []\n    var span_tracker = []\n    \n    // init header_levels and span_values arrays\n    for (var c = columns.length-1; c >= 0; c--) {\n      var column = columns[c]\n      var idx = columns.length - 1 - c\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        header_levels[idx] = [...column.levels, column.modelField.name]\n      } else {\n        header_levels[idx] = [column.modelField.name, ...column.levels]\n      }\n\n      if (this.useHeadings && !this.has_pivots) {\n        var column_heading = column.modelField.heading\n        var key = 'heading|' + column.modelField.name\n        if (typeof config[key] !== 'undefined') {\n          column_heading = config[key] ? config[key] : column_heading\n        } \n        header_levels[idx].unshift(column_heading)\n      }\n\n      span_values[c] = newArray(header_levels[idx].length, 1)\n    }\n\n    if (this.spanCols) {\n      span_tracker = newArray(header_levels[0].length, 1)\n\n      // FIRST PASS: loop through the pivot headers\n      for (var h = 0; h < header_levels.length; h++) {\n        var header = header_levels[h]\n        \n        // loop through the levels for the pivot headers\n        var start = 0\n        var end = header.length - 1\n\n        for (var l = start; l < end; l++) {\n          var this_value = header_levels[h][l]\n          if (h < header_levels.length-1) {\n            var above_value = header_levels[h+1][l]\n          }\n\n          // increment the tracker if values match\n          if (h < header_levels.length-1 && this_value == above_value) {\n            span_values[h][l] = -1;\n            span_tracker[l] += 1;\n          } else {\n          // partial reset if the value differs\n            for (var l_ = l; l_ < end; l_++) {\n              span_values[h][l_] = span_tracker[l_];\n              span_tracker[l_] = 1\n            }\n            break;\n          }\n        }\n      }\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        var label_level = this.pivot_fields.length + 1\n      } else {\n        var label_level = 0\n      }\n\n      // SECOND PASS: loop backwards through the levels for the column labels\n      for (var h = header_levels.length-1; h >= 0; h--) {\n        var this_value = header_levels[h][label_level]\n        if (h > 0) {\n          var next_value =header_levels[h-1][label_level] \n        }\n        // increment the span_tracker if dimensions match\n        if (h > 0 && this_value == next_value) {\n          span_values[h][label_level] = -1;\n          span_tracker[label_level] += 1;\n        } else {\n        // partial reset and continue if dimensions different\n          span_values[h][label_level] = span_tracker[label_level];\n          span_tracker[label_level] = 1\n        }\n      }\n\n      span_values.reverse()\n    }\n    \n    columns.forEach((column, idx) => {\n      column.colspans = span_values[idx]\n      this.colspan_values[column.id] = span_values[idx]\n    })\n\n    return columns\n  }\n\n  /**\n   * Builds array of arrays, used at by table vis to build column groups\n   * Three column groups: \n   * - index (dimensions)\n   * - measures (standard measures)\n   * - totals (supermeasures: row totals and some table calcs)\n   * \n   * For transposed tables:\n   * - index (headers, pivot value, measures)\n   * - measures (Includes subtotals. Cells contain measure values, header rows contain dimension values)\n   * - totals (totals)\n   */\n  getTableColumnGroups () {\n    var index_columns = []\n    var measure_columns = []\n    var total_columns = []\n\n    if (!this.transposeTable) {\n      this.columns.forEach(column => {\n        if (column.modelField.type === 'dimension' && !this.useIndexColumn && column.id !== '$$$_index_$$$' && !column.hide) {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'dimension' && this.useIndexColumn && column.id === '$$$_index_$$$') {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && !column.super && !column.hide) {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && column.super && !column.hide) {\n          total_columns.push({ id: column.id })\n        }\n      })\n    } else {\n      this.transposed_columns.forEach(column => {\n        if (column.modelField.type === 'transposed_table_index') {\n          index_columns.push({ id: column.id})\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id !== 'Total') {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id === 'Total') {\n          total_columns.push({ id: column.id })\n        }\n      })\n    }\n  }\n\n  /**\n   * Used to support rendering of data table as vis. \n   * Builds list of columns out of data set that should be displayed\n   * @param {*} i \n   */\n  getTableHeaders (i) {\n    if (!this.transposeTable) {\n      if (this.useIndexColumn) {\n        var columns = this.columns.filter(c => c.modelField.type == 'measure' || c.id === '$$$_index_$$$').filter(c => !c.hide)\n      } else {\n        var columns =  this.columns.filter(c => c.id !== '$$$_index_$$$').filter(c => !c.hide)\n      }\n\n      columns = this.setColSpans(columns).filter(c => c.colspans[i] > 0)\n\n      return columns\n\n    } else {\n      return this.transposed_columns.filter(c => c.colspans[i] > 0)\n    }\n\n  }\n\n  getDataRows () {\n    if (!this.transposeTable) {\n      return this.data\n    } else {\n      return this.transposed_data.filter(row => !row.hide)\n    }\n  }\n\n  /**\n   * Used to support rendering of data table as vis.\n   * For a given row of data, returns filtered array of cells – only those cells that are to be displayed.\n   * @param {*} row \n   */\n  getTableColumns (row) {\n    if (!this.transposeTable) {\n      // filter out unwanted dimensions based on index_column setting\n      if (this.useIndexColumn) {\n        var cells = this.columns.filter(c => c.modelField.type == 'measure' || c.id === '$$$_index_$$$').filter(c => !c.hide)\n      } else {\n        var cells =  this.columns.filter(c => c.id !== '$$$_index_$$$').filter(c => !c.hide)\n      }\n\n      // if we're using all dimensions, and we've got span_rows on, need to update the row\n      if (!this.useIndexColumn && this.spanRows) {\n      // set row spans, for dimension cells that should appear\n        cells.forEach(cell => {\n          cell.rowspan = 1 // set default\n          if (row.type === 'line_item' && this.rowspan_values[row.id][cell.id] > 0) {\n            cell.rowspan = this.rowspan_values[row.id][cell.id]\n          } \n        })\n        // filter out dimension cells that a hidden / merged into a cell above\n        if (row.type === 'line_item') {\n          cells = cells.filter(c => c.modelField.type == 'measure' || this.rowspan_values[row.id][c.id] > 0)\n        }\n      }\n    } else {\n      var cells = this.transposed_columns\n      cells.forEach((cell, idx) => {\n        cell.rowspan = 1\n        if (cell.modelField.type === 'transposed_table_index' && typeof row.rowspans[idx] !== 'undefined') {\n          cell.rowspan = this.colspan_values[row.id][idx]\n        }\n      })\n      cells = cells.filter(cell => cell.rowspan > 0)\n    }\n    return cells    \n  }\n\n  /**\n   * Used to support column drag'n'drop when rendering data table as vis.\n   * Updates the table.config with the new pos values.\n   * Accepts a callback function for interaction with the vis.\n   * @param {*} from \n   * @param {*} to \n   * @param {*} callback \n   */\n  moveColumns(from, to, updateColumnOrder) {\n    var config = this.config\n    if (from != to) {\n      var shift = to - from\n      var col_order = config.columnOrder\n      this.columns.forEach(col => {\n        if (col.modelField.type == 'measure' && !col.super) {\n          if (col.pos >= from && col.pos < from + 10) {\n            // console.log('MOVING COLUMN', col.id, col.pos, '->', col.pos + shift)\n            col.pos += shift\n          } else if (col.pos >= to && col.pos < from) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos + 10)\n            col.pos += 10\n          } else if (col.pos >= from + 10 && col.pos < to + 10) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos - 10)\n            col.pos -= 10\n          }\n          col_order[col.id] = col.pos\n        } \n      })\n      updateColumnOrder(col_order)\n    }\n  }\n\n  validateConfig() {\n    if (!['traditional', 'looker', 'contemporary', 'custom'].includes(this.config.theme)) {\n      this.config.theme = 'traditional'\n    }\n\n    if (!['fixed', 'auto'].includes(this.config.layout)) {\n      this.config.layout = 'fixed'\n    }\n\n    if (typeof this.config.transposeTable === 'undefined') {\n      this.config.transposeTable = false\n    }\n\n    Object.entries(this.config).forEach(option => {\n      if (option[1] === 'false') {\n        option[1] = false\n      } else if (option[1] === 'true') {\n        option[1] = true\n      }\n\n      if (option[0].split('|').length === 2) {\n        var [field_option, field_name] = option[0].split('|')\n        if (['label', 'heading', 'hide', 'style', 'switch', 'var_num', 'var_pct'].includes(field_option)) {\n          var keep_option = false\n          this.dimensions.forEach(dimension => {\n            if (dimension.name === field_name) { keep_option = true }\n          })\n          this.measures.forEach(measure => {\n            if (measure.name === field_name) { keep_option = true }\n          })\n          if (!keep_option) {\n            delete this.config[option[0]]\n          } \n        }\n      }\n    })\n  }\n\n  /**\n   * Returns dataset as a simple json object\n   * Includes line_items only (e.g. no row subtotals)\n   * \n   * Convenience function when using LookerData as an object to support e.g. Vega Lite visualisations\n   */\n  getSimpleJson() {\n    var raw_values = []\n    this.data.forEach(r => {\n      if (r.type === 'line_item') {\n        var row = {}\n        this.columns.forEach(c => {\n          row[c.id] = r.data[c.id].value\n        })\n        raw_values.push(row)\n      }\n    })\n    return raw_values\n  }\n}\n\nexports.VisPluginTableModel = VisPluginTableModel\n\n// MUST\n// TODO: update validateConfig to enforce ALL defaults\n// TODO: fix bug where Series extents be calculated as NaNs\n\n// SHOULD\n// TODO: tooltip for data cells\n// TODO: tooltip for index cells\n\n// NICE TO HAVE\n// TODO: row & cell highlight on mouseover\n// TODO: Investigate replacing all this.pivot_fields references with this.pivots\n// TODO: option for reporting in 000s or 000000s\n// TODO: more formatting options\n// TODO: addSpacerColumns\n// TODO: addUnitHeaders\n// TODO: addRowNumbers // to Index Column only?\n// TODO: build an explore URL (eg new table calcs) so user can save their variances as a query?\n//        - users would want to preserve column order, could that be done in vis_config?\n\n// FRs\n//\n// Ability to \"expand rows\" for print\n// Config widget to provide checklist display for arrays (e.g. apply multiple styles)\n// Additional info in queryResponse\n//  - filters set on the query\n//  - context (are we in a dashboard or an explore e.g. so that additional info & warnings can be shown in explore)\n// Additional info in details\n//  - Is this the \"final\" updateAsync call?\n// Pass through custom theme information\n// Ability to not just update filters, but also\n//  - Send table_calc expressions back to the explore (eg for variance analysis)\n//  - Send custom field definitions back to the explore\n//  - Request new fields be added to the explore (e.g. add \"hierarchies\" based on drill_fields:)\n// Ability to add horizontal lines to a config section (to split apart field-based options)"],"sourceRoot":""}
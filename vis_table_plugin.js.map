{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js","webpack:///./node_modules/ssf/ssf.js","webpack:///./src/vis_table_plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelField","vis","queryResponseField","this","view","view_label","label","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","push","heading","short_name","unit","tags","forEach","tag","split","styles","Array","isArray","Series","keys","values","types","length","line_items_only","with_subtotals","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelDimension","super","align","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","PivotField","short_label","Row","id","sort","data","Column","transposed","idx","pos","levels","pivot_key","colspans","variance_type","pivoted","subtotal","sort_by_measure_values","sort_by_pivot_values","level","labels","visId","useShortName","config_setting","useViewName","join","has_pivots","sortColsBy","useHeadings","_strrev","x","charAt","fill","pad0","v","pad_","rpad_","version","p2_32","pow","pad0r","round","pad0r1","pad0r2","isgeneral","charCodeAt","days","months","init_table","table_fmt","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","basedate","dnthresh","getTime","base1904","datenum_local","epoch","getTimezoneOffset","_general_int","general_fmt_num","gnr1","gnr2","gnr4","gnr5","gnr6","gfn5","indexOf","replace","V","LOG10E","toPrecision","w","toFixed","toExponential","gfn2","substr","gfn3","gfn4","general_fmt","Error","write_date","fmt","val","ss0","ss","tt","outl","commaify","j","_general_num","_general","write_num","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","String","fromCharCode","rnd","dd","dec","write_num_flt","match","ffmt","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","slice","lastIndexOf","split_fmt","in_str","_split","abstime","fmt_is_date","toUpperCase","eval_fmt","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","is_date","_eval","cfregex","cfregex2","chkcond","thresh","parseFloat","dateNF","table","f","lat","m1","m2","choose_fmt","load_entry","undefined","load","_table","get_table","load_table","tbl","make_ssf","DO_NOT_EXPORT_SSF","tableModelCoreOptions","theme","section","display","default","order","customTheme","layout","columnOrder","rowSubtotals","display_size","colSubtotals","spanRows","spanCols","subtotalDepth","sortColumnsBy","groupVarianceColumns","indexColumn","tranposeTable","VisPluginTableModel","lookerData","queryResponse","dimensions","measures","columns","subtotals_data","transposed_columns","transposed_data","pivot_fields","pivots","pivot_values","variances","column_series","colspan_values","rowspan_values","useIndexColumn","addRowSubtotals","addSubtotalDepth","has_totals","has_subtotals","has_row_totals","has_supers","transposeTable","checkPivotsAndSupermeasures","checkVarianceCalculations","addDimensions","addMeasures","buildIndexColumn","checkSubtotalsData","buildRows","addColumnSeries","buildTotals","updateRowSpanValues","addSubTotals","addColumnSubTotals","addVarianceColumns","sortColumns","applyFormatting","transposeColumns","transposeRows","validateConfig","newOptions","dimension","measure","comparisonOptions","pivotComparisons","pivot_field","option","concat","comparisonMeasure","includeMeasure","unshift","fields","supermeasure_like","startsWith","baseline","reverse","comparison","col_idx","dimension_like","dim","measure_like","newMeasure","pivot_value","columnId","level_sort_values","supermeasure","meas","index_column","lookerSubtotal","visSubtotal","groups","group","cell_style","isSubtotal","lookerRow","cell_series","_parsed","to_string","all_dims","last_dim","getRenderedFromHtml","html","col","span_tracker","this_cell_value","cell_above_value","d_","dim_","depth","param","filter","setColSpans","subTotalGroups","latest_group","g","firstVisibleDimension","subTotalGroup","subtotal_label","entries","cellKey","subtotal_value","subtotal_items","data_row","Number","isFinite","cellValue","sortData","last_pivot_key","last_pivot_col","subtotals","pivot_dimension","p_value","Set","pivot","highest_pivot_col","previous_subtotal","subtotal_col","measure_idx","pivot_idx","after","field","calc","baseline_value","comparison_value","cell_value","colpair","variance","getColumnById","calculateVariance","variance_colpairs","calcs","is_total","index","top_level_pivots","createVarianceColumn","new_series","totals_data","truncated","calculate_others","totals_","totals_row","others_row","other_value","links","link","parser","DOMParser","parseFromString","documentElement","textContent","TypeError","default_colspan","index_parent","measure_parent","transposed_column","h","sourceRow","colspan","column_heading","header","measure_level","getLabel","transposed_row","rowspans","header_levels","span_values","end","this_value","above_value","l_","label_level","next_value","index_columns","measure_columns","total_columns","cells","cell","rowspan","from","to","updateColumnOrder","shift","col_order","raw_values"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBCpErD,MAAMC,EACJ,aAAY,IAAEC,EAAG,mBAAEC,IACjBC,KAAKF,IAAMA,EACXE,KAAK5B,KAAO2B,EAAmB3B,KAC/B4B,KAAKC,KAAOF,EAAmBG,YAAc,GAC7CF,KAAKG,MAAQJ,EAAmBK,aAAeL,EAAmBI,MAClEH,KAAKK,WAAaN,EAAmBM,WACrCL,KAAKM,SAAW,CAAC,OAAQ,WAAY,QAAQC,SAASR,EAAmBS,MACzER,KAAKS,aAAeV,EAAmBU,aAEvCT,KAAKU,SAAW,IACgB,aAA5BX,EAAmBS,MAAuBT,EAAmBY,aAC/DX,KAAKU,SAAuC,aAA5BX,EAAmBS,KAAsB,WAAaT,EAAmBY,UAAUvC,MAGrG4B,KAAKY,MAAO,OACwC,IAAzCZ,KAAKF,IAAIe,OAAO,QAAUb,KAAK5B,OACpC4B,KAAKF,IAAIe,OAAO,QAAUb,KAAK5B,QACjC4B,KAAKY,MAAO,GAIhBZ,KAAKc,MAAQ,GACb,IAAIC,EAAgBf,KAAKF,IAAIe,OAAO,SAAWb,KAAK5B,WACvB,IAAlB2C,IACa,SAAlBA,EACFf,KAAKY,MAAO,EAEZZ,KAAKc,MAAME,KAAKD,IAIpBf,KAAKiB,QAAU,GACfjB,KAAKkB,WAAa,GAClBlB,KAAKmB,KAAO,QAC2B,IAA5BpB,EAAmBqB,MAC5BrB,EAAmBqB,KAAKC,QAAQC,IAC9B,IAAIF,EAAOE,EAAIC,MAAM,KACrB,GAAgB,cAAZH,EAAK,GACP,OAAQA,EAAK,IACX,IAAK,UACHpB,KAAKiB,QAAUG,EAAK,GAAK,MAC3B,IAAK,aACHpB,KAAKkB,WAAaE,EAAK,GAAK,MAC9B,IAAK,OACHpB,KAAKmB,KAAOC,EAAK,GAAK,MACxB,IAAK,SACHpB,KAAKwB,OAASC,MAAMC,QAAQN,EAAK,IAAMA,EAAK,GAAK,CAACA,EAAK,QA0CrE,MAAMO,EACJ,aAAY,KAAEC,EAAI,OAAEC,EAAM,MAAEC,EAAQ,KAClC,GAAIF,EAAKG,SAAWF,EAAOE,OAAS,CAClC/B,KAAK4B,KAAOA,EACZ5B,KAAK6B,OAASA,EACd7B,KAAK8B,MAAQA,EAEb,IAAIE,EAAkB,GAClBC,EAAiB,GAErBjC,KAAK6B,OAAOR,QAAQ,CAACvC,EAAOjB,KAC1BmC,KAAK8B,MAAMjE,QAAyB,IAAbiE,EAAMjE,GAAqBiE,EAAMjE,GAAK,YACvC,cAAlBmC,KAAK8B,MAAMjE,IACbmE,EAAgBhB,KAAKlC,GACrBmD,EAAejB,KAAKlC,IACO,aAAlBkB,KAAK8B,MAAMjE,IACpBoE,EAAejB,KAAKlC,KAIxBkB,KAAKkC,gBAAkBC,KAAKC,IAAIH,GAChCjC,KAAKqC,gBAAkBF,KAAKG,IAAIL,GAChCjC,KAAKoC,IAAMD,KAAKC,IAAIJ,GACpBhC,KAAKsC,IAAMH,KAAKG,IAAIN,GACpBhC,KAAKuC,IAAMP,EAAgBQ,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAG,GACnD1C,KAAK2C,MAAQX,EAAgBD,OAC7B/B,KAAK4C,IAAMZ,EAAgBD,OAAS,EAAI/B,KAAKuC,IAAMP,EAAgBD,OAAS,UAE5Ec,QAAQC,IAAI,iEAoKlBnF,EAAQoF,SAjSS,SAAShB,EAAQjD,GAEhC,IADA,IAAIkE,EAAM,GACDlF,EAAI,EAAGA,EAAIiE,EAAQjE,IAC1BkF,EAAIhC,KAAKlC,GAEX,OAAOkE,GA6RTrF,EAAQsF,eAnOR,cAA6BpD,EAC3B,aAAY,IAAEC,EAAG,mBAAEC,IACjBmD,MAAM,CAAEpD,MAAKC,uBAEbC,KAAKQ,KAAO,YACZR,KAAKmD,MAAQ,SA+NjBxF,EAAQyF,aA3NR,cAA2BvD,EACzB,aAAY,IAAEC,EAAG,mBAAEC,EAAkB,UAAEsD,IACrCH,MAAM,CAAEpD,MAAKC,uBAEbC,KAAKQ,KAAO,UACZR,KAAKmD,MAAQ,QAEbnD,KAAKsD,0BAA0E,IAA5CvD,EAAmBuD,sBAAwCvD,EAAmBuD,qBACjHtD,KAAKuD,iBAAmBxD,EAAmBS,KAC3CR,KAAKwD,UAAYzD,EAAmByD,UACpCxD,KAAKqD,UAAYA,IAkNrB1F,EAAQ8F,WAlKR,MACE,aAAY,OAAEC,EAAM,IAAEC,EAAG,WAAEC,EAAU,OAAEC,IACrC7D,KAAK0D,OAASA,EACd1D,KAAK2D,IAAMA,EACX3D,KAAK4D,WAAaA,EAClB5D,KAAK6D,OAAS,IAAIlC,EAAOkC,GAG3B,YACE,IAAIC,EAAW,GAQf,OAPA9D,KAAK6D,OAAOjC,KAAKP,QAAQ,CAACjC,EAAKvB,KAC7BiG,GAAY1E,EAAM,IAClB,IAAI2E,EAA0D,KAAxC/D,KAAK0D,OAAOM,WAAWvD,aACrBT,KAAK6D,OAAOhC,OAAOhE,GAAGoG,WACtBC,IAAIC,OAAOnE,KAAK0D,OAAOM,WAAWvD,aAAcT,KAAK6D,OAAOhC,OAAOhE,IAC3FiG,GAAYC,EAAkB,MAEzBD,IAkJXnG,EAAQyG,aA9IR,MACE,aAAY,OAAEV,EAAM,WAAErD,EAAU,OAAEwD,IAChC7D,KAAK0D,OAASA,EACd1D,KAAKK,WAAaA,EAClBL,KAAK6D,OAAS,IAAIlC,EAAOkC,KA2I7BlG,EAAQ0G,WAhNR,MACE,aAAY,mBAAEtE,IACZC,KAAK5B,KAAO2B,EAAmB3B,KAC/B4B,KAAKG,MAAQJ,EAAmBuE,aAAevE,EAAmBI,MAClEH,KAAKC,KAAOF,EAAmBG,YAAc,KA6MjDvC,EAAQ4G,IAnIR,MACE,YAAY/D,EAAO,aACjBR,KAAKwE,GAAK,GACVxE,KAAKgE,WAAa,KAClBhE,KAAKQ,KAAOA,EACZR,KAAKyE,KAAO,GACZzE,KAAK0E,KAAO,KA8HhB/G,EAAQgH,OAjHR,MACE,YAAYH,EAAI1E,EAAKkE,GACnBhE,KAAKwE,GAAKA,EACVxE,KAAKF,IAAMA,EACXE,KAAKgE,WAAaA,EAClBhE,KAAK4E,YAAa,EAElB5E,KAAK6E,IAAM,EACX7E,KAAK8E,IAAM,EACX9E,KAAK+E,OAAS,GACd/E,KAAKgF,UAAY,GACjBhF,KAAKiF,SAAW,GAEhBjF,KAAKmB,KAAO6C,EAAW7C,MAAQ,GAC/BnB,KAAKY,KAAOoD,EAAWpD,OAAQ,EAC/BZ,KAAKkF,cAAgB,GACrBlF,KAAKmF,SAAU,EACfnF,KAAKoF,UAAW,EAChBpF,KAAKkD,OAAQ,EAEblD,KAAK6D,OAAS,KAEd7D,KAAKqF,uBAAyB,GAC9BrF,KAAKsF,qBAAuB,GAO9B,SAAUC,GACR,GAAIvF,KAAK4E,WACP,OAAO5E,KAAKwF,OAAOD,GAGrB,QAA8B,IAAnBvF,KAAKF,IAAI2F,OAA4C,iBAAnBzF,KAAKF,IAAI2F,MAA0B,CAC9E,IAAItF,EAAQH,KAAKF,IAAI4F,cAAe1F,KAAKgE,WAAW9C,YAAsClB,KAAKgE,WAAW7D,MAC1G,OAAQH,KAAKkF,eACX,IAAK,WACC/E,EAAQ,QACZ,MACF,IAAK,aACCA,EAAQ,cAIZA,EAAQH,KAAKgE,WAAW7D,MAG9B,IA0BUwF,QAzBoB,KAD1BA,EAAiB3F,KAAKF,IAAIe,OAAO,SAAWb,KAAKgE,WAAW5F,QACnBuH,IAAmB3F,KAAKgE,WAAW7D,QAC9EA,EAAQwF,GAAkCxF,QAGR,IAAzBH,KAAKF,IAAI8F,aAA+B5F,KAAKF,IAAI8F,cAC1DzF,EAAQ,CAACH,KAAKgE,WAAW/D,KAAME,GAAO0F,KAAK,WAGV,IAAxB7F,KAAKF,IAAIgG,cACd9F,KAAKF,IAAIgG,WACiB,oBAAxB9F,KAAKF,IAAIiG,WACPR,EAAQvF,KAAK+E,OAAOhD,SACtB5B,EAAQH,KAAK+E,OAAOQ,IAKlBA,GAAS,IACXpF,EAAQH,KAAK+E,OAAOQ,EAAQ,IAM5BvF,KAAKF,IAAIkG,aAAyB,IAAVT,IAGxBpF,OAD4B,KAD1BwF,EAAiB3F,KAAKF,IAAIe,OAAO,WAAab,KAAKgE,WAAW5F,QAExDuH,GAEA3F,KAAKgE,WAAW/C,UAOhC,OAAOd,EAGT,qBAAsB0E,GACkB,GAAlC7E,KAAKqF,uBAAuB,KACzBrF,KAAKmF,SAAYnF,KAAKoF,WACzBpF,KAAKqF,uBAAyB,CAAC,EAAGR,KAKxC,oBACE,OAAO7E,KAAKqF,uBAGd,kBACE,OAAOrF,KAAKsF,wB,gBChShB,IAAIpB,EAAM,IACK,SAAkBA,GAEjC,SAAS+B,EAAQC,GAAiC,IAA5B,IAAI5H,EAAI,GAAIT,EAAIqI,EAAEnE,OAAO,EAASlE,GAAG,GAAGS,GAAK4H,EAAEC,OAAOtI,KAAM,OAAOS,EACzF,SAAS8H,EAAKlI,EAAEJ,GAAiB,IAAZ,IAAIQ,EAAI,GAAUA,EAAEyD,OAASjE,GAAGQ,GAAGJ,EAAG,OAAOI,EAClE,SAAS+H,EAAKC,EAAEnI,GAAG,IAAIY,EAAE,GAAGuH,EAAG,OAAOvH,EAAEgD,QAAQ5D,EAAEY,EAAEqH,EAAK,IAAIjI,EAAEY,EAAEgD,QAAQhD,EACzE,SAASwH,EAAKD,EAAEnI,GAAG,IAAIY,EAAE,GAAGuH,EAAE,OAAOvH,EAAEgD,QAAQ5D,EAAEY,EAAEqH,EAAK,IAAIjI,EAAEY,EAAEgD,QAAQhD,EACxE,SAASyH,EAAMF,EAAEnI,GAAG,IAAIY,EAAE,GAAGuH,EAAG,OAAOvH,EAAEgD,QAAQ5D,EAAEY,EAAEA,EAAEqH,EAAK,IAAIjI,EAAEY,EAAEgD,QALpEmC,EAAIuC,QAAU,SAQd,IAAIC,EAAQvE,KAAKwE,IAAI,EAAE,IACvB,SAASC,EAAMN,EAAEnI,GAAG,OAAGmI,EAAEI,GAAOJ,GAAGI,EAHnC,SAAgBJ,EAAEnI,GAAG,IAAIY,EAAE,GAAGoD,KAAK0E,MAAMP,GAAI,OAAOvH,EAAEgD,QAAQ5D,EAAEY,EAAEqH,EAAK,IAAIjI,EAAEY,EAAEgD,QAAQhD,EAGtC+H,CAAOR,EAAEnI,GAF1D,SAAgBmI,EAAEnI,GAAG,IAAIY,EAAE,GAAGuH,EAAG,OAAOvH,EAAEgD,QAAQ5D,EAAEY,EAAEqH,EAAK,IAAIjI,EAAEY,EAAEgD,QAAQhD,EAEiBgI,CAAtB5E,KAAK0E,MAAMP,GAAoBnI,GACrG,SAAS6I,EAAUpH,EAAG/B,GAAiB,OAAZA,EAAIA,GAAK,EAAU+B,EAAEmC,QAAU,EAAIlE,GAA8B,MAAR,GAAhB+B,EAAEqH,WAAWpJ,KAA6C,MAAR,GAAlB+B,EAAEqH,WAAWpJ,EAAE,KAA6C,MAAR,GAAlB+B,EAAEqH,WAAWpJ,EAAE,KAA6C,MAAR,GAAlB+B,EAAEqH,WAAWpJ,EAAE,KAA6C,MAAR,GAAlB+B,EAAEqH,WAAWpJ,EAAE,KAA6C,KAAR,GAAlB+B,EAAEqH,WAAWpJ,EAAE,KAA4C,MAAR,GAAlB+B,EAAEqH,WAAWpJ,EAAE,IAC5R,IAAIqJ,EAAO,CACV,CAAC,MAAO,UACR,CAAC,MAAO,UACR,CAAC,MAAO,WACR,CAAC,MAAO,aACR,CAAC,MAAO,YACR,CAAC,MAAO,UACR,CAAC,MAAO,aAELC,EAAS,CACZ,CAAC,IAAK,MAAO,WACb,CAAC,IAAK,MAAO,YACb,CAAC,IAAK,MAAO,SACb,CAAC,IAAK,MAAO,SACb,CAAC,IAAK,MAAO,OACb,CAAC,IAAK,MAAO,QACb,CAAC,IAAK,MAAO,QACb,CAAC,IAAK,MAAO,UACb,CAAC,IAAK,MAAO,aACb,CAAC,IAAK,MAAO,WACb,CAAC,IAAK,MAAO,YACb,CAAC,IAAK,MAAO,aAEd,SAASC,EAAWrI,GACnBA,EAAE,GAAK,UACPA,EAAE,GAAK,IACPA,EAAE,GAAK,OACPA,EAAE,GAAK,QACPA,EAAE,GAAK,WACPA,EAAE,GAAK,KACPA,EAAE,IAAK,QACPA,EAAE,IAAK,WACPA,EAAE,IAAK,QACPA,EAAE,IAAK,UACPA,EAAE,IAAK,SACPA,EAAE,IAAK,WACPA,EAAE,IAAK,QACPA,EAAE,IAAK,SACPA,EAAE,IAAK,aACPA,EAAE,IAAK,gBACPA,EAAE,IAAK,OACPA,EAAE,IAAK,UACPA,EAAE,IAAK,cACPA,EAAE,IAAK,iBACPA,EAAE,IAAK,sBACPA,EAAE,IAAK,sBACPA,EAAE,IAAK,2BACPA,EAAE,IAAK,QACPA,EAAE,IAAK,YACPA,EAAE,IAAK,SACPA,EAAE,IAAK,WACPA,EAAE,IAAK,IACPA,EAAE,IAAK,2BACPA,EAAE,OAAQ,UAGX,IAAIsI,EAAY,GAEhB,SAASC,EAAKpB,EAAGqB,EAAGC,GAMnB,IALA,IAAIC,EAAMvB,EAAI,GAAK,EAAI,EACnBwB,EAAIxB,EAAIuB,EACRE,EAAM,EAAGC,EAAM,EAAGC,EAAI,EACtBC,EAAM,EAAGC,EAAM,EAAGC,EAAI,EACtBC,EAAI9F,KAAK+F,MAAMR,GACbK,EAAMR,IAEXM,GADAI,EAAI9F,KAAK+F,MAAMR,IACPE,EAAMD,EACdK,EAAIC,EAAIF,EAAMD,IACVJ,EAAIO,EAAK,QACbP,EAAI,GAAKA,EAAIO,GACbN,EAAMC,EAAKA,EAAMC,EACjBC,EAAMC,EAAKA,EAAMC,EAGlB,GADGA,EAAIT,IAAQQ,EAAMR,GAAKS,EAAIF,EAAKD,EAAIF,IAAcK,EAAID,EAAKF,EAAID,KAC9DJ,EAAO,MAAO,CAAC,EAAGC,EAAMI,EAAGG,GAC/B,IAAIG,EAAIhG,KAAK+F,MAAMT,EAAMI,EAAEG,GAC3B,MAAO,CAACG,EAAGV,EAAII,EAAIM,EAAEH,EAAGA,GAEzB,SAASI,EAAgB9B,EAAE+B,EAAKC,GAC/B,GAAGhC,EAAI,SAAWA,EAAI,EAAG,OAAO,KAChC,IAAIiC,EAAU,EAAFjC,EAAMkC,EAAOrG,KAAK+F,MAAM,OAAS5B,EAAIiC,IAAQE,EAAI,EACzDC,EAAK,GACLC,EAAI,CAACpB,EAAEgB,EAAMK,EAAEJ,EAAMK,EAAE,OAAOvC,EAAEiC,GAAMC,EAAKM,EAAE,EAAE7K,EAAE,EAAEE,EAAE,EAAE4K,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEd,EAAE,GAOzE,GANGhG,KAAK+G,IAAIP,EAAIE,GAAK,OAAMF,EAAIE,EAAI,GAChCR,GAAQA,EAAKc,WAAUZ,GAAQ,MAC/BI,EAAIE,EAAI,QACVF,EAAIE,EAAI,EACK,SAARL,IAAiBG,EAAIC,EAAIJ,EAAO,IAAKD,IAAQI,EAAIpB,IAE3C,KAATgB,EAAcG,EAAOJ,EAAK,CAAC,KAAK,GAAG,IAAM,CAAC,KAAK,EAAE,IAAKG,EAAI,OACxD,GAAY,IAATF,EAAaG,EAAOJ,EAAK,CAAC,KAAK,EAAE,IAAM,CAAC,KAAK,EAAE,GAAIG,EAAI,MAC1D,CACDF,EAAO,MAAMA,EAEhB,IAAIpK,EAAI,IAAIiL,KAAK,KAAM,EAAG,GAC1BjL,EAAEkL,QAAQlL,EAAEmL,UAAYf,EAAO,GAC/BG,EAAO,CAACvK,EAAEoL,cAAepL,EAAEqL,WAAW,EAAErL,EAAEmL,WAC1Cb,EAAMtK,EAAEsL,SACLlB,EAAO,KAAIE,GAAOA,EAAM,GAAK,GAC7BH,IAAIG,EA+DqB,GAxD7B,OALAE,EAAIG,EAAIJ,EAAK,GAAIC,EAAI1K,EAAIyK,EAAK,GAAIC,EAAIxK,EAAIuK,EAAK,GAC/CC,EAAIM,EAAIT,EAAO,GAAIA,EAAOrG,KAAK+F,MAAMM,EAAO,IAC5CG,EAAIK,EAAIR,EAAO,GAAIA,EAAOrG,KAAK+F,MAAMM,EAAO,IAC5CG,EAAII,EAAIP,EACRG,EAAIR,EAAIM,EACDE,EAjDRvB,EAAWC,GAmDXnD,EAAIkE,gBAAkBA,EACtB,IAAIsB,EAAW,IAAIN,KAAK,KAAM,GAAI,GAAI,EAAG,EAAG,GACxCO,EAAWD,EAASE,UACpBC,EAAW,IAAIT,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GAC1C,SAASU,EAAcxD,EAAG6C,GACzB,IAAIY,EAAQzD,EAAEsD,UAGd,OAFGT,EAAUY,GAAS,UACdzD,GAAKuD,IAAUE,GAAS,QACxBA,GAASJ,EAAoE,KAAxDrD,EAAE0D,oBAAsBN,EAASM,uBAAiC,MAGhG9F,EAAI+F,aADJ,SAAyB3D,GAAK,OAAOA,EAAErC,SAAS,KAEhD,IAAIiG,EAAkB,WACtB,IAAIC,EAAO,kBAAmBC,EAAO,QAASC,EAAO,iBAAkBC,EAAO,WAAYC,EAAO,eAgBjG,SAASC,EAAKlM,GACb,OAAOA,EAAEmM,QAAQ,MAAQ,EAAInM,EAAEoM,QAAQN,EAAK,IAAIM,QAAQP,EAAK,OAAS7L,EAEvE,OAAO,SAAyBgI,GAC/B,IAAuDhI,EAAnDqM,EAAIxI,KAAK+F,MAAM/F,KAAKW,IAAIX,KAAK+G,IAAI5C,IAAInE,KAAKyI,QAK9C,OAJuBtM,EAApBqM,IAAM,GAAKA,IAAM,EAAOrE,EAAEuE,YAAY,GAAGF,GACpCxI,KAAK+G,IAAIyB,IAAM,EArBxB,SAAcrE,GACb,IAAIwE,EAAKxE,EAAE,EAAE,GAAG,GACZhI,EAAIkM,EAAKlE,EAAEyE,QAAQ,KAAM,OAAGzM,EAAEyD,QAAU+I,IAC5CxM,EAAIgI,EAAEuE,YAAY,KAAU9I,QAAU+I,EADgBxM,EAE/CgI,EAAE0E,cAAc,GAiBOC,CAAK3E,GACrB,KAANqE,EAAcrE,EAAEyE,QAAQ,IAAIG,OAAO,EAAE,IAhB9C,SAAc5E,GACb,IAAIhI,EAAIgI,EAAEyE,QAAQ,IAAIL,QAAQP,EAAK,OAEnC,OADG7L,EAAEyD,QAAUuE,EAAE,EAAE,GAAG,MAAKhI,EAAIgI,EAAEuE,YAAY,IACtCvM,EAcE6M,CAAK7E,GACPkE,EAbR,SAAclM,GACb,IAAI,IAAIT,EAAI,EAAGA,GAAKS,EAAEyD,SAAUlE,EAAG,GAAgC,MAAV,GAAlBS,EAAE2I,WAAWpJ,IAAoB,OAAOS,EAAEoM,QAAQL,EAAK,OAAOK,QAAQJ,EAAK,KAAKI,QAAQ,IAAI,KAAKA,QAAQH,EAAK,SACrJ,OAAOjM,EAWK8M,CAAK9M,KA1BI,GA6BtB,SAAS+M,EAAY/E,EAAG+B,GACvB,cAAc/B,GACb,IAAK,SAAU,OAAOA,EACtB,IAAK,UAAW,OAAOA,EAAI,OAAS,QACpC,IAAK,SAAU,OAAU,EAAFA,KAASA,EAAIA,EAAErC,SAAS,IAAMiG,EAAgB5D,GACrE,IAAK,YAAa,MAAO,GACzB,IAAK,SACJ,GAAQ,MAALA,EAAW,MAAO,GACrB,GAAGA,aAAa8C,KAAM,OAAOjF,EAAO,GAAI2F,EAAcxD,EAAG+B,GAAQA,EAAKc,UAAWd,GAEnF,MAAM,IAAIiD,MAAM,wCAA0ChF,GAK3D,SAASiF,EAAW/K,EAAMgL,EAAKC,EAAKC,GACnC,IAAiC/C,EAA7BrK,EAAE,GAAIqN,EAAG,EAAGC,EAAG,EAAG9C,EAAI2C,EAAI3C,EAAQ+C,EAAO,EAC7C,OAAOrL,GACN,KAAK,GACJsI,EAAI2C,EAAI3C,EAAI,IAEb,KAAK,IACL,OAAO0C,EAAIzJ,QACV,KAAK,EAAG,KAAK,EAAG4G,EAAMG,EAAI,IAAK+C,EAAO,EAAG,MACzC,QAASlD,EAAMG,EAAI,IAAO+C,EAAO,EAChC,MACF,KAAK,IACL,OAAOL,EAAIzJ,QACV,KAAK,EAAG,KAAK,EAAG4G,EAAM8C,EAAIxN,EAAG4N,EAAOL,EAAIzJ,OAAQ,MAChD,KAAK,EAAG,OAAOoF,EAAOsE,EAAIxN,EAAE,GAAG,GAC/B,KAAK,EAAG,OAAOkJ,EAAOsE,EAAIxN,EAAE,GAAG,GAC/B,QAAS,OAAOkJ,EAAOsE,EAAIxN,EAAE,GAAG,GAC/B,MACF,KAAK,IACL,OAAOuN,EAAIzJ,QACV,KAAK,EAAG,KAAK,EAAG4G,EAAM8C,EAAItN,EAAG0N,EAAOL,EAAIzJ,OAAQ,MAChD,KAAK,EAAG,OAAOmF,EAAKuE,EAAItD,GAAG,GAC3B,QAAS,OAAOjB,EAAKuE,EAAItD,GAAG,GAC3B,MACF,KAAK,IACL,OAAOqD,EAAIzJ,QACV,KAAK,EAAG,KAAK,EAAG4G,EAAM,GAAG8C,EAAI1C,EAAE,IAAI,GAAI8C,EAAOL,EAAIzJ,OAAQ,MAC1D,QAAS,KAAM,oBAAsByJ,EACpC,MACF,KAAK,GACL,OAAOA,EAAIzJ,QACV,KAAK,EAAG,KAAK,EAAG4G,EAAM8C,EAAI1C,EAAG8C,EAAOL,EAAIzJ,OAAQ,MAChD,QAAS,KAAM,oBAAsByJ,EACpC,MACF,KAAK,GACL,OAAOA,EAAIzJ,QACV,KAAK,EAAG,KAAK,EAAG4G,EAAM8C,EAAIzC,EAAG6C,EAAOL,EAAIzJ,OAAQ,MAChD,QAAS,KAAM,sBAAwByJ,EACtC,MACF,KAAK,IACJ,GAAU,KAAPA,GAAqB,MAAPA,GAAsB,MAAPA,GAAsB,OAAPA,GAAuB,QAAPA,EAAe,KAAM,sBAAwBA,EAC5G,OAAa,IAAVC,EAAI5C,GAAmB,KAAP2C,GAAqB,MAAPA,GACvBI,EAAVF,GAAO,EAAgB,IAARA,EAAY,IAAO,IAChB,IAARA,EAAY,GAAK,GAC3BC,EAAKxJ,KAAK0E,MAAM,GAAM4E,EAAIxC,EAAIwC,EAAI5C,MACzB,GAAG+C,IAAID,EAAK,GACV,MAARH,EAA2B,IAAPG,EAAW,IAAM,GAAGA,EAAGC,GAC9CtN,EAAI+H,EAAKsF,EAAG,EAAID,GACL,OAARF,EAAqBlN,EAAE4M,OAAO,EAAE,GAC5B,IAAM5M,EAAE4M,OAAO,EAAEM,EAAIzJ,OAAO,KARmBsE,EAAKoF,EAAIxC,EAAGuC,EAAIzJ,QASvE,KAAK,GACL,OAAOyJ,GACN,IAAK,MAAO,IAAK,OAAQ7C,EAAY,GAAN8C,EAAIlE,EAAKkE,EAAI1C,EAAG,MAC/C,IAAK,MAAO,IAAK,OAAQJ,EAAuB,IAAV,GAAN8C,EAAIlE,EAAKkE,EAAI1C,GAAM0C,EAAIzC,EAAG,MAC1D,IAAK,MAAO,IAAK,OAAQL,EAAkC,IAAV,IAAV,GAAN8C,EAAIlE,EAAKkE,EAAI1C,GAAM0C,EAAIzC,GAAM7G,KAAK0E,MAAM4E,EAAIxC,EAAEwC,EAAI5C,GAAI,MACvF,QAAS,KAAM,uBAAyB2C,EACvCK,EAAsB,IAAfL,EAAIzJ,OAAe,EAAI,EAAG,MACnC,KAAK,IACJ4G,EAAMG,EAAG+C,EAAO,EAElB,OAAGA,EAAO,EAAUxF,EAAKsC,EAAKkD,GAAmB,GAGlD,SAASC,EAASlM,GAEjB,GAAGA,EAAEmC,QADG,EACU,OAAOnC,EAEzB,IADA,IAAImM,EAAKnM,EAAEmC,OAFH,EAEgBzD,EAAIsB,EAAEsL,OAAO,EAAEa,GACjCA,GAAGnM,EAAEmC,OAAQgK,GAHX,EAGiBzN,IAAIA,EAAEyD,OAAS,EAAI,IAAM,IAAMnC,EAAEsL,OAAOa,EAHzD,GAIR,OAAOzN,EApFR4F,EAAI8H,aAAe9B,EAanBhG,EAAI+H,SAAWZ,EAyEf,IAAIa,EAAY,WAChB,IAAIC,EAAO,KAoCX,IAAIC,EAAQ,yBASZ,IAAIC,EAAO,iBACPC,EAAa,WACbC,EAAQ,sBACZ,SAASC,EAAMC,GAEd,IADA,IAAYC,EAARpO,EAAI,GACAT,EAAI,EAAGA,GAAK4O,EAAI1K,SAAUlE,EAAG,OAAQ6O,EAAGD,EAAIxF,WAAWpJ,IAC9D,KAAK,GAAI,MACT,KAAK,GAAIS,GAAI,IAAK,MAClB,KAAK,GAAIA,GAAI,IAAK,MAClB,QAASA,GAAIqO,OAAOC,aAAaF,GAElC,OAAOpO,EAER,SAASuO,EAAIpB,EAAKtN,GAAK,IAAI2O,EAAK3K,KAAKwE,IAAI,GAAGxI,GAAI,MAAO,GAAIgE,KAAK0E,MAAM4E,EAAMqB,GAAIA,EAChF,SAASC,EAAItB,EAAKtN,GACjB,OAAIA,GAAK,GAAKgE,KAAK0E,OAAO4E,EAAItJ,KAAK+F,MAAMuD,IAAMtJ,KAAKwE,IAAI,GAAGxI,KAAK4D,OACxD,EAEDI,KAAK0E,OAAO4E,EAAItJ,KAAK+F,MAAMuD,IAAMtJ,KAAKwE,IAAI,GAAGxI,IASrD,SAAS6O,EAAcxM,EAAMgL,EAAKC,GACjC,GAA0B,KAAvBjL,EAAKyG,WAAW,KAAcuE,EAAIyB,MAAMX,GAAa,CACvD,IAAIY,EAAO1B,EAAId,QAAQ,OAAO,IAAIA,QAAQ,MAAM,IAAIA,QAAQ,KAAK,IACjE,OAAGe,GAAO,EAAUuB,EAAc,IAAKE,EAAMzB,GACtC,IAAMuB,EAAc,IAAKE,GAAOzB,GAAO,IAE/C,GAAsC,KAAnCD,EAAIvE,WAAWuE,EAAIzJ,OAAS,GAAW,OAzE3C,SAAsBvB,EAAMgL,EAAKC,GAEhC,IADA,IAAI5G,EAAM2G,EAAIzJ,OAAS,EACS,KAA1ByJ,EAAIvE,WAAWpC,EAAI,MAAaA,EACtC,OAAOqH,EAAU1L,EAAMgL,EAAIN,OAAO,EAAErG,GAAM4G,EAAMtJ,KAAKwE,IAAI,GAAG,GAAG6E,EAAIzJ,OAAO8C,KAsEzBsI,CAAa3M,EAAMgL,EAAKC,GACzE,IAAyB,IAAtBD,EAAIf,QAAQ,KAAa,OA9E7B,SAAuBjK,EAAMgL,EAAKC,GACjC,IAAI2B,EAAO5B,EAAId,QAAQyB,EAAK,IAAKkB,EAAM7B,EAAIzJ,OAASqL,EAAKrL,OACzD,OAAOmK,EAAU1L,EAAM4M,EAAM3B,EAAMtJ,KAAKwE,IAAI,GAAG,EAAE0G,IAAQjH,EAAK,IAAIiH,GA4E/BC,CAAc9M,EAAMgL,EAAKC,GAC5D,IAAyB,IAAtBD,EAAIf,QAAQ,KAAa,OAtE7B,SAAS8C,EAAc/B,EAAKC,GAC3B,IAAInN,EACAuG,EAAM2G,EAAIf,QAAQ,KAAOe,EAAIf,QAAQ,KAAO,EAChD,GAAGe,EAAIyB,MAAM,eAAgB,CAC5B,GAAU,GAAPxB,EAAU,MAAO,SACf,GAAGA,EAAM,EAAG,MAAO,IAAM8B,EAAc/B,GAAMC,GAClD,IAAI+B,EAAShC,EAAIf,QAAQ,MAAqB,IAAZ+C,IAAeA,EAAOhC,EAAIf,QAAQ,MACpE,IAAIgD,EAAKtL,KAAK+F,MAAM/F,KAAKW,IAAI2I,GAAKtJ,KAAKyI,QAAQ4C,EAG/C,GAFGC,EAAK,IAAGA,GAAMD,IAEM,KADvBlP,GAAKmN,EAAItJ,KAAKwE,IAAI,GAAG8G,IAAK5C,YAAYhG,EAAI,GAAG2I,EAAOC,GAAID,IACnD/C,QAAQ,KAAa,CACzB,IAAIiD,EAAQvL,KAAK+F,MAAM/F,KAAKW,IAAI2I,GAAKtJ,KAAKyI,QAG1C,KAFuB,IAApBtM,EAAEmM,QAAQ,KAAanM,EAAIA,EAAE6H,OAAO,GAAK,IAAM7H,EAAE4M,OAAO,GAAK,MAAQwC,EAAQpP,EAAEyD,OAAO0L,GACpFnP,GAAK,MAAQoP,EAAQD,GACF,OAAlBnP,EAAE4M,OAAO,EAAE,IAEhB5M,GADAA,EAAIA,EAAE6H,OAAO,GAAK7H,EAAE4M,OAAO,EAAEsC,GAAU,IAAMlP,EAAE4M,OAAO,EAAEsC,IAClD9C,QAAQ,aAAa,MAAMA,QAAQ,QAAQ,MAElDpM,EAAIA,EAAEoM,QAAQ,MAAM,KAErBpM,EAAIA,EAAEoM,QAAQ,4BAA2B,SAASiD,EAAGC,EAAGC,EAAGC,GAAM,OAAOF,EAAKC,EAAKC,EAAG5C,OAAO,GAAGsC,EAAOC,GAAID,GAAU,IAAMM,EAAG5C,OAAOuC,GAAM,YACpInP,EAAImN,EAAIT,cAAcnG,GAG7B,OAFG2G,EAAIyB,MAAM,WAAa3O,EAAE2O,MAAM,cAAa3O,EAAIA,EAAE4M,OAAO,EAAE5M,EAAEyD,OAAO,GAAK,IAAMzD,EAAE6H,OAAO7H,EAAEyD,OAAO,IACjGyJ,EAAIyB,MAAM,QAAU3O,EAAE2O,MAAM,SAAQ3O,EAAIA,EAAEoM,QAAQ,MAAM,MACpDpM,EAAEoM,QAAQ,IAAI,KA8Cc6C,CAAc/B,EAAKC,GACtD,GAAyB,KAAtBD,EAAIvE,WAAW,GAAW,MAAO,IAAI+F,EAAcxM,EAAKgL,EAAIN,OAAsB,KAAfM,EAAIrF,OAAO,GAAQ,EAAE,GAAGsF,GAC9F,IAAInN,EACAK,EAAGoP,EAAIC,EAAIC,EAAO9L,KAAK+G,IAAIuC,GAAMyC,EAAOzC,EAAM,EAAI,IAAM,GAC5D,GAAGD,EAAIyB,MAAM,SAAU,OAAOiB,EAAOtH,EAAMqH,EAAKzC,EAAIzJ,QACpD,GAAGyJ,EAAIyB,MAAM,WAEZ,MAD2B,OAA3B3O,EAAIsI,EAAM6E,EAAI,MAAkBnN,EAAI,IAC7BA,EAAEyD,OAASyJ,EAAIzJ,OAASzD,EAAIkO,EAAMhB,EAAIN,OAAO,EAAEM,EAAIzJ,OAAOzD,EAAEyD,SAAWzD,EAE/E,GAAIK,EAAI6M,EAAIyB,MAAMb,GAAS,OApD5B,SAAsBzN,EAAGsP,EAAMC,GAC9B,IAAIC,EAAMC,SAASzP,EAAE,GAAG,IAAK0P,EAAKlM,KAAK0E,MAAMoH,EAAOE,GAAMG,EAAOnM,KAAK+F,MAAMmG,EAAGF,GAC3EI,EAAOF,EAAKC,EAAKH,EAAMK,EAAML,EACjC,OAAOD,GAAiB,IAATI,EAAa,GAAK,GAAGA,GAAQ,KAAe,IAARC,EAAYnI,EAAK,IAAKzH,EAAE,GAAGoD,OAAS,EAAIpD,EAAE,GAAGoD,QAAUwE,EAAKgI,EAAI5P,EAAE,GAAGoD,QAAUpD,EAAE,GAAK,IAAMA,EAAE,GAAK0H,EAAKmI,EAAI7P,EAAE,GAAGoD,SAiDlI0M,CAAa9P,EAAGsP,EAAMC,GACxD,GAAG1C,EAAIyB,MAAM,UAAW,OAAOiB,EAAOtH,EAAMqH,EAAKzC,EAAIzJ,OAASyJ,EAAIf,QAAQ,MAC1E,GAAI9L,EAAI6M,EAAIyB,MAAMZ,GAEjB,OADA/N,EAAIuO,EAAIpB,EAAK9M,EAAE,GAAGoD,QAAQ2I,QAAQ,aAAa,MAAM8B,EAAM7N,EAAE,KAAK+L,QAAQ,MAAM,IAAI8B,EAAM7N,EAAE,KAAK+L,QAAQ,YAAW,SAASiD,EAAIC,GAAM,MAAO,IAAMA,EAAKxH,EAAK,IAAKoG,EAAM7N,EAAE,IAAIoD,OAAO6L,EAAG7L,YAC3J,IAAvByJ,EAAIf,QAAQ,MAAenM,EAAIA,EAAEoM,QAAQ,OAAO,KAGxD,GADAc,EAAMA,EAAId,QAAQ,YAAa,MAC3B/L,EAAI6M,EAAIyB,MAAM,gBACjB,OAAOiB,EAAOrB,EAAIoB,EAAMtP,EAAE,GAAGoD,QAAQ2I,QAAQ,kBAAkB,OAAOA,QAAQ,YAAY,OAAOA,QAAQ,OAAO/L,EAAE,GAAGoD,OAAO,KAAK,KAElI,GAAIpD,EAAI6M,EAAIyB,MAAM,qBAAuB,OAAOiB,EAAOpC,EAASlF,EAAMqH,EAAK,IAC3E,GAAItP,EAAI6M,EAAIyB,MAAM,qBACjB,OAAOxB,EAAM,EAAI,IAAMuB,EAAcxM,EAAMgL,GAAMC,GAAOK,EAAS,IAAI3J,KAAK+F,MAAMuD,GApClF,SAAeA,EAAKtN,GACnB,OAAIA,GAAK,GAAKgE,KAAK0E,OAAO4E,EAAItJ,KAAK+F,MAAMuD,IAAMtJ,KAAKwE,IAAI,GAAGxI,KAAK4D,OACxD,EAED,EAgCiF2M,CAAMjD,EAAK9M,EAAE,GAAGoD,UAAY,IAAMsE,EAAK0G,EAAItB,EAAK9M,EAAE,GAAGoD,QAAQpD,EAAE,GAAGoD,QAE1J,GAAIpD,EAAI6M,EAAIyB,MAAM,YAAc,OAAOD,EAAcxM,EAAKgL,EAAId,QAAQ,SAAS,IAAIe,GACnF,GAAI9M,EAAI6M,EAAIyB,MAAM,2BAGjB,OAFA3O,EAAI2H,EAAQ+G,EAAcxM,EAAMgL,EAAId,QAAQ,SAAS,IAAKe,IAC1DsC,EAAK,EACE9H,EAAQA,EAAQuF,EAAId,QAAQ,MAAM,KAAKA,QAAQ,SAAQ,SAASxE,GAAG,OAAO6H,EAAGzP,EAAEyD,OAAOzD,EAAE6H,OAAO4H,KAAU,MAAJ7H,EAAQ,IAAI,OAEzH,GAAGsF,EAAIyB,MAAMV,GAEZ,MAAO,KADPjO,EAAI0O,EAAcxM,EAAM,aAAciL,IACvBP,OAAO,EAAE,GAAK,KAAO5M,EAAE4M,OAAO,EAAG,GAAK,IAAM5M,EAAE4M,OAAO,GAErE,IAAIyD,EAAK,GACT,GAAIhQ,EAAI6M,EAAIyB,MAAM,+BAUjB,OATAc,EAAK5L,KAAKC,IAAIzD,EAAE,GAAGoD,OAAO,GAC1BiM,EAAK1G,EAAK2G,EAAM9L,KAAKwE,IAAI,GAAGoH,GAAI,GAAG,GACnCzP,EAAI,GAAK4P,EAEoB,MAD7BS,EAAKzC,EAAU,IAAKvN,EAAE,GAAIqP,EAAG,KACvB7H,OAAOwI,EAAG5M,OAAO,KAAW4M,EAAKA,EAAGzD,OAAO,EAAEyD,EAAG5M,OAAO,GAAK,KAClEzD,GAAKqQ,EAAKhQ,EAAE,GAAK,IAAMA,EAAE,IACzBgQ,EAAKnI,EAAMwH,EAAG,GAAGD,IACXhM,OAASpD,EAAE,GAAGoD,SAAQ4M,EAAKnC,EAAM7N,EAAE,GAAGuM,OAAOvM,EAAE,GAAGoD,OAAO4M,EAAG5M,SAAW4M,GAC7ErQ,GAAKqQ,EAGN,GAAIhQ,EAAI6M,EAAIyB,MAAM,iCAGjB,OAFAc,EAAK5L,KAAKC,IAAID,KAAKG,IAAI3D,EAAE,GAAGoD,OAAQpD,EAAE,GAAGoD,QAAQ,GAE1CmM,IADPF,EAAK1G,EAAK2G,EAAM9L,KAAKwE,IAAI,GAAGoH,GAAI,GAAG,IACjB,KAAKC,EAAG,GAAK,GAAK,MAAQ,KAAOA,EAAG,GAAKzH,EAAKyH,EAAG,GAAGD,GAAMpP,EAAE,GAAK,IAAMA,EAAE,GAAK6H,EAAMwH,EAAG,GAAGD,GAAK3H,EAAK,IAAK,EAAE2H,EAAG,EAAIpP,EAAE,GAAGoD,OAASpD,EAAE,GAAGoD,SAExJ,GAAIpD,EAAI6M,EAAIyB,MAAM,YAEjB,OADA3O,EAAIsI,EAAM6E,EAAK,GACZD,EAAIzJ,QAAUzD,EAAEyD,OAAezD,EAC3BkO,EAAMhB,EAAIN,OAAO,EAAEM,EAAIzJ,OAAOzD,EAAEyD,SAAWzD,EAEnD,GAAIK,EAAI6M,EAAIyB,MAAM,uBAAyB,CAC1C3O,EAAI,GAAKmN,EAAIV,QAAQ5I,KAAKC,IAAIzD,EAAE,GAAGoD,OAAO,KAAK2I,QAAQ,YAAY,MACnEqD,EAAKzP,EAAEmM,QAAQ,KACf,IAAImE,EAAOpD,EAAIf,QAAQ,KAAOsD,EAAIc,EAAOrD,EAAIzJ,OAASzD,EAAEyD,OAAS6M,EACjE,OAAOpC,EAAMhB,EAAIN,OAAO,EAAE0D,GAAQtQ,EAAIkN,EAAIN,OAAOM,EAAIzJ,OAAO8M,IAE7D,GAAIlQ,EAAI6M,EAAIyB,MAAM,sBAEjB,OADAc,EAAKhB,EAAItB,EAAK9M,EAAE,GAAGoD,QACZ0J,EAAM,EAAI,IAAMuB,EAAcxM,EAAMgL,GAAMC,GAAOK,EAzE1D,SAAaL,GAAO,OAAGA,EAAM,YAAcA,GAAO,WAAmB,IAAIA,GAAO,EAAS,EAAJA,EAAUA,EAAI,EAAE,GAAY,GAAGtJ,KAAK+F,MAAMuD,GAyE5DqD,CAAIrD,IAAMf,QAAQ,aAAa,OAAOA,QAAQ,SAAQ,SAASiD,GAAM,MAAO,OAASA,EAAG5L,OAAS,EAAIsE,EAAK,EAAE,EAAEsH,EAAG5L,QAAU,IAAM4L,KAAS,IAAMtH,EAAK0H,EAAGpP,EAAE,GAAGoD,QAE/N,OAAOyJ,GACN,IAAK,aAAc,OAAOwB,EAAcxM,EAAM,WAAYiL,GAC1D,IAAK,UACL,IAAK,SACL,IAAK,QAAS,IAAIvF,EAAI4F,EAASlF,EAAMqH,EAAK,IAAK,MAAa,MAAN/H,EAAYgI,EAAOhI,EAAI,GAC7E,IAAK,aAAc,OAAO8G,EAAcxM,EAAM,aAAaiL,GAAKf,QAAQ,OAAO,KAC/E,IAAK,WAAY,OAAOsC,EAAcxM,EAAM,WAAWiL,GAAKf,QAAQ,OAAO,KAG5E,MAAM,IAAIY,MAAM,uBAAyBE,EAAM,KAiChD,SAASuD,EAAcvO,EAAMgL,EAAKC,GACjC,GAA0B,KAAvBjL,EAAKyG,WAAW,KAAcuE,EAAIyB,MAAMX,GAAa,CACvD,IAAIY,EAAO1B,EAAId,QAAQ,OAAO,IAAIA,QAAQ,MAAM,IAAIA,QAAQ,KAAK,IACjE,OAAGe,GAAO,EAAUsD,EAAc,IAAK7B,EAAMzB,GACtC,IAAMsD,EAAc,IAAK7B,GAAOzB,GAAO,IAE/C,GAAsC,KAAnCD,EAAIvE,WAAWuE,EAAIzJ,OAAS,GAAW,OArC3C,SAAuBvB,EAAMgL,EAAKC,GAEjC,IADA,IAAI5G,EAAM2G,EAAIzJ,OAAS,EACS,KAA1ByJ,EAAIvE,WAAWpC,EAAI,MAAaA,EACtC,OAAOqH,EAAU1L,EAAMgL,EAAIN,OAAO,EAAErG,GAAM4G,EAAMtJ,KAAKwE,IAAI,GAAG,GAAG6E,EAAIzJ,OAAO8C,KAkCzBmK,CAAcxO,EAAMgL,EAAKC,GAC1E,IAAyB,IAAtBD,EAAIf,QAAQ,KAAa,OAjC7B,SAAwBjK,EAAMgL,EAAKC,GAClC,IAAI2B,EAAO5B,EAAId,QAAQyB,EAAK,IAAKkB,EAAM7B,EAAIzJ,OAASqL,EAAKrL,OACzD,OAAOmK,EAAU1L,EAAM4M,EAAM3B,EAAMtJ,KAAKwE,IAAI,GAAG,EAAE0G,IAAQjH,EAAK,IAAIiH,GA+B/B4B,CAAezO,EAAMgL,EAAKC,GAC7D,IAAyB,IAAtBD,EAAIf,QAAQ,KAAa,OA9B7B,SAASyE,EAAe1D,EAAKC,GAC5B,IAAInN,EACAuG,EAAM2G,EAAIf,QAAQ,KAAOe,EAAIf,QAAQ,KAAO,EAChD,GAAGe,EAAIyB,MAAM,eAAgB,CAC5B,GAAU,GAAPxB,EAAU,MAAO,SACf,GAAGA,EAAM,EAAG,MAAO,IAAMyD,EAAe1D,GAAMC,GACnD,IAAI+B,EAAShC,EAAIf,QAAQ,MAAqB,IAAZ+C,IAAeA,EAAOhC,EAAIf,QAAQ,MACpE,IAAIgD,EAAKtL,KAAK+F,MAAM/F,KAAKW,IAAI2I,GAAKtJ,KAAKyI,QAAQ4C,EAG/C,GAFGC,EAAK,IAAGA,GAAMD,KACjBlP,GAAKmN,EAAItJ,KAAKwE,IAAI,GAAG8G,IAAK5C,YAAYhG,EAAI,GAAG2I,EAAOC,GAAID,IAClDP,MAAM,QAAS,CACpB,IAAIS,EAAQvL,KAAK+F,MAAM/F,KAAKW,IAAI2I,GAAKtJ,KAAKyI,SACnB,IAApBtM,EAAEmM,QAAQ,KAAanM,EAAIA,EAAE6H,OAAO,GAAK,IAAM7H,EAAE4M,OAAO,GAAK,MAAQwC,EAAQpP,EAAEyD,OAAO0L,GACpFnP,GAAK,MAAQoP,EAAQD,GAC1BnP,EAAIA,EAAEoM,QAAQ,MAAM,KAErBpM,EAAIA,EAAEoM,QAAQ,4BAA2B,SAASiD,EAAGC,EAAGC,EAAGC,GAAM,OAAOF,EAAKC,EAAKC,EAAG5C,OAAO,GAAGsC,EAAOC,GAAID,GAAU,IAAMM,EAAG5C,OAAOuC,GAAM,YACpInP,EAAImN,EAAIT,cAAcnG,GAG7B,OAFG2G,EAAIyB,MAAM,WAAa3O,EAAE2O,MAAM,cAAa3O,EAAIA,EAAE4M,OAAO,EAAE5M,EAAEyD,OAAO,GAAK,IAAMzD,EAAE6H,OAAO7H,EAAEyD,OAAO,IACjGyJ,EAAIyB,MAAM,QAAU3O,EAAE2O,MAAM,SAAQ3O,EAAIA,EAAEoM,QAAQ,MAAM,MACpDpM,EAAEoM,QAAQ,IAAI,KAUcwE,CAAe1D,EAAKC,GACvD,GAAyB,KAAtBD,EAAIvE,WAAW,GAAW,MAAO,IAAI8H,EAAcvO,EAAKgL,EAAIN,OAAsB,KAAfM,EAAIrF,OAAO,GAAQ,EAAE,GAAGsF,GAC9F,IAAInN,EACAK,EAAGoP,EAAIC,EAAIC,EAAO9L,KAAK+G,IAAIuC,GAAMyC,EAAOzC,EAAM,EAAI,IAAM,GAC5D,GAAGD,EAAIyB,MAAM,SAAU,OAAOiB,EAAO7H,EAAK4H,EAAKzC,EAAIzJ,QACnD,GAAGyJ,EAAIyB,MAAM,WAEZ,OADA3O,EAAK,GAAGmN,EAAiB,IAARA,IAAWnN,EAAI,IACzBA,EAAEyD,OAASyJ,EAAIzJ,OAASzD,EAAIkO,EAAMhB,EAAIN,OAAO,EAAEM,EAAIzJ,OAAOzD,EAAEyD,SAAWzD,EAE/E,GAAIK,EAAI6M,EAAIyB,MAAMb,GAAS,OAnK5B,SAAsBzN,EAAGsP,EAAMC,GAC9B,OAAOA,GAAiB,IAATD,EAAa,GAAK,GAAGA,GAAQ7H,EAAK,IAAKzH,EAAE,GAAGoD,OAAS,EAAIpD,EAAE,GAAGoD,QAkK3CoN,CAAaxQ,EAAGsP,EAAMC,GACxD,GAAG1C,EAAIyB,MAAM,UAAW,OAAOiB,EAAO7H,EAAK4H,EAAKzC,EAAIzJ,OAASyJ,EAAIf,QAAQ,MACzE,GAAI9L,EAAI6M,EAAIyB,MAAMZ,GAIjB,OAFA/N,GADFA,GAAK,GAAGmN,GAAKf,QAAQ,aAAa,MAAM8B,EAAM7N,EAAE,KAAK+L,QAAQ,MAAM,IAAI8B,EAAM7N,EAAE,MACvE+L,QAAQ,YAAW,SAASiD,EAAIC,GACxC,MAAO,IAAMA,EAAKxH,EAAK,IAAKoG,EAAM7N,EAAE,IAAIoD,OAAO6L,EAAG7L,YAClB,IAAvByJ,EAAIf,QAAQ,MAAenM,EAAIA,EAAEoM,QAAQ,OAAO,KAGxD,GADAc,EAAMA,EAAId,QAAQ,YAAa,MAC3B/L,EAAI6M,EAAIyB,MAAM,gBACjB,OAAOiB,GAAQ,GAAGD,GAAMvD,QAAQ,kBAAkB,OAAOA,QAAQ,YAAY,OAAOA,QAAQ,OAAO/L,EAAE,GAAGoD,OAAO,KAAK,KAErH,GAAIpD,EAAI6M,EAAIyB,MAAM,qBAAuB,OAAOiB,EAAOpC,EAAU,GAAGmC,GACpE,GAAItP,EAAI6M,EAAIyB,MAAM,qBACjB,OAAOxB,EAAM,EAAI,IAAMsD,EAAcvO,EAAMgL,GAAMC,GAAOK,EAAU,GAAGL,GAAQ,IAAMrF,EAAK,IAAIzH,EAAE,GAAGoD,QAElG,GAAIpD,EAAI6M,EAAIyB,MAAM,YAAc,OAAO8B,EAAcvO,EAAKgL,EAAId,QAAQ,SAAS,IAAIe,GACnF,GAAI9M,EAAI6M,EAAIyB,MAAM,2BAGjB,OAFA3O,EAAI2H,EAAQ8I,EAAcvO,EAAMgL,EAAId,QAAQ,SAAS,IAAKe,IAC1DsC,EAAK,EACE9H,EAAQA,EAAQuF,EAAId,QAAQ,MAAM,KAAKA,QAAQ,SAAQ,SAASxE,GAAG,OAAO6H,EAAGzP,EAAEyD,OAAOzD,EAAE6H,OAAO4H,KAAU,MAAJ7H,EAAQ,IAAI,OAEzH,GAAGsF,EAAIyB,MAAMV,GAEZ,MAAO,KADPjO,EAAIyQ,EAAcvO,EAAM,aAAciL,IACvBP,OAAO,EAAE,GAAK,KAAO5M,EAAE4M,OAAO,EAAG,GAAK,IAAM5M,EAAE4M,OAAO,GAErE,IAAIyD,EAAK,GACT,GAAIhQ,EAAI6M,EAAIyB,MAAM,+BAUjB,OATAc,EAAK5L,KAAKC,IAAIzD,EAAE,GAAGoD,OAAO,GAC1BiM,EAAK1G,EAAK2G,EAAM9L,KAAKwE,IAAI,GAAGoH,GAAI,GAAG,GACnCzP,EAAI,GAAK4P,EAEoB,MAD7BS,EAAKzC,EAAU,IAAKvN,EAAE,GAAIqP,EAAG,KACvB7H,OAAOwI,EAAG5M,OAAO,KAAW4M,EAAKA,EAAGzD,OAAO,EAAEyD,EAAG5M,OAAO,GAAK,KAClEzD,GAAKqQ,EAAKhQ,EAAE,GAAK,IAAMA,EAAE,IACzBgQ,EAAKnI,EAAMwH,EAAG,GAAGD,IACXhM,OAASpD,EAAE,GAAGoD,SAAQ4M,EAAKnC,EAAM7N,EAAE,GAAGuM,OAAOvM,EAAE,GAAGoD,OAAO4M,EAAG5M,SAAW4M,GAC7ErQ,GAAKqQ,EAGN,GAAIhQ,EAAI6M,EAAIyB,MAAM,iCAGjB,OAFAc,EAAK5L,KAAKC,IAAID,KAAKG,IAAI3D,EAAE,GAAGoD,OAAQpD,EAAE,GAAGoD,QAAQ,GAE1CmM,IADPF,EAAK1G,EAAK2G,EAAM9L,KAAKwE,IAAI,GAAGoH,GAAI,GAAG,IACjB,KAAKC,EAAG,GAAK,GAAK,MAAQ,KAAOA,EAAG,GAAKzH,EAAKyH,EAAG,GAAGD,GAAMpP,EAAE,GAAK,IAAMA,EAAE,GAAK6H,EAAMwH,EAAG,GAAGD,GAAK3H,EAAK,IAAK,EAAE2H,EAAG,EAAIpP,EAAE,GAAGoD,OAASpD,EAAE,GAAGoD,SAExJ,GAAIpD,EAAI6M,EAAIyB,MAAM,YAEjB,OADA3O,EAAI,GAAKmN,EACND,EAAIzJ,QAAUzD,EAAEyD,OAAezD,EAC3BkO,EAAMhB,EAAIN,OAAO,EAAEM,EAAIzJ,OAAOzD,EAAEyD,SAAWzD,EAEnD,GAAIK,EAAI6M,EAAIyB,MAAM,sBAAwB,CACzC3O,EAAI,GAAKmN,EAAIV,QAAQ5I,KAAKC,IAAIzD,EAAE,GAAGoD,OAAO,KAAK2I,QAAQ,YAAY,MACnEqD,EAAKzP,EAAEmM,QAAQ,KACf,IAAImE,EAAOpD,EAAIf,QAAQ,KAAOsD,EAAIc,EAAOrD,EAAIzJ,OAASzD,EAAEyD,OAAS6M,EACjE,OAAOpC,EAAMhB,EAAIN,OAAO,EAAE0D,GAAQtQ,EAAIkN,EAAIN,OAAOM,EAAIzJ,OAAO8M,IAE7D,GAAIlQ,EAAI6M,EAAIyB,MAAM,sBACjB,OAAOxB,EAAM,EAAI,IAAMsD,EAAcvO,EAAMgL,GAAMC,GAAOK,EAAS,GAAGL,GAAKf,QAAQ,aAAa,OAAOA,QAAQ,SAAQ,SAASiD,GAAM,MAAO,OAASA,EAAG5L,OAAS,EAAIsE,EAAK,EAAE,EAAEsH,EAAG5L,QAAU,IAAM4L,KAAS,IAAMtH,EAAK,EAAE1H,EAAE,GAAGoD,QAE5N,OAAOyJ,GACN,IAAK,UACL,IAAK,SACL,IAAK,QAAS,IAAItF,EAAI4F,EAAS,GAAGmC,GAAO,MAAa,MAAN/H,EAAYgI,EAAOhI,EAAI,GACvE,QACC,GAAGsF,EAAIyB,MAAM,aAAc,OAAO8B,EAAcvO,EAAMgL,EAAI4D,MAAM,EAAE5D,EAAI6D,YAAY,MAAO5D,GAAOe,EAAMhB,EAAI4D,MAAM5D,EAAI6D,YAAY,OAElI,MAAM,IAAI/D,MAAM,uBAAyBE,EAAM,KAEhD,OAAO,SAAmBhL,EAAMgL,EAAKC,GACpC,OAAY,EAAJA,KAAWA,EAAMsD,EAAcvO,EAAMgL,EAAKC,GAAOuB,EAAcxM,EAAMgL,EAAKC,IAlRnE,GAoRhB,SAAS6D,EAAU9D,GAGlB,IAFA,IAAI7C,EAAM,GACN4G,GAAS,EACL1R,EAAI,EAAGkO,EAAI,EAAGlO,EAAI2N,EAAIzJ,SAAUlE,EAAG,OAAe2N,EAAIvE,WAAWpJ,IACxE,KAAK,GACJ0R,GAAUA,EAAQ,MACnB,KAAK,GAAI,KAAK,GAAI,KAAK,KACpB1R,EAAG,MACN,KAAK,GACJ8K,EAAIA,EAAI5G,QAAUyJ,EAAIN,OAAOa,EAAElO,EAAEkO,GACjCA,EAAIlO,EAAE,EAGR,GADA8K,EAAIA,EAAI5G,QAAUyJ,EAAIN,OAAOa,IACf,IAAXwD,EAAiB,MAAM,IAAIjE,MAAM,WAAaE,EAAM,0BACvD,OAAO7C,EAERzE,EAAIsL,OAASF,EACb,IAAIG,EAAU,gBACd,SAASC,EAAYlE,GAEpB,IADA,IAAI3N,EAAI,EAAeK,EAAI,GAAII,EAAI,GAC7BT,EAAI2N,EAAIzJ,QACb,OAAQ7D,EAAIsN,EAAIrF,OAAOtI,IACtB,IAAK,IAAQmJ,EAAUwE,EAAK3N,KAAIA,GAAI,GAAGA,IAAK,MAC5C,IAAK,IAAK,KAAsC,KAAzB2N,EAAIvE,aAAapJ,IAAcA,EAAI2N,EAAIzJ,WAAsBlE,EAAG,MACvF,IAAK,KACL,IAAK,IAAKA,GAAG,EAAG,MAChB,IAAK,MAAOA,EAAG,MACf,IAAK,IAAK,IAAK,IACd,GAAuB,MAApB2N,EAAIrF,OAAOtI,EAAE,IAAkC,MAApB2N,EAAIrF,OAAOtI,EAAE,GAAY,OAAO,EAE/D,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAEvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAO,EAC7E,IAAK,IAAK,IAAK,IACd,GAAsC,QAAnC2N,EAAIN,OAAOrN,EAAG,GAAG8R,cAAyB,OAAO,EACpD,GAAsC,UAAnCnE,EAAIN,OAAOrN,EAAG,GAAG8R,cAA2B,OAAO,IACpD9R,EAAG,MACN,IAAK,IAEJ,IADAS,EAAIJ,EACsB,MAApBsN,EAAIrF,OAAOtI,MAAgBA,EAAI2N,EAAIzJ,QAAQzD,GAAKkN,EAAIrF,OAAOtI,GACjE,GAAGS,EAAE2O,MAAMwC,GAAU,OAAO,EAC5B,MACD,IAAK,IAEL,IAAK,IAAK,IAAK,IACd,KAAM5R,EAAI2N,EAAIzJ,SAAW,YAAY0I,QAAQvM,EAAEsN,EAAIrF,SAAStI,KAAO,GAAS,MAAHK,GAA8B,KAAnBsN,EAAIrF,OAAOtI,EAAE,IAAa,KAAK4M,QAAQe,EAAIrF,OAAOtI,EAAE,KAAK,KAC7I,MACD,IAAK,IAAK,KAAM2N,EAAIrF,SAAStI,KAAOK,IAAgB,MACpD,IAAK,MAAOL,EAAuB,KAAjB2N,EAAIrF,OAAOtI,IAA8B,KAAjB2N,EAAIrF,OAAOtI,MAAaA,EAAG,MACrE,IAAK,IAAK,IAAK,MAAOA,EAAG,MACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpF,KAAMA,EAAI2N,EAAIzJ,QAAU,aAAa0I,QAAQe,EAAIrF,SAAStI,KAAO,IAAgB,MAClF,IAAK,IACL,UAAWA,EAGb,OAAO,EAGR,SAAS+R,EAASpE,EAAKlF,EAAG+B,EAAMwH,GAI/B,IAHA,IAA8CC,EAAI/D,EAAGW,EAAjD/D,EAAM,GAAIrK,EAAI,GAAIT,EAAI,EAAGK,EAAI,GAAI6R,EAAI,IACrCC,EAAG,IAEDnS,EAAI2N,EAAIzJ,QACb,OAAQ7D,EAAIsN,EAAIrF,OAAOtI,IACtB,IAAK,IACJ,IAAImJ,EAAUwE,EAAK3N,GAAI,MAAM,IAAIyN,MAAM,0BAA4BpN,EAAI,OAAQsN,GAC/E7C,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAE,WAAYzI,GAAG,EAAG,MAC/C,IAAK,IACJ,IAAIS,EAAE,GAAgC,MAA5BoO,EAAGlB,EAAIvE,aAAapJ,KAAcA,EAAI2N,EAAIzJ,QAASzD,GAAKqO,OAAOC,aAAaF,GACtF/D,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAEhI,KAAMT,EAAG,MACtC,IAAK,KAAM,IAAIiN,EAAIU,EAAIrF,SAAStI,GAAIkB,EAAW,MAAN+L,GAAmB,MAANA,EAAaA,EAAI,IACtEnC,EAAIA,EAAI5G,QAAU,CAAChD,EAAEA,EAAGuH,EAAEwE,KAAMjN,EAAG,MACpC,IAAK,IAAK8K,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAE,KAAMzI,GAAG,EAAG,MAClD,IAAK,IACJ8K,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAEA,KAAMzI,EAAG,MACtC,IAAK,IAAK,IAAK,IACd,GAAuB,MAApB2N,EAAIrF,OAAOtI,EAAE,IAAkC,MAApB2N,EAAIrF,OAAOtI,EAAE,GAAY,CACtD,GAAO,MAAJiS,GAAyE,OAA7DA,EAAG1H,EAAgB9B,EAAG+B,EAA0B,MAApBmD,EAAIrF,OAAOtI,EAAE,KAA0B,MAAO,GACzF8K,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAEkF,EAAIN,OAAOrN,EAAE,IAAKkS,EAAM7R,EAAGL,GAAG,EAAG,MAG/D,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtDK,EAAIA,EAAE+R,cAEP,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAChE,GAAG3J,EAAI,EAAG,MAAO,GACjB,GAAO,MAAJwJ,GAAgD,OAApCA,EAAG1H,EAAgB9B,EAAG+B,IAAoB,MAAO,GACzD,IAAP/J,EAAIJ,IAAWL,EAAI2N,EAAIzJ,QAAUyJ,EAAIrF,OAAOtI,GAAGoS,gBAAkB/R,GAAGI,GAAGJ,EAC9D,MAANA,GAAmC,MAAtB6R,EAAIE,gBAAuB/R,EAAI,KACtC,MAANA,IAAWA,EAAI8R,GAClBrH,EAAIA,EAAI5G,QAAU,CAAChD,EAAEb,EAAGoI,EAAEhI,GAAIyR,EAAM7R,EAAG,MACxC,IAAK,IAAK,IAAK,IACd,IAAIiK,EAAE,CAACpJ,EAAEb,EAAGoI,EAAEpI,GAKd,GAJO,MAAJ4R,IAAUA,EAAG1H,EAAgB9B,EAAG+B,IACG,QAAnCmD,EAAIN,OAAOrN,EAAG,GAAG8R,eAAkC,MAAJG,IAAU3H,EAAE7B,EAAIwJ,EAAG/G,GAAK,GAAK,IAAM,KAAKZ,EAAEpJ,EAAI,IAAKiR,EAAG,IAAInS,GAAG,GACrE,UAAlC2N,EAAIN,OAAOrN,EAAE,GAAG8R,eAAoC,MAAJG,IAAU3H,EAAE7B,EAAIwJ,EAAG/G,GAAK,GAAK,KAAO,MAAMZ,EAAEpJ,EAAI,IAAKlB,GAAG,EAAGmS,EAAG,MAC/G7H,EAAEpJ,EAAI,MAAOlB,GACb,MAAJiS,GAAoB,MAAR3H,EAAEpJ,EAAW,MAAO,GACnC4J,EAAIA,EAAI5G,QAAUoG,EAAG4H,EAAM7R,EAAG,MAC/B,IAAK,IAEJ,IADAI,EAAIJ,EACsB,MAApBsN,EAAIrF,OAAOtI,MAAgBA,EAAI2N,EAAIzJ,QAAQzD,GAAKkN,EAAIrF,OAAOtI,GACjE,GAAmB,MAAhBS,EAAE8Q,OAAO,GAAY,KAAM,4BAA8B9Q,EAAI,IAChE,GAAGA,EAAE2O,MAAMwC,GAAU,CACpB,GAAO,MAAJK,GAAgD,OAApCA,EAAG1H,EAAgB9B,EAAG+B,IAAoB,MAAO,GAChEM,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAEhI,EAAE2R,eAC9BF,EAAMzR,EAAE6H,OAAO,QACN7H,EAAEmM,QAAQ,MAAQ,IAC3BnM,GAAKA,EAAE2O,MAAM,kBAAkB,IAAI,IAAI,IACnCyC,EAAYlE,KAAM7C,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAIuH,EAAEhI,KAElD,MAED,IAAK,IACJ,GAAS,MAANwR,EAAY,CACP,IAAPxR,EAAIJ,IAAWL,EAAI2N,EAAIzJ,QAAgC,OAArB7D,EAAEsN,EAAIrF,OAAOtI,KAAaS,GAAKJ,EACjEyK,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAEhI,GAAI,MAGlC,IAAK,IAAK,IAAK,IACP,IAAPA,EAAIJ,IAAWL,EAAI2N,EAAIzJ,QAAU,YAAY0I,QAAQvM,EAAEsN,EAAIrF,OAAOtI,KAAO,GAAGS,GAAKJ,EACjFyK,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAEhI,GAAI,MACjC,IAAK,IACG,IAAPA,EAAIJ,EAASsN,EAAIrF,SAAStI,KAAOK,GAAGI,GAAGJ,EACvCyK,EAAIA,EAAI5G,QAAU,CAAChD,EAAEb,EAAGoI,EAAEhI,GAAIyR,EAAM7R,EAAG,MACxC,IAAK,MAAOL,EAAuB,KAAjB2N,EAAIrF,OAAOtI,IAA8B,KAAjB2N,EAAIrF,OAAOtI,MAAaA,EAAG,MACrE,IAAK,IAAK,IAAK,IAAK8K,EAAIA,EAAI5G,QAAU,CAAChD,EAAU,IAAP8Q,EAAS,IAAI3R,EAAIoI,EAAEpI,KAAML,EAAG,MACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7E,IAAPS,EAAIJ,EAASL,EAAI2N,EAAIzJ,QAAU,aAAa0I,QAAQe,EAAIrF,SAAStI,KAAO,GAAGS,GAAGkN,EAAIrF,OAAOtI,GACzF8K,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAEhI,GAAI,MACjC,IAAK,IAAKqK,EAAIA,EAAI5G,QAAU,CAAChD,EAAEb,EAAGoI,EAAEpI,KAAML,EAAG,MAC7C,IAAK,IAAK8K,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAE,OAAQzI,EAAG,MACjD,QACC,IAA2D,IAAxD,wCAAwC4M,QAAQvM,GAAW,MAAM,IAAIoN,MAAM,0BAA4BpN,EAAI,OAASsN,GACvH7C,EAAIA,EAAI5G,QAAU,CAAChD,EAAE,IAAKuH,EAAEpI,KAAML,EAGrC,IAAqBqS,EAAjBC,EAAK,EAAGzE,EAAM,EAClB,IAAI7N,EAAE8K,EAAI5G,OAAO,EAAGgO,EAAI,IAAKlS,GAAK,IAAKA,EACtC,OAAO8K,EAAI9K,GAAGkB,GACb,IAAK,IAAK,IAAK,IAAK4J,EAAI9K,GAAGkB,EAAIiR,EAAID,EAAI,IAAQI,EAAK,IAAGA,EAAK,GAAG,MAC/D,IAAK,KACAD,EAAIvH,EAAI9K,GAAGyI,EAAE2G,MAAM,YAAWvB,EAAIvJ,KAAKG,IAAIoJ,EAAIwE,EAAI,GAAGnO,OAAO,IAC9DoO,EAAK,IAAGA,EAAK,GAEjB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKJ,EAAIpH,EAAI9K,GAAGkB,EAAG,MACtD,IAAK,IAAgB,MAARgR,IAAepH,EAAI9K,GAAGkB,EAAI,IAAQoR,EAAK,IAAGA,EAAK,IAAK,MACjE,IAAK,IACJ,MACD,IAAK,IACDA,EAAK,GAAKxH,EAAI9K,GAAGyI,EAAE2G,MAAM,UAASkD,EAAK,GACvCA,EAAK,GAAKxH,EAAI9K,GAAGyI,EAAE2G,MAAM,UAASkD,EAAK,GACvCA,EAAK,GAAKxH,EAAI9K,GAAGyI,EAAE2G,MAAM,UAASkD,EAAK,GAG7C,OAAOA,GACN,KAAK,EAAG,MACR,KAAK,EACJL,EAAGjH,GAAK,KAAOiH,EAAGjH,EAAI,IAAKiH,EAAG7G,GAC3B6G,EAAG7G,GAAM,KAAM6G,EAAG7G,EAAI,IAAK6G,EAAG9G,GAC9B8G,EAAG9G,GAAM,KAAM8G,EAAG9G,EAAI,IAAK8G,EAAG/G,GACjC,MACD,KAAK,EACJ+G,EAAGjH,GAAK,KAAOiH,EAAGjH,EAAI,IAAKiH,EAAG7G,GAC3B6G,EAAG7G,GAAM,KAAM6G,EAAG7G,EAAI,IAAK6G,EAAG9G,GAInC,IAAeoH,EAAXC,EAAO,GACX,IAAIxS,EAAE,EAAGA,EAAI8K,EAAI5G,SAAUlE,EAC1B,OAAO8K,EAAI9K,GAAGkB,GACb,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACxC,IAAK,IAAK4J,EAAI9K,GAAGyI,EAAI,GAAIqC,EAAI9K,GAAGkB,EAAI,IAAK,MACzC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClG4J,EAAI9K,GAAGyI,EAAIiF,EAAW5C,EAAI9K,GAAGkB,EAAEkI,WAAW,GAAI0B,EAAI9K,GAAGyI,EAAGwJ,EAAIpE,GACxD/C,EAAI9K,GAAGkB,EAAI,IAAK,MACjB,IAAK,IAAK,IAAK,IAEd,IADAqR,EAAKvS,EAAE,EACU,MAAX8K,EAAIyH,KACS,OAAjBlS,EAAEyK,EAAIyH,GAAIrR,IAAoB,MAANb,IACjB,MAANA,GAAmB,MAANA,IAA2B,MAAbyK,EAAIyH,EAAG,KAA+B,MAAhBzH,EAAIyH,EAAG,GAAGrR,GAA6B,MAAhB4J,EAAIyH,EAAG,GAAGrR,GAA6B,MAAhB4J,EAAIyH,EAAG,GAAG9J,IAC7F,MAAbqC,EAAI9K,GAAGkB,IAAoB,MAANb,GAAmB,MAANA,GAAmB,MAANA,IACzC,MAANA,IAA4B,MAAdyK,EAAIyH,GAAI9J,GAA2B,MAAdqC,EAAIyH,GAAI9J,GAA0B,MAAbqC,EAAIyH,EAAG,IAA6B,KAAfzH,EAAIyH,EAAG,GAAGrR,KAExF4J,EAAI9K,GAAGyI,GAAKqC,EAAIyH,GAAI9J,EACpBqC,EAAIyH,GAAM,CAAC9J,EAAE,GAAIvH,EAAE,OAAQqR,EAE5BC,GAAQ1H,EAAI9K,GAAGyI,EACfzI,EAAIuS,EAAG,EAAG,MACX,IAAK,IAAKzH,EAAI9K,GAAGkB,EAAI,IAAK4J,EAAI9K,GAAGyI,EAAI+E,EAAY/E,EAAE+B,GAGrD,IAAaiI,EAAKC,EAAdC,EAAK,GACT,GAAGH,EAAKtO,OAAS,EAAG,CACM,IAAtBsO,EAAKpJ,WAAW,IAClBqJ,EAAOhK,EAAE,GAA0B,KAAvB+J,EAAKpJ,WAAW,IAAaX,EAAIA,EAC7CiK,EAAOrE,EAAU,IAAKmE,EAAMC,KAG5BC,EAAOrE,EAAU,IAAKmE,EADtBC,EAAOhK,EAAE,GAAKuJ,EAAO,GAAKvJ,EAAIA,GAE3BgK,EAAM,GAAK3H,EAAI,IAAkB,KAAZA,EAAI,GAAG5J,IAC9BwR,EAAOA,EAAKrF,OAAO,GACnBvC,EAAI,GAAGrC,EAAI,IAAMqC,EAAI,GAAGrC,IAG1B8J,EAAGG,EAAKxO,OAAO,EACf,IAAI0O,EAAQ9H,EAAI5G,OAChB,IAAIlE,EAAE,EAAGA,EAAI8K,EAAI5G,SAAUlE,EAAG,GAAa,MAAV8K,EAAI9K,IAA0B,KAAZ8K,EAAI9K,GAAGkB,GAAY4J,EAAI9K,GAAGyI,EAAEmE,QAAQ,MAAQ,EAAG,CAAEgG,EAAQ5S,EAAG,MAC/G,IAAI6S,EAAM/H,EAAI5G,OACd,GAAG0O,IAAU9H,EAAI5G,SAAiC,IAAvBwO,EAAK9F,QAAQ,KAAa,CACpD,IAAI5M,EAAE8K,EAAI5G,OAAO,EAAGlE,GAAI,IAAIA,EACd,MAAV8K,EAAI9K,KAA0C,IAA5B,KAAK4M,QAAQ9B,EAAI9K,GAAGkB,KACtCqR,GAAIzH,EAAI9K,GAAGyI,EAAEvE,OAAO,GAAKqO,GAAMzH,EAAI9K,GAAGyI,EAAEvE,OAAQ4G,EAAI9K,GAAGyI,EAAIiK,EAAKrF,OAAOkF,EAAG,EAAGzH,EAAI9K,GAAGyI,EAAEvE,SACjFqO,EAAK,EAAGzH,EAAI9K,GAAGyI,EAAI,IACpBqC,EAAI9K,GAAGyI,EAAIiK,EAAKrF,OAAO,EAAGkF,EAAG,GAAIA,GAAM,GAC9CzH,EAAI9K,GAAGkB,EAAI,IACX2R,EAAQ7S,GAENuS,GAAI,GAAKM,EAAM/H,EAAI5G,SAAQ4G,EAAI+H,GAAOpK,EAAIiK,EAAKrF,OAAO,EAAEkF,EAAG,GAAKzH,EAAI+H,GAAOpK,QAE1E,GAAGmK,IAAU9H,EAAI5G,SAAiC,IAAvBwO,EAAK9F,QAAQ,KAAa,CAEzD,IADA2F,EAAKG,EAAK9F,QAAQ,KAAK,EACnB5M,EAAE4S,EAAO5S,GAAI,IAAKA,EACrB,GAAa,MAAV8K,EAAI9K,KAA0C,IAA5B,KAAK4M,QAAQ9B,EAAI9K,GAAGkB,GAAzC,CAGA,IAFAgN,EAAEpD,EAAI9K,GAAGyI,EAAEmE,QAAQ,MAAM,GAAG5M,IAAI4S,EAAM9H,EAAI9K,GAAGyI,EAAEmE,QAAQ,KAAK,EAAE9B,EAAI9K,GAAGyI,EAAEvE,OAAO,EAC9EyO,EAAK7H,EAAI9K,GAAGyI,EAAE4E,OAAOa,EAAE,GACjBA,GAAG,IAAKA,EACVqE,GAAI,IAA6B,MAAvBzH,EAAI9K,GAAGyI,EAAEH,OAAO4F,IAAqC,MAAvBpD,EAAI9K,GAAGyI,EAAEH,OAAO4F,MAAayE,EAAKD,EAAKpK,OAAOiK,KAAQI,GAElG7H,EAAI9K,GAAGyI,EAAIkK,EACX7H,EAAI9K,GAAGkB,EAAI,IACX2R,EAAQ7S,EAIT,IAFGuS,GAAI,GAAKM,EAAM/H,EAAI5G,SAAQ4G,EAAI+H,GAAOpK,EAAIiK,EAAKrF,OAAO,EAAEkF,EAAG,GAAKzH,EAAI+H,GAAOpK,GAC9E8J,EAAKG,EAAK9F,QAAQ,KAAK,EACnB5M,EAAE4S,EAAO5S,EAAE8K,EAAI5G,SAAUlE,EAC5B,GAAa,MAAV8K,EAAI9K,MAA4C,IAA7B,MAAM4M,QAAQ9B,EAAI9K,GAAGkB,IAAalB,IAAM4S,GAA9D,CAGA,IAFA1E,EAAEpD,EAAI9K,GAAGyI,EAAEmE,QAAQ,MAAM,GAAG5M,IAAI4S,EAAM9H,EAAI9K,GAAGyI,EAAEmE,QAAQ,KAAK,EAAE,EAC9D+F,EAAK7H,EAAI9K,GAAGyI,EAAE4E,OAAO,EAAEa,GACjBA,EAAEpD,EAAI9K,GAAGyI,EAAEvE,SAAUgK,EACvBqE,EAAGG,EAAKxO,SAAQyO,GAAMD,EAAKpK,OAAOiK,MAEtCzH,EAAI9K,GAAGyI,EAAIkK,EACX7H,EAAI9K,GAAGkB,EAAI,IACX2R,EAAQ7S,IAIX,IAAIA,EAAE,EAAGA,EAAE8K,EAAI5G,SAAUlE,EAAgB,MAAV8K,EAAI9K,IAAc,KAAK4M,QAAQ9B,EAAI9K,GAAGkB,IAAI,IACxEuR,EAAOT,EAAM,GAAKvJ,EAAI,GAAKzI,EAAE,GAAoB,MAAf8K,EAAI9K,EAAE,GAAGyI,GAAaA,EAAEA,EAC1DqC,EAAI9K,GAAGyI,EAAI4F,EAAUvD,EAAI9K,GAAGkB,EAAG4J,EAAI9K,GAAGyI,EAAGgK,GACzC3H,EAAI9K,GAAGkB,EAAI,KAEZ,IAAI4R,EAAS,GACb,IAAI9S,EAAE,EAAGA,IAAM8K,EAAI5G,SAAUlE,EAAgB,MAAV8K,EAAI9K,KAAY8S,GAAUhI,EAAI9K,GAAGyI,GACpE,OAAOqK,EAtMRzM,EAAI0M,QAAUlB,EAwMdxL,EAAI2M,MAAQjB,EACZ,IAAIkB,EAAU,UACVC,EAAW,wCACf,SAASC,EAAQ1K,EAAG+H,GACnB,GAAS,MAANA,EAAY,OAAO,EACtB,IAAI4C,EAASC,WAAW7C,EAAG,IAC3B,OAAOA,EAAG,IACT,IAAK,IAAM,GAAG/H,GAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,IAAM,GAAG3K,EAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,IAAM,GAAG3K,EAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,KAAM,GAAG3K,GAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,KAAM,GAAG3K,GAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,KAAM,GAAG3K,GAAK2K,EAAQ,OAAO,EAEnC,OAAO,EAuBR,SAAS9M,EAAOqH,EAAIlF,EAAEhI,GACb,MAALA,IAAWA,EAAI,IAClB,IAAI8O,EAAO,GACX,cAAc5B,GACb,IAAK,SAC4B4B,EAAtB,UAAP5B,GAAmBlN,EAAE6S,OAAe7S,EAAE6S,OAC7B3F,EACZ,MACD,IAAK,SACsB4B,EAAhB,IAAP5B,GAAalN,EAAE6S,OAAe7S,EAAE6S,QACX,MAAX7S,EAAE8S,MAAiB9S,EAAO,MAAI+I,GAAWmE,GAGxD,GAAGxE,EAAUoG,EAAK,GAAI,OAAO/B,EAAY/E,EAAGhI,GACzCgI,aAAa8C,OAAM9C,EAAIwD,EAAcxD,EAAGhI,EAAE6K,WAC7C,IAAIkI,EApCL,SAAoBA,EAAG/K,GACtB,IAAIkF,EAAM8D,EAAU+B,GAChBvT,EAAI0N,EAAIzJ,OAAQuP,EAAM9F,EAAI1N,EAAE,GAAG2M,QAAQ,KAE3C,GADG3M,EAAE,GAAKwT,GAAK,KAAKxT,EACjB0N,EAAIzJ,OAAS,EAAG,MAAM,IAAIuJ,MAAM,iCAAmCE,EAAI3F,KAAK,KAAO,KACtF,GAAgB,iBAANS,EAAgB,MAAO,CAAC,EAAkB,IAAfkF,EAAIzJ,QAAgBuP,GAAK,EAAE9F,EAAIA,EAAIzJ,OAAO,GAAG,KAClF,OAAOyJ,EAAIzJ,QACV,KAAK,EAAGyJ,EAAM8F,GAAK,EAAI,CAAC,UAAW,UAAW,UAAW9F,EAAI,IAAM,CAACA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,KAAM,MAClG,KAAK,EAAGA,EAAM8F,GAAK,EAAI,CAAC9F,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAAM,CAACA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,KAAM,MACzF,KAAK,EAAGA,EAAM8F,GAAK,EAAI,CAAC9F,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAAM,CAACA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,KAGpF,IAAIwC,EAAK1H,EAAI,EAAIkF,EAAI,GAAKlF,EAAI,EAAIkF,EAAI,GAAKA,EAAI,GAC/C,IAA4B,IAAzBA,EAAI,GAAGf,QAAQ,OAAwC,IAAzBe,EAAI,GAAGf,QAAQ,KAAa,MAAO,CAAC3M,EAAGkQ,GACxE,GAA4B,MAAzBxC,EAAI,GAAGyB,MAAM6D,IAA6C,MAAzBtF,EAAI,GAAGyB,MAAM6D,GAAkB,CAClE,IAAIS,EAAK/F,EAAI,GAAGyB,MAAM8D,GAClBS,EAAKhG,EAAI,GAAGyB,MAAM8D,GACtB,OAAOC,EAAQ1K,EAAGiL,GAAM,CAACzT,EAAG0N,EAAI,IAAMwF,EAAQ1K,EAAGkL,GAAM,CAAC1T,EAAG0N,EAAI,IAAM,CAAC1N,EAAG0N,EAAU,MAAN+F,GAAoB,MAANC,EAAa,EAAI,IAE7G,MAAO,CAAC1T,EAAGkQ,GAiBHyD,CAAWrE,EAAM9G,GACzB,GAAGU,EAAUqK,EAAE,IAAK,OAAOhG,EAAY/E,EAAGhI,GAC1C,IAAS,IAANgI,EAAYA,EAAI,YAAa,IAAS,IAANA,EAAaA,EAAI,aAC/C,GAAS,KAANA,GAAiB,MAALA,EAAW,MAAO,GACtC,OAAOsJ,EAASyB,EAAE,GAAI/K,EAAGhI,EAAG+S,EAAE,IAE/B,SAASK,EAAWlG,EAAK3G,GACxB,GAAiB,iBAAPA,EAAiB,CAC1BA,GAAOA,IAAQ,EACjB,IAAI,IAAIhH,EAAI,EAAGA,EAAI,MAAUA,EAC7B,GAAmB8T,MAAhBtK,EAAUxJ,IACV,GAAGwJ,EAAUxJ,IAAM2N,EAAK,CAAE3G,EAAMhH,EAAG,YADHgH,EAAM,IAAGA,EAAMhH,GAG/CgH,EAAM,IAAGA,EAAM,KAGjB,OADDwC,EAAUxC,GAAO2G,EACT3G,EAERX,EAAI0N,KAAOF,EACXxN,EAAI2N,OAASxK,EACbnD,EAAI4N,UAAY,WAAuB,OAAOzK,GAC9CnD,EAAI6N,WAAa,SAAoBC,GACpC,IAAI,IAAInU,EAAE,EAAM,KAAHA,IAAaA,OACX8T,IAAXK,EAAInU,IAAkB6T,EAAWM,EAAInU,GAAIA,IAE9CqG,EAAIkD,WAAaA,EACjBlD,EAAIC,OAASA,EAEb8N,CAAS/N,GAEwD,oBAAtBgO,oBAAmCtU,EAAOD,QAAUuG,I,6BCl2B/F,kCAIA,MAAMiO,EAAwB,CAC5BC,MAAO,CACLC,QAAS,QACT7R,KAAM,SACN8R,QAAS,SACTnS,MAAO,QACP0B,OAAQ,CACN,CAAE,YAAe,eACjB,CAAE,OAAU,UACZ,CAAE,aAAgB,gBAClB,CAAE,mBAAoB,WAExB0Q,QAAS,cACTC,MAAO,GAETC,YAAa,CACXJ,QAAS,QACT7R,KAAM,SACNL,MAAO,wBACPoS,QAAS,GACTC,MAAO,GAETE,OAAQ,CACNL,QAAS,QACT7R,KAAM,SACN8R,QAAS,SACTnS,MAAO,SACP0B,OAAQ,CACN,CAAE,KAAQ,SACV,CAAE,KAAQ,SAEZ0Q,QAAS,QACTC,MAAO,GAETG,YAAa,GACbC,aAAc,CACZP,QAAS,QACT7R,KAAM,UACNL,MAAO,gBACP0S,aAAc,OACdN,SAAS,EACTC,MAAO,GAETM,aAAc,CACZT,QAAS,QACT7R,KAAM,UACNL,MAAO,gBACP0S,aAAc,OACdN,SAAS,EACTC,MAAO,GAETO,SAAU,CACRV,QAAS,QACT7R,KAAM,UACNL,MAAO,aACP0S,aAAc,OACdN,SAAS,EACTC,MAAO,GAETQ,SAAU,CACRX,QAAS,QACT7R,KAAM,UACNL,MAAO,gBACP0S,aAAc,OACdN,SAAS,EACTC,MAAO,GAETS,cAAe,CACbZ,QAAS,QACT7R,KAAM,SACNL,MAAO,kBACPoS,QAAS,EACTC,MAAO,GAETU,cAAe,CACbb,QAAS,QACT7R,KAAM,SACN8R,QAAS,SACTnS,MAAO,kBACP0B,OAAQ,CACN,CAAE,OAAU,mBACZ,CAAE,SAAY,sBAEhB0Q,QAAS,kBACTC,MAAO,GAET5M,YAAa,CACXyM,QAAS,QACT7R,KAAM,UACNL,MAAO,oBACPoS,SAAS,EACTC,MAAO,GAETxM,YAAa,CACXqM,QAAS,QACT7R,KAAM,UACNL,MAAO,iCACPoS,SAAS,EACTC,MAAO,GAET9M,aAAc,CACZ2M,QAAS,QACT7R,KAAM,UACNL,MAAO,8BACPoS,SAAS,EACTC,MAAO,GAETW,qBAAsB,CACpBd,QAAS,QACT7R,KAAM,UACNL,MAAO,sCACPoS,SAAS,EACTC,MAAO,IAETY,YAAa,CACXf,QAAS,aACT7R,KAAM,UACNL,MAAO,sBACPoS,SAAS,EACTC,MAAO,GAETa,cAAe,CACbhB,QAAS,QACT7R,KAAM,UACNL,MAAO,YACPoS,SAAS,EACTC,MAAO,MAisDX7U,QAAQ2V,oBA1rDR,MAqCE,YAAYC,EAAYC,EAAe3S,GACrCb,KAAKyF,MAAQ,eACbzF,KAAKa,OAASA,EAEdb,KAAKyT,WAAa,GAClBzT,KAAK0T,SAAW,GAChB1T,KAAK2T,QAAU,GACf3T,KAAK0E,KAAO,GACZ1E,KAAK4T,eAAiB,GAEtB5T,KAAK6T,mBAAqB,GAC1B7T,KAAK8T,gBAAkB,GAEvB9T,KAAK+T,aAAe,GACpB/T,KAAKgU,OAAS,GACdhU,KAAKiU,aAAe,GACpBjU,KAAKkU,UAAY,GACjBlU,KAAKmU,cAAgB,GAErBnU,KAAKoU,eAAiB,GACtBpU,KAAKqU,eAAiB,GAEtBrU,KAAKsU,eAAiBzT,EAAOuS,cAAe,EAC5CpT,KAAKgG,YAAcnF,EAAOmF,cAAe,EACzChG,KAAK0F,aAAe7E,EAAO6E,eAAgB,EAC3C1F,KAAK4F,YAAc/E,EAAO+E,cAAe,EACzC5F,KAAKuU,gBAAkB1T,EAAO+R,eAAgB,EAC9C5S,KAAKwU,iBAAmB3T,EAAOoS,eAAiBjT,KAAKyT,WAAW1R,OAAS,EACzE/B,KAAK+S,SAAoBlS,EAAOkS,SAChC/S,KAAKgT,SAAoBnS,EAAOmS,SAChChT,KAAK+F,WAAalF,EAAOqS,eAAiB,kBAE1ClT,KAAKyU,YAAa,EAClBzU,KAAK0U,eAAgB,EACrB1U,KAAK2U,eAAiBnB,EAAcmB,iBAAkB,EACtD3U,KAAK8F,YAAa,EAClB9F,KAAK4U,YAAa,EAElB5U,KAAK6U,eAAiBhU,EAAOwS,cAG7BrT,KAAK8U,4BAA4BtB,GACjCxT,KAAK+U,4BACL/U,KAAKgV,cAAcxB,EAHL,GAIdxT,KAAKiV,YAAYzB,EAJH,GAKdxT,KAAKkV,iBAAiB1B,GACtBxT,KAAKmV,mBAAmB3B,GACxBxT,KAAKoV,UAAU7B,GACfvT,KAAKqV,kBACLrV,KAAKsV,YAAY9B,GACjBxT,KAAKuV,sBACDvV,KAAKa,OAAO+R,cAAgB5S,KAAKwV,aAAa3U,EAAOoS,eACrDjT,KAAKa,OAAOiS,cAA4C,GAA5B9S,KAAK+T,aAAahS,QAAe/B,KAAKyV,qBACtEzV,KAAK0V,qBAEL1V,KAAK2V,cACL3V,KAAK4V,kBACD5V,KAAK6U,iBACP7U,KAAK6V,mBACL7V,KAAK8V,iBAEP9V,KAAK+V,iBAIP,8BACE,OAAO5D,EAST,mBACE,IAAI6D,EAAa7D,EA2HjB,OAzHAnS,KAAKyT,WAAWpS,QAAQ,CAAC4U,EAAWpY,KAClCmY,EAAW,SAAWC,EAAU7X,MAAQ,CACtCiU,QAAS,aACT7R,KAAM,SACNL,MAAO8V,EAAU9V,MACjBoS,QAAS0D,EAAU9V,MACnBqS,MAAW,GAAJ3U,EAAS,GAGlBmY,EAAW,WAAaC,EAAU7X,MAAQ,CACxCiU,QAAS,aACT7R,KAAM,SACNL,MAAO,UACPoS,QAAS,GACTC,MAAW,GAAJ3U,EAAS,GAGlBmY,EAAW,QAAUC,EAAU7X,MAAQ,CACrCiU,QAAS,aACT7R,KAAM,UACNL,MAAO,OACP0S,aAAc,QACdN,SAAS,EACTC,MAAW,GAAJ3U,EAAS,KAIpBmC,KAAK0T,SAASrS,QAAQ,CAAC6U,EAASrY,KAC9BmY,EAAW,SAAWE,EAAQ9X,MAAQ,CACpCiU,QAAS,WACT7R,KAAM,SACNL,MAAO+V,EAAQ9V,aAAe8V,EAAQ/V,MACtCoS,QAAS2D,EAAQ9V,aAAe8V,EAAQ/V,MACxCqS,MAAO,IAAU,GAAJ3U,EAAS,GAGxBmY,EAAW,WAAaE,EAAQ9X,MAAQ,CACtCiU,QAAS,WACT7R,KAAM,SACNL,MAAO,gBAAmB+V,EAAQ9V,aAAe8V,EAAQ/V,OACzDoS,QAAS,GACTC,MAAO,IAAU,GAAJ3U,EAAS,GAGxBmY,EAAW,SAAWE,EAAQ9X,MAAQ,CACpCiU,QAAS,WACT7R,KAAM,SACNL,MAAO,QACPmS,QAAS,SACTzQ,OAAQ,CACN,CAAC,OAAU,UACX,CAAC,YAAa,aACd,CAAC,SAAY,YACb,CAAC,OAAU,SAEb2Q,MAAO,IAAU,GAAJ3U,EAAS,GAGxB,IAAIsY,EAAoB,GAExB,GAAID,EAAQ7S,UAAW,CACrB,IAAI+S,EAAmB,GACvBpW,KAAK+T,aAAa1S,QAAQ,CAACgV,EAAa1W,KACtC,GAAiC,IAA7BK,KAAK+T,aAAahS,QAAsB,IAANpC,GAAWK,KAAKa,OAAOiS,aAAe,CAC1E,IAAIwD,EAAS,GACbA,EAAO,MAAQD,GAAeA,EAC9BD,EAAiBpV,KAAKsV,MAG1BH,EAAoBA,EAAkBI,OAAOH,GAI/CpW,KAAK0T,SAASrS,QAAQ,CAACmV,EAAmBzK,KACxC,IAAI0K,EAAiBP,EAAQ7S,YAAcmT,EAAkBnT,WAEzCrD,KAAK2U,iBAAmB6B,EAAkBlT,qBAC9D,GAAIzF,GAAKkO,GAAK0K,EAAgB,CAC5B,IAAIH,EAAS,GACbA,EAAO,OAASE,EAAkBrW,OAASqW,EAAkBpY,KAC7D+X,EAAkBnV,KAAKsV,MAG3BH,EAAkBO,QAAQ,CAAE,SAAU,gBAEtCV,EAAW,cAAgBE,EAAQ9X,MAAQ,CACzCiU,QAAS,WACT7R,KAAM,SACNL,MAAO,aACPmS,QAAS,SACTzQ,OAAQsU,EACR3D,MAAO,IAAU,GAAJ3U,EAAS,GAGxBmY,EAAW,UAAYE,EAAQ9X,MAAQ,CACrCiU,QAAS,WACT7R,KAAM,UACNL,MAAO,SACP0S,aAAc,QACdN,SAAS,EACTC,MAAO,IAAU,GAAJ3U,EAAS,GAGxBmY,EAAW,WAAaE,EAAQ9X,MAAQ,CACtCiU,QAAS,WACT7R,KAAM,UACNL,MAAO,QACP0S,aAAc,QACdN,SAAS,EACTC,MAAO,IAAU,GAAJ3U,EAAS,GAGxBmY,EAAW,WAAaE,EAAQ9X,MAAQ,CACtCiU,QAAS,WACT7R,KAAM,UACNL,MAAO,QACP0S,aAAc,QACdN,SAAS,EACTC,MAAO,IAAU,GAAJ3U,EAAS,KAGnBmY,EAWT,4BAA4BxC,GAC1BA,EAAcmD,OAAO3C,OAAO3S,QAAQgV,IAClCrW,KAAK+T,aAAa/S,KAAKqV,EAAYjY,MACnC4B,KAAKgU,OAAOhT,KAAKqV,UAGiB,IAAzB7C,EAAcQ,SACvBhU,KAAKiU,aAAeT,EAAcQ,OAClChU,KAAK8F,YAAa,QAGkC,IAA3C0N,EAAcmD,OAAOC,oBAC9B5W,KAAK4U,YAAa,GAQtB,4BACE,IAAI/T,EAASb,KAAKa,OAClBtC,OAAOqD,KAAKf,GAAQQ,QAAQiV,IAC1B,GAAIA,EAAOO,WAAW,cAAe,CACnC,IAAIC,EAAWR,EAAO/U,MAAM,KAAK,GAEjC,GAAIvB,KAAK+T,aAAaxT,SAASM,EAAOyV,IACpC,IAAI9V,EAAO,gBAEPA,EAAO,aAGb,QAA4C,IAAjCK,EAAO,UAAYiW,GAC5B,GAAIjW,EAAO,UAAYiW,GACrB,IAAIC,GAAU,OAEVA,GAAU,EAIlB/W,KAAKkU,UAAUlT,KAAK,CAClB8V,SAAUA,EACVE,WAAYnW,EAAOyV,GACnB9V,KAAMA,EACNuW,QAASA,OAgBjB,cAAcvD,EAAeyD,GAC3BzD,EAAcmD,OAAOO,eAAe7V,QAAQ4U,IAC1C,IAAIkB,EAAM,IAAI,iBAAe,CAC3BrX,IAAKE,KACLD,mBAAoBkW,IAEtBjW,KAAKyT,WAAWzS,KAAKmW,GAErB,IAAIzT,EAAS,IAAI,SAAOyT,EAAI/Y,KAAM4B,KAAMmX,GACxCzT,EAAOmB,IAAMoS,EACbvT,EAAOqB,OAAS,mBAASyO,EAAcmD,OAAO3C,OAAOjS,OAAQ,IAC7D2B,EAAO2B,uBAAyB,CAAC,EAAG4R,KAAY,mBAASjX,KAAK+T,aAAahS,OAAQ,IACnF2B,EAAO4B,qBAAuB,CAAC,KAAM,mBAAStF,KAAK+T,aAAahS,OAAQ,GAAIkV,GAE5EjX,KAAK2T,QAAQ3S,KAAK0C,GAClBuT,GAAW,KAcf,YAAYzD,EAAeyD,GACzB,IAAIpW,EAASb,KAAKa,OAElB2S,EAAcmD,OAAOS,aAAa/V,QAAQ6U,IACxC,IAAImB,EAAa,IAAI,eAAa,CAChCvX,IAAKE,KACLD,mBAAoBmW,EACpB7S,WAAW,IAEbrD,KAAK0T,SAAS1S,KAAKqW,KAIjBrX,KAAK8F,WACP9F,KAAKiU,aAAa5S,QAAQiW,IACxBtX,KAAK0T,SAASrS,QAAQ,CAAC6U,EAASjY,KAQ9B,GANqB,qBAAnBqZ,EAAYlY,KAEO,qBAAnBkY,EAAYlY,KACuB,GAAhC8W,EAAQ5S,qBAGQ,CACnB,IAAIiU,EAAWD,EAAYlY,IAAM,IAAM8W,EAAQ9X,KAE3C2G,EAAS,GACTyS,EAAoB,GACxBhE,EAAcmD,OAAO3C,OAAO3S,QAAQgV,IAClCtR,EAAO/D,KAAKsW,EAAkB,KAAEjB,EAAYjY,OAC5CoZ,EAAkBxW,KAAKsW,EAAyB,YAAEjB,EAAYjY,SAGhE,IAAI4F,EAAakS,EACbxS,EAAS,IAAI,SAAO6T,EAAUvX,KAAMgE,GACxCN,EAAOmB,IAAMoS,EACbvT,EAAOqB,OAASA,EAChBrB,EAAOyB,SAAU,EACjBzB,EAAOsB,UAAYsS,EAAYlY,IAEP,sBAApBkY,EAAYlY,KACdsE,EAAO2B,uBAAyB,CAAC,EAAGpH,KAAMuZ,GAC1C9T,EAAO4B,qBAAuB,CAAC,KAAMkS,EAAmBP,KAExDvT,EAAOR,OAAQ,EACfQ,EAAO2B,uBAAyB,CAAC,EAAGpH,KAAM,mBAAS+B,KAAK+T,aAAahS,OAAQ,IAC7E2B,EAAO4B,qBAAuB,CAAC,KAAM,mBAAStF,KAAK+T,aAAahS,OAAQ,GAAIkV,IAG9EjX,KAAK2T,QAAQ3S,KAAK0C,GAClBuT,GAAW,QAMjBjX,KAAK0T,SAASrS,QAAQ6U,IACpB,IAAIxS,EAAS,IAAI,SAAOwS,EAAQ9X,KAAM4B,KAAMkW,GAC5CxS,EAAOmB,IAAMoS,EACb,SAC+C,IAAlCpW,EAAO8R,YAAYjP,EAAOc,IACnCd,EAAOoB,IAAMjE,EAAO8R,YAAYjP,EAAOc,IAEvCd,EAAOoB,IAAMmS,EAGjB,MACEvT,EAAOoB,IAAMmS,EAEfvT,EAAO2B,uBAAyB,CAAC,EAAG3B,EAAOoB,KAC3CpB,EAAO4B,qBAAuB,CAAC,EAAG5B,EAAOoB,KACzC9E,KAAK2T,QAAQ3S,KAAK0C,GAElBuT,GAAW,UAKuC,IAA3CzD,EAAcmD,OAAOC,mBAC9BpD,EAAcmD,OAAOC,kBAAkBvV,QAAQoW,IAC7C,IAAIC,EAAO,IAAI,eAAa,CAC1B5X,IAAKE,KACLD,mBAAoB0X,EACpBpU,WAAW,IAEbrD,KAAK0T,SAAS1S,KAAK0W,GAEnB,IAAIhU,EAAS,IAAI,SAAOgU,EAAKtZ,KAAM4B,KAAM0X,GACzChU,EAAOmB,IAAMoS,EACbvT,EAAOqB,OAAS,mBAASyO,EAAcmD,OAAO3C,OAAOjS,OAAQ,IAC7D2B,EAAOR,OAAQ,EACfQ,EAAO2B,uBAAyB,CAAC,EAAG4R,KAAY,mBAASjX,KAAK+T,aAAahS,OAAQ,IACnF2B,EAAO4B,qBAAuB,CAAC,KAAM,mBAAStF,KAAK+T,aAAahS,OAAQ,GAAIkV,GAE5EjX,KAAK2T,QAAQ3S,KAAK0C,GAClBuT,GAAW,KAWjB,iBAAiBzD,GACf,IAAImE,EAAe,IAAI,SAAO,gBAAiB3X,KAAMA,KAAKyT,WAAWzT,KAAKyT,WAAW1R,OAAS,IAE9F4V,EAAa5S,OAAS,mBAASyO,EAAcmD,OAAO3C,OAAOjS,OAAQ,IACnE4V,EAAatS,uBAAyB,EAAE,EAAG,KAAM,mBAASrF,KAAK+T,aAAahS,OAAQ,IACpF4V,EAAarS,qBAAuB,EAAE,KAAM,mBAAStF,KAAK+T,aAAahS,OAAQ,GAAI,GAEnF/B,KAAK2T,QAAQ3S,KAAK2W,GAGpB,mBAAmBnE,QAC2B,IAAjCA,EAAcI,iBACvB5T,KAAK0U,eAAgB,OAE8C,IAAxDlB,EAAcI,eAAe5T,KAAKwU,mBAC3ChB,EAAcI,eAAe5T,KAAKwU,kBAAkBnT,QAAQuW,IAC1D,IAAIC,EAAc,IAAI,MAAI,YAE1BA,EAAgC,mBAAID,EAAmC,mBACvE,IAAIE,EAAS,CAAC,YACdD,EAAgC,mBAAExW,QAAQ0W,IACxCD,EAAO9W,KAAK4W,EAAeG,GAAOjZ,SAEpC+Y,EAAYrT,GAAKsT,EAAOjS,KAAK,KAE7B7F,KAAK2T,QAAQtS,QAAQqC,IACfA,EAAOyB,QACT0S,EAAYnT,KAAKhB,EAAOc,IAAMoT,EAAelU,EAAOM,WAAW5F,MAAMsF,EAAOsB,WAE5E6S,EAAYnT,KAAKhB,EAAOc,IAAMoT,EAAelU,EAAOc,SAGX,IAAhCqT,EAAYnT,KAAKhB,EAAOc,WACqB,IAA3CqT,EAAYnT,KAAKhB,EAAOc,IAAIwT,WACrCH,EAAYnT,KAAKhB,EAAOc,IAAIwT,WAAa,CAAC,QAAS,YAEnDC,WAAWvT,KAAKhB,EAAOc,IAAIwT,WAAWzB,OAAO,CAAC,QAAS,kBAElB,IAA5B7S,EAAOM,WAAWlD,QAC3B+W,EAAYnT,KAAKhB,EAAOc,IAAIwT,WAAaH,EAAYnT,KAAKhB,EAAOc,IAAIwT,WAAWzB,OAAO7S,EAAOM,WAAWlD,QAEjE,OAAtC+W,EAAYnT,KAAKhB,EAAOc,IAAI1F,QAC9B+Y,EAAYnT,KAAKhB,EAAOc,IAAIV,SAAW,OAI7C9D,KAAK4T,eAAeiE,EAAYrT,IAAMqT,KAU9C,UAAUtE,GACRA,EAAWlS,QAAQ,CAAC6W,EAAWra,KAC7B,IAAI8F,EAAM,IAAI,MAAI,aAGlB3D,KAAK2T,QAAQtS,QAAQqC,IAQnB,GANIA,EAAOyB,QACTxB,EAAIe,KAAKhB,EAAOc,IAAM0T,EAAUxU,EAAOM,WAAW5F,MAAMsF,EAAOsB,WAE/DrB,EAAIe,KAAKhB,EAAOc,IAAM0T,EAAUxU,EAAOc,SAGN,IAAxBb,EAAIe,KAAKhB,EAAOc,WACqB,IAAnCb,EAAIe,KAAKhB,EAAOc,IAAIwT,aAC7BrU,EAAIe,KAAKhB,EAAOc,IAAIwT,WAAa,SAEI,IAA5BtU,EAAOM,WAAWlD,QAC3B6C,EAAIe,KAAKhB,EAAOc,IAAIwT,WAAarU,EAAIe,KAAKhB,EAAOc,IAAIwT,WAAWzB,OAAO7S,EAAOM,WAAWlD,QAEzD,OAA9B6C,EAAIe,KAAKhB,EAAOc,IAAI1F,QACtB6E,EAAIe,KAAKhB,EAAOc,IAAIV,SAAW,IAE7BJ,EAAOM,WAAWR,WAAW,CAC/B,IAAI2U,EAAc,IAAI,aAAW,CAC/BzU,OAAQA,EACRC,IAAKA,EACLC,WAAYD,EAAIe,KAAKhB,EAAOc,IAAIZ,WAChCC,OAAQ,CACNjC,KAAM+B,EAAIe,KAAKhB,EAAOc,IAAI4T,QAAQxW,KAClCC,OAAQ8B,EAAIe,KAAKhB,EAAOc,IAAI4T,QAAQvW,UAGxC8B,EAAIe,KAAKhB,EAAOc,IAAI1F,MAAQqZ,EAC5BxU,EAAIe,KAAKhB,EAAOc,IAAIV,SAAWqU,EAAYE,eAMjD,IAAIC,EAAW,GACftY,KAAKyT,WAAWpS,QAAQ4U,IACtBqC,EAAStX,KAAK2C,EAAIe,KAAKuR,EAAU7X,MAAMU,SAEzC6E,EAAIa,GAAK8T,EAASzS,KAAK,KAGvB,IAAI0S,EAAWvY,KAAKyT,WAAWzT,KAAKyT,WAAW1R,OAAS,GAAG3D,KAE3DuF,EAAIe,KAAoB,cAAI,CAC1B5F,MAAO6E,EAAIe,KAAK6T,GAAUzZ,MAC1BgF,SAAU9D,KAAKwY,oBAAoB7U,EAAIe,KAAK6T,IAC5CE,KAAM9U,EAAIe,KAAK6T,GAAUE,KACzBT,WAAY,CAAC,WAGfrU,EAAIc,KAAO,CAAC,EAAG,EAAG5G,GAClBmC,KAAK0E,KAAK1D,KAAK2C,KAOnB,kBACE3D,KAAK2T,QAAQtS,QAAQqX,IACnB,IAAI/S,EAAiB3F,KAAKa,OAAO,SAAW6X,EAAI1U,WAAW5F,MAC3D,QAA8B,IAAnBuH,EACT,OAAQA,GACN,IAAK,YACH3F,KAAK0E,KAAKrD,QAAQsC,IACZA,EAAIe,KAAKgU,EAAIlU,IAAI1F,MAAQ,GAC3B6E,EAAIe,KAAKgU,EAAIlU,IAAIwT,WAAWhX,KAAK,YAa/C,cAAewD,GACb,IAAId,EAAS,GAMb,OALA1D,KAAK2T,QAAQtS,QAAQnD,IACfsG,IAAOtG,EAAEsG,KACXd,EAASxF,KAGNwF,EAGT,iBAAkBtF,GAChB,IAAI8X,EAAU,GAMd,OALAlW,KAAK0T,SAASrS,QAAQpD,IAChBG,IAASH,EAAEG,OACb8X,EAAUjY,KAGPiY,EAOT,sBACE,IAAIyC,EAAe,GACnB3Y,KAAKyT,WAAWpS,QAAQ4U,IACtB0C,EAAa1C,EAAU7X,MAAQ,IAIjC,IAAK,IAAIO,EAAIqB,KAAK0E,KAAK3C,OAAO,EAAGpD,GAAK,EAAIA,IAAK,CAC7C,IAAIgF,EAAM3D,KAAK0E,KAAK/F,GAGpB,GAAiB,cAAbgF,EAAInD,KAAR,CAQAR,KAAKqU,eAAe1Q,EAAIa,IAAM,GAC9B,IAAK,IAAI3G,EAAI,EAAGA,EAAImC,KAAKyT,WAAW1R,OAAQlE,IAAK,CAC/C,IAAIoY,EAAYjW,KAAKyT,WAAW5V,GAC5B+a,EAAkB5Y,KAAK0E,KAAK/F,GAAG+F,KAAKuR,EAAU7X,MAAMU,MACxD,GAAIH,EAAI,EACN,IAAIka,EAAmB7Y,KAAK0E,KAAK/F,EAAE,GAAG+F,KAAKuR,EAAU7X,MAAMU,MAI7D,KAAIH,EAAI,GAAKia,GAAmBC,GAGzB,CAEL,IAAK,IAAIC,EAAKjb,EAAGib,EAAK9Y,KAAKyT,WAAW1R,OAAQ+W,IAAM,CAClD,IAAIC,EAAO/Y,KAAKyT,WAAWqF,GAAI1a,KAC/B4B,KAAKqU,eAAe1Q,EAAIa,IAAIuU,GAAQJ,EAAaI,GACjDJ,EAAaI,GAAQ,EAEvB,MATA/Y,KAAKqU,eAAe1Q,EAAIa,IAAIyR,EAAU7X,OAAS,EAC/Cua,EAAa1C,EAAU7X,OAAS,QAlBlC4B,KAAKyT,WAAWpS,QAAQ4U,IACtB0C,EAAa1C,EAAU7X,MAAQ,KAuCvC,WASE4B,KAAK0E,KAAKD,KARiB,CAAChC,EAAGC,KAE7B,IADA,IAAIsW,EAAQvW,EAAEgC,KAAK1C,OACXlE,EAAE,EAAGA,EAAEmb,EAAOnb,IAAK,CACvB,GAAI4E,EAAEgC,KAAK5G,GAAK6E,EAAE+B,KAAK5G,GAAM,OAAO,EACpC,GAAI4E,EAAEgC,KAAK5G,GAAK6E,EAAE+B,KAAK5G,GAAM,OAAQ,EAEzC,OAAQ,IAGVmC,KAAKuV,sBAoBP,cAYE,GAFAvV,KAAK2T,QAAQlP,KATc,CAAChC,EAAGC,KAG7B,IAFA,IAAIuW,EAAQjZ,KAAK+F,WACbiT,EAAQvW,EAAEwW,KAASlX,OACflE,EAAE,EAAGA,EAAEmb,EAAOnb,IAAK,CACvB,GAAI4E,EAAEwW,KAASpb,GAAK6E,EAAEuW,KAASpb,GAAM,OAAO,EAC5C,GAAI4E,EAAEwW,KAASpb,GAAK6E,EAAEuW,KAASpb,GAAM,OAAQ,EAEjD,OAAQ,IAINmC,KAAKsU,eACP,IAAIX,EAAU3T,KAAK2T,QAAQuF,OAAOhb,GAA0B,WAArBA,EAAE8F,WAAWxD,MAA8B,kBAATtC,EAAEsG,IAAwB0U,OAAOhb,IAAMA,EAAE0C,WAE9G+S,EAAW3T,KAAK2T,QAAQuF,OAAOhb,GAAc,kBAATA,EAAEsG,IAAwB0U,OAAOhb,IAAMA,EAAE0C,MAEnFZ,KAAKmZ,YAAYxF,GAqBnB,eACE,IAAIqF,EAAQhZ,KAAKwU,iBAGb4E,EAAiB,GACjBC,EAAe,GACnBrZ,KAAK0E,KAAKrD,QAAQ,CAACsC,EAAK9F,KACtB,GAAiB,UAAb8F,EAAInD,KAAkB,CAExB,IADA,IAAIuX,EAAQ,GACHuB,EAAI,EAAGA,EAAIN,EAAOM,IAAK,CAC9B,IAAInC,EAAMnX,KAAKyT,WAAW6F,GAAGlb,KAC7B2Z,EAAM/W,KAAK2C,EAAIe,KAAKyS,GAAKrY,OAEvBiZ,EAAMlS,KAAK,OAASwT,EAAaxT,KAAK,OACxCuT,EAAepY,KAAK+W,GACpBsB,EAAetB,GAEjBpU,EAAIc,KAAO,CAAC,EAAG2U,EAAerX,OAAO,EAAGlE,MAK5C,IADA,IAAI0b,EAAwBvZ,KAAKyT,WAAW,GAAGrV,KACtCP,EAAI,EAAGA,EAAImC,KAAKyT,WAAW1R,OAAQlE,IAAK,CAC/C,IAAIoY,EAAYjW,KAAKyT,WAAW5V,GAChC,IAAKoY,EAAUrV,KAAM,CACnB2Y,EAAwBtD,EAAU7X,KAClC,OAKJgb,EAAe/X,QAAQ,CAACmY,EAAe5Z,KACrC,IAAIwF,EAAW,IAAI,MAAI,YACvBA,EAASZ,GAAK,YAAcgV,EAAc3T,KAAK,KAE/C7F,KAAK2T,QAAQtS,QAAQqC,IAGnB,GAFA0B,EAASV,KAAKhB,EAAOc,IAAM,CAAE,WAAc,CAAC,QAAS,aAEnC,kBAAdd,EAAOc,IAA0Bd,EAAOc,KAAO+U,EAAwB,CACzE,IAAIE,EAAiBD,EAAc3T,KAAK,OACxCT,EAASV,KAAKhB,EAAOc,IAAI1F,MAAQ2a,EAGnC,GAA8B,WAA1B/V,EAAOM,WAAWxD,KACpB,GAAIjC,OAAOmb,QAAQ1Z,KAAK4T,gBAAgB7R,OAAS,EAC/CqD,EAASV,KAAKhB,EAAOc,IAAM,IAAKY,EAASV,KAAKhB,EAAOc,OAAQxE,KAAK4T,eAAexO,EAASZ,IAAIE,KAAKhB,EAAOc,SACrG,CACL,GAAId,EAAOyB,QACT,IAAIwU,EAAU,CAACjW,EAAOsB,UAAWtB,EAAOM,WAAW5F,MAAMyH,KAAK,UAE1D8T,EAAUjW,EAAOc,GAGvB,IAAIoV,EAAiB,EACjBC,EAAiB,EACjB/V,EAAW,GACf9D,KAAK0E,KAAKrD,QAAQyY,IAChB,GAAqB,aAAjBA,EAAStZ,MAAuBsZ,EAASrV,KAAK,IAAM7E,EAAG,CACzD,IAAId,EAAQgb,EAASpV,KAAKiV,GAAS7a,MAC/Bib,OAAOC,SAASlb,KAClB8a,GAAkB9a,EAClB+a,QAKqC,YAAvCnW,EAAOM,WAAWT,kBAAkCsW,EAAiB,IACvED,GAAkCC,GAEhCD,IACF9V,EAA8C,KAAnCJ,EAAOM,WAAWvD,aAAsBmZ,EAAe3V,WAAa,IAAIE,OAAOT,EAAOM,WAAWvD,aAAcmZ,IAEjF,WAAvClW,EAAOM,WAAWT,mBACpBqW,EAAiB,GACjB9V,EAAW,IAGb,IAAImW,EAAY,CACdnb,MAAO8a,EACP9V,SAAUA,EACVkU,WAAY,CAAC,WAAY,UAE3B5S,EAASV,KAAKiV,GAAWM,KAI/B7U,EAASX,KAAO,CAAC,EAAG7E,EAAG,MACvBI,KAAK0E,KAAK1D,KAAKoE,KAEjBpF,KAAKka,WACLla,KAAK0U,eAAgB,EAWvB,qBACE,IAAIyF,EAAiB,GACjBC,EAAiB,GACjBC,EAAY,GAEZrG,EAAS,GACTsG,EAAkBta,KAAK+T,aAAa,GAyFxC,OAxFA/T,KAAKiU,aAAa5S,QAAQiW,IACxB,IAAIiD,EAAUjD,EAAkB,KAAEgD,GAClB,OAAZC,GAAoBvG,EAAOhT,KAAKuZ,MAEtCvG,EAAS,IAAI,IAAIwG,IAAIxG,KAGd3S,QAAQ,CAACoZ,EAAO9a,KACrB,IAAI+a,EAAoB,CAAC,EAAG,IACxBC,EAAoB,KAExB3a,KAAK0T,SAASrS,QAAQ,CAAC6U,EAASjY,KAC9B,GAAIiY,EAAQ7S,UAAW,CACrB,IAAIuX,EAAe,CACjB5W,WAAYkS,EACZuE,MAAOA,EACPI,YAAa5c,EACb6c,UAAWnb,EACXgU,QAAS,GACTnP,GAAI,CAAC,mBAAoBiW,EAAOvE,EAAQ9X,MAAMyH,KAAK,KACnDkV,MAAO,IAGT/a,KAAK2T,QAAQtS,QAAQ,CAACqC,EAAQ7F,KACxB6F,EAAOyB,SAAWzB,EAAOqB,OAAO,IAAM0V,IACpC/W,EAAOM,WAAW5F,MAAQ8X,EAAQ9X,MACpCwc,EAAajH,QAAQ3S,KAAK0C,EAAOc,IAE/Bd,EAAOqB,OAAO,IAAM0V,GAClB5c,EAAI6c,EAAkB,KACxBA,EAAoB,CAAC7c,EAAG6F,EAAOc,QAMnCiW,GAASN,IACXC,EAAeK,GAASC,EAAkB,GAC1CC,EAAoB,MAGtBC,EAAaG,MAAQJ,GAAqBP,EAAeK,GACzDN,EAAiBM,EACjBE,EAAoBC,EAAapW,GACjC6V,EAAUrZ,KAAK4Z,QAMrBP,EAAUhZ,QAAQ,CAAC+D,EAAUxF,KAC3B,IAAIoE,EAAahE,KAAK0T,SAAStO,EAASyV,aACpCnX,EAAS,IAAI,SAAO0B,EAASZ,GAAIxE,KAAMgE,GAE3CN,EAAOqB,OAAS,CAACK,EAASqV,MAAO,YACjC/W,EAAO2B,uBAAyB,CAAC,EAAGD,EAASyV,eAAgBnX,EAAOqB,QAEpE,IAAIkP,EAAe,IAAIvQ,EAAOqB,QACoB,iBAAvCkP,EAAaA,EAAalS,OAAO,GAC1CkS,EAAaA,EAAalS,OAAO,GAAK,OAEtCkS,EAAaA,EAAalS,OAAO,GAAK,KAExC2B,EAAO4B,qBAAuB,CAAC,KAAM2O,EAAc,IAAQrU,GAC3D8D,EAAOyB,SAAU,EACjBzB,EAAO0B,UAAW,EAClB1B,EAAOsB,UAAY,CAACI,EAASqV,MAAO,oBAAoB5U,KAAK,KAC7D7F,KAAK2T,QAAQ3S,KAAK0C,KAEpB1D,KAAK2V,cAGL3V,KAAK0E,KAAKrD,QAAQsC,IAChB0W,EAAUhZ,QAAQ+D,IAChB,IAAIwU,EAAiB,EACrBxU,EAASuO,QAAQtS,QAAQ2Z,IACvBpB,GAAkBjW,EAAIe,KAAKsW,GAAOlc,QAEpC6E,EAAIe,KAAKU,EAASZ,IAAM,CACtB1F,MAAO8a,EACP9V,SAA+C,KAArCsB,EAASpB,WAAWvD,aAAsBmZ,EAAe3V,WAAa,IAAIE,OAAOiB,EAASpB,WAAWvD,aAAcmZ,GAC7HzW,MAAO,QACP6U,WAAY,CAAC,aAEX,CAAC,WAAY,SAASzX,SAASoD,EAAInD,OAASmD,EAAIe,KAAKU,EAASZ,IAAIwT,WAAWhX,KAAK,aAInFqZ,EAWT,kBAAmB5Z,EAAc+D,EAAIyW,EAAMnE,EAAUE,GACnDhX,KAAK0E,KAAKrD,QAAQsC,IAChB,IAAIuX,EAAiBvX,EAAIe,KAAKoS,EAAStS,IAAI1F,MACvCqc,EAAmBxX,EAAIe,KAAKsS,EAAWxS,IAAI1F,MAC/C,GAAa,aAATmc,EACF,IAAIG,EAAa,CACftc,MAAOoc,EAAiBC,EACxBrX,SAA2B,KAAjBrD,GAAuBya,EAAiBC,GAAkBlX,WAAa,IAAIE,OAAO1D,EAAeya,EAAiBC,GAC5HnD,WAAY,QAET,CACL,IAAIlZ,GAASoc,EAAiBC,GAAoBhZ,KAAK+G,IAAIiS,GAC3D,GAAKnB,SAASlb,GAORsc,EAAa,CACftc,MAAOA,EACPgF,SAAU,IAAIK,OAAO,SAAUrF,GAC/BkZ,WAAY,SATd,IAAIoD,EAAa,CACftc,MAAO,KACPgF,SAAU,IACVkU,WAAY,IAUF,SAAZrU,EAAInD,MAA+B,YAAZmD,EAAInD,MAC7B4a,EAAWpD,WAAWhX,KAAK,SAEZ,aAAb2C,EAAInD,MACN4a,EAAWpD,WAAWhX,KAAK,YAEzBoa,EAAWtc,MAAQ,GACrBsc,EAAWpD,WAAWhX,KAAK,OAE7B2C,EAAIe,KAAKF,GAAM4W,IAInB,qBAAsBC,GACpB,IAAIxa,EAASb,KAAKa,OAClB,GAAKA,EAAOiS,eAAgBuI,EAAQC,SAASxE,SAASD,WAAW,oBAAjE,CAIA,IAAIrS,EAAK,CAAC,mBAAoB6W,EAAQJ,KAAMI,EAAQC,SAASxE,SAAUuE,EAAQC,SAAStE,YAAYnR,KAAK,KACrGiR,EAAW9W,KAAKub,cAAcF,EAAQC,SAASxE,UAC/CE,EAAahX,KAAKub,cAAcF,EAAQC,SAAStE,YACjDtT,EAAS,IAAI,SAAOc,EAAIxE,KAAM8W,EAAS9S,YAEtB,aAAjBqX,EAAQJ,MACVvX,EAAOwB,cAAgB,WACvBxB,EAAOmB,IAAMiS,EAASjS,IAAM,EAC5BnB,EAAOoB,IAAMgS,EAAShS,IAAM,EAC5BpB,EAAO2B,uBAAyByR,EAASzR,uBAAuBkR,OAAO,GACvE7S,EAAO4B,qBAAuBwR,EAASxR,qBAAqBiR,OAAO,GACnE7S,EAAO9C,MAAQC,EAAO,WAAaiW,EAAS9S,WAAW5F,QAEvDsF,EAAOwB,cAAgB,aACvBxB,EAAOmB,IAAMiS,EAASjS,IAAM,EAC5BnB,EAAOoB,IAAMgS,EAAShS,IAAM,EAC5BpB,EAAO2B,uBAAyByR,EAASzR,uBAAuBkR,OAAO,GACvE7S,EAAO4B,qBAAuBwR,EAASxR,qBAAqBiR,OAAO,GACnE7S,EAAOvC,KAAO,IACduC,EAAO9C,MAAQC,EAAO,WAAaiW,EAAS9S,WAAW5F,OAIrD0Y,EAASzR,uBAAuBtD,OAAS2B,EAAO2B,uBAAuBtD,QACzE+U,EAASzR,uBAAuBrE,KAAK,GAEnC8V,EAASxR,qBAAqBvD,OAAS2B,EAAO4B,qBAAqBvD,QACrE+U,EAASxR,qBAAqBtE,KAAK,QAGQ,IAAlCH,EAAO8R,YAAYjP,EAAOc,MACnCd,EAAOoB,IAAMjE,EAAO8R,YAAYjP,EAAOc,KAGzCd,EAAOsX,MAAQ,CACb5c,KAAMoG,GAERd,EAAOyB,QAAU2R,EAAS3R,QAC1BzB,EAAOR,MAAQ4T,EAAS5T,MACxBQ,EAAOsB,UAAY,GAEnBtB,EAAOqB,OAAS+R,EAAS/R,OACrBlE,EAAOsS,uBACoB,oBAAzBtS,EAAOqS,gBACTxP,EAAO4B,qBAAqB,GAAK,KAEJ,IAA3BwR,EAAS/R,OAAOhD,OAClB2B,EAAOqB,OAAS,CAAC,YAEjBrB,EAAOqB,OAAS,CAAC,WAAY+R,EAAS/R,OAAO,KAIjD/E,KAAK2T,QAAQ3S,KAAK0C,GACd2X,EAAQC,SAASvE,QACnB/W,KAAKwb,kBAAkB1E,EAAS9S,WAAWvD,aAAc+D,EAAI6W,EAAQJ,KAAMjE,EAAYF,GAEvF9W,KAAKwb,kBAAkB1E,EAAS9S,WAAWvD,aAAc+D,EAAI6W,EAAQJ,KAAMnE,EAAUE,QA5DrFnU,QAAQC,IAAI,wEAyEhB,qBACE,IAAI2Y,EAAoB,GACpBC,EAAQ,CAAC,WAAY,WAEzBnd,OAAOqD,KAAK5B,KAAKkU,WAAW7S,QAAQiF,IAClC,IAAIgV,EAAWtb,KAAKkU,UAAU5N,GAC9B,GAA4B,gBAAxBgV,EAAStE,WACX,GAAsB,eAAlBsE,EAAS9a,KACNR,KAAK8F,WAQR9F,KAAKiU,aAAa5S,QAAQiW,IACnBA,EAAYqE,UACfD,EAAMra,QAAQ4Z,IACZQ,EAAkBza,KAAK,CACrBia,KAAMA,EACNK,SAAU,CACRxE,SAAU,CAACQ,EAAYlY,IAAKkc,EAASxE,UAAUjR,KAAK,KACpDmR,WAAY,CAACM,EAAYlY,IAAKkc,EAAStE,YAAYnR,KAAK,KACxDkR,QAASuE,EAASvE,QAClBvW,KAAM8a,EAAS9a,YAhBzBkb,EAAMra,QAAQ4Z,IACZQ,EAAkBza,KAAK,CACrBsa,SAAUA,EACVL,KAAMA,WAoBP,GAAsB,aAAlBK,EAAS9a,KAClB,GAAiC,IAA7BR,KAAK+T,aAAahS,QAAgB/B,KAAK+T,aAAa,KAAOuH,EAAStE,WACtEhX,KAAKiU,aAAa7E,MAAM,GAAG/N,QAAQ,CAACiW,EAAasE,KAC/CF,EAAMra,QAAQ4Z,IACP3D,EAAYqE,UACfF,EAAkBza,KAAK,CACrBia,KAAMA,EACNK,SAAU,CACRxE,SAAU,CAACQ,EAAYlY,IAAKkc,EAASxE,UAAUjR,KAAK,KACpDmR,WAAY,CAAChX,KAAKiU,aAAa2H,GAAOxc,IAAKkc,EAASxE,UAAUjR,KAAK,KACnEkR,QAASuE,EAASvE,QAClBvW,KAAM8a,EAAS9a,gBAMpB,CACL,IAAIqb,EAAmB,GACvB7b,KAAKiU,aAAa5S,QAAQiW,IACxB,IAAKA,EAAYqE,SAAU,CACzB,IAAI7c,EAAQwY,EAAY5S,KAAK1E,KAAK+T,aAAa,IAC1C8H,EAAiBtb,SAASzB,IAC7B+c,EAAiB7a,KAAKlC,MAI5B+c,EAAiBzM,MAAM,GAAG/N,QAAQ,CAACiW,EAAasE,KAC9CF,EAAMra,QAAQ4Z,IACZQ,EAAkBza,KAAK,CACrBia,KAAMA,EACNK,SAAU,CACRxE,SAAU,CAAC,mBAAoBQ,EAAagE,EAASxE,UAAUjR,KAAK,KACpEmR,WAAY,CAAC,mBAAoB6E,EAAiBD,GAAQN,EAASxE,UAAUjR,KAAK,KAClFkR,QAASuE,EAASvE,QAClBvW,KAAM8a,EAAS9a,eAU/Bib,EAAkBpa,QAAQga,IACxBrb,KAAK8b,qBAAqBT,KAO9B,kBACErb,KAAK2T,QAAQtS,QAAQqC,IACnB,IAAI9B,EAAO,GACPC,EAAS,GACTC,EAAQ,GAEZ9B,KAAK0E,KAAKrD,QAAQsC,IAChB/B,EAAKZ,KAAK2C,EAAIa,IACd3C,EAAOb,KAAK2C,EAAIe,KAAKhB,EAAOc,IAAI1F,OAChCgD,EAAMd,KAAK2C,EAAInD,QAGjB,IAAIub,EAAa,IAAI,eAAa,CAChCrY,OAAQA,EACRrD,WAAYqD,EAAOM,WAAW3D,WAC9BwD,OAAQ,CACNjC,KAAMA,EACNC,OAAQA,EACRC,MAAOA,KAIX4B,EAAOG,OAASkY,EAChB/b,KAAKmU,cAAcnT,KAAK+a,KAI5B,YAAYvI,GACV,QAAyC,IAA9BA,EAAcwI,YAA6B,CACpD,QAAuC,IAA5BxI,EAAcyI,UACvB,IAAIC,GAAmB,OAEnBA,GAAmB,EAMzB,IAHA,IAAIC,EAAU3I,EAAcwI,YAExBzC,EAAwBvZ,KAAKyT,WAAW,GAAGrV,KACtCP,EAAI,EAAGA,EAAImC,KAAKyT,WAAW1R,OAAQlE,IAAK,CAC/C,IAAIoY,EAAYjW,KAAKyT,WAAW5V,GAChC,IAAKoY,EAAUrV,KAAM,CACnB2Y,EAAwBtD,EAAU7X,KAClC,OAIJ,IAAIge,EAAa,IAAI,MAAI,SACrBC,EAAa,IAAI,MAAI,aAEzBrc,KAAK2T,QAAQtS,QAAQqC,IACnB,IAAI4Y,EAAc,KAMlB,GALAF,EAAW5X,GAAK,QAChB6X,EAAW7X,GAAK,SAChB4X,EAAW1X,KAAKhB,EAAOc,IAAM,CAAE1F,MAAO,GAAIkZ,WAAY,CAAC,UACvDqE,EAAW3X,KAAKhB,EAAOc,IAAM,CAAE1F,MAAO,GAAIkZ,WAAY,IAExB,WAA1BtU,EAAOM,WAAWxD,KAAmB,CACvC,GAAsB,GAAlBkD,EAAOyB,QACT,IAAI8U,EAAYkC,EAAQzY,EAAOM,WAAW5F,MAAMsF,EAAOsB,gBAEnDiV,EAAYkC,EAAQzY,EAAOc,IAoBjC,QAlBiC,IAAtByV,EAAUnW,eAAqD,IAAnBmW,EAAUxB,OAC/DwB,EAAUnW,SAAW9D,KAAKwY,oBAAoByB,IAE5CiC,IACE,CAAC,MAAO,iBAAkB,SAAS3b,SAASmD,EAAOM,WAAWT,kBAChE+Y,EAAcrC,EAAUnb,MAAQ4E,EAAOG,OAAOA,OAAOtB,IACL,YAAvCmB,EAAOM,WAAWT,mBAC3B+Y,GAAerC,EAAUnb,MAAQ4E,EAAOG,OAAOA,OAAOjB,KAAO,IAGjEqX,EAAUjC,WAAa,CAAC,SACxBoE,EAAW1X,KAAKhB,EAAOc,IAAMyV,OACmB,IAArCmC,EAAW1X,KAAKhB,EAAOc,IAAI+X,OACpCH,EAAW1X,KAAKhB,EAAOc,IAAI+X,MAAMlb,QAAQmb,IACvCA,EAAKhc,KAAO,oBAIZ0b,GAAoBI,EAAa,CACnC,IAAIvY,EAAqD,KAAnCL,EAAOM,WAAWvD,aAChC6b,EAAYrY,WACZ,IAAIE,OAAOT,EAAOM,WAAWvD,aAAc6b,GAC7CD,EAAW3X,KAAKhB,EAAOc,IAAM,CAAE1F,MAAOwd,EAAaxY,SAAUC,OAKzEqY,EAAW1X,KAAoB,cAAE5F,MAAQ,QACzCsd,EAAW1X,KAAK6U,GAAuBza,MAAQ,QAC/Csd,EAAW3X,KAAO,CAAC,EAAG,EAAG,GAErByX,IACFG,EAAW3X,KAAoB,cAAE5F,MAAQ,SACzCud,EAAW3X,KAAK6U,GAAuBza,MAAQ,SAC/Cud,EAAW5X,KAAO,CAAC,GAAI,GAAI,IAG7BzE,KAAK0E,KAAK1D,KAAKob,GACfF,GAAoBlc,KAAK0E,KAAK1D,KAAKqb,GAEnCrc,KAAKyU,YAAa,EAClBzU,KAAKka,YAST,oBAAqBD,GACnB,IAAIwC,EAAS,IAAIC,UACjB,QAA8B,IAAnBzC,EAAUxB,MAAyB,CAAC,YAAa,IAAIlY,SAAS0Z,EAAUxB,MAS7E3U,EAAWmW,EAAUnb,WARzB,IACE,IACIgF,EADc2Y,EAAOE,gBAAgB1C,EAAUxB,KAAM,aAC9BmE,gBAAgBC,YAE7C,MAAMC,GACJ,IAAIhZ,EAAWmW,EAAUxB,KAM7B,OAAO3U,EAST,mBACE9D,KAAK6T,mBAAqB,GAC1B,IAAIkJ,EAAkB,mBAAS/c,KAAKyT,WAAW1R,OAAQ,GACnDib,EAAe,CACjB7Z,MAAO,OACP3C,KAAM,yBACN8C,sBAAsB,GAEpB2Z,EAAiB,CACnB9Z,MAAO,QACP3C,KAAM,2BACN8C,sBAAsB,GAGpBtD,KAAKgG,cAAgBhG,KAAK8F,cACxBoX,EAAoB,IAAI,SAAO,SAAUld,KAAMgd,IACjCxX,OAAS,CAAC,SAAU,GAAI,IAC1C0X,EAAkBjY,SAAW8X,EAC7BG,EAAkB1c,KAAO,UACzBR,KAAK6T,mBAAmB7S,KAAKkc,IAGP,oBAApBld,KAAK+F,YACP/F,KAAKgU,OAAO3S,QAAQoZ,IAClB,IAAIyC,EAAoB,IAAI,SAAOzC,EAAMrc,KAAM4B,KAAMgd,GACrDE,EAAkB1X,OAAS,CAACiV,EAAMra,YAAa,GAAI,IACnD8c,EAAkBjY,SAAW8X,EAC7BG,EAAkB1c,KAAO,YACzB0c,EAAkB/Z,MAAQ,OAC1BnD,KAAK6T,mBAAmB7S,KAAKkc,MAG3BA,EAAoB,IAAI,SAAO,UAAWld,KAAMgd,IAClCxX,OAAS,CAAC,SAAU,GAAI,IAC1C0X,EAAkBjY,SAAW8X,EAC7BG,EAAkB1c,KAAO,UACzB0c,EAAkB/Z,MAAQ,OAC1BnD,KAAK6T,mBAAmB7S,KAAKkc,MAEzBA,EAAoB,IAAI,SAAO,UAAWld,KAAMgd,IAClCxX,OAAS,CAAC,SAAU,GAAI,IAC1C0X,EAAkBjY,SAAW8X,EAC7BG,EAAkB1c,KAAO,UACzB0c,EAAkB/Z,MAAQ,OAC1BnD,KAAK6T,mBAAmB7S,KAAKkc,GAE7Bld,KAAKgU,OAAO3S,QAAQoZ,IAClB,IAAIyC,EAAoB,IAAI,SAAOzC,EAAMrc,KAAM4B,KAAMgd,GACrDE,EAAkB1X,OAAS,CAACiV,EAAMra,YAAa,GAAI,IACnD8c,EAAkBjY,SAAW8X,EAC7BG,EAAkB1c,KAAO,YACzB0c,EAAkB/Z,MAAQ,OAC1BnD,KAAK6T,mBAAmB7S,KAAKkc,MAIjC,IAAK,IAAIC,EAAI,EAAGA,EAAInd,KAAK0E,KAAK3C,OAAQob,IAAK,CACzC,IAoBID,EApBAE,EAAYpd,KAAK0E,KAAKyY,GAC1B,GAAuB,cAAnBC,EAAU5c,KAAsB,CAClC,IAAI6c,EAAU,GACV7X,EAAS,GACbxF,KAAKyT,WAAWpS,QAAQ8V,IAClBnX,KAAK+S,SACPsK,EAAQrc,KAAKhB,KAAKqU,eAAe+I,EAAU5Y,IAAI2S,EAAI/Y,OAEnDif,EAAQrc,KAAK,GAEfwE,EAAOxE,KAAKoc,EAAU1Y,KAAKyS,EAAI/Y,MAAMU,cAElC,GAAuB,aAAnBse,EAAU5c,KACf6c,EAAUN,EACVvX,EAAS,CAAC,YAAY+Q,OAAO,mBAASvW,KAAKyT,WAAW1R,OAAO,EAAG,UAC/D,GAAuB,UAAnBqb,EAAU5c,KACf6c,EAAUN,EACVvX,EAAS,CAAC,SAAS+Q,OAAO,mBAASvW,KAAKyT,WAAW1R,OAAO,EAAG,MAG/Dmb,EAAoB,IAAI,SAAOE,EAAU5Y,GAAIxE,KAAMid,IACrCrY,YAAa,EAC/BsY,EAAkBjY,SAAWoY,EAC7BH,EAAkB1X,OAASA,EAC3B0X,EAAkB/Z,MAAQ,QAC1BnD,KAAK6T,mBAAmB7S,KAAKkc,IAIjC,gBACEld,KAAK2T,QAAQuF,OAAOhb,GAA2B,YAAtBA,EAAE8F,WAAWxD,MAAoBa,QAAQqC,IAChE,IAAIoQ,EAAkB,GACtB9T,KAAK0E,KAAKrD,QAAQsC,SACmB,IAAxBA,EAAIe,KAAKhB,EAAOc,KACzBsP,EAAgBnQ,EAAIa,IAAMb,EAAIe,KAAKhB,EAAOc,IAC1CsP,EAAgBnQ,EAAIa,IAAW,MAAI,aACkB,IAA1CsP,EAAgBnQ,EAAIa,IAAgB,WAC7CsP,EAAgBnQ,EAAIa,IAAgB,WAAExD,KAAK,cAE3C8S,EAAgBnQ,EAAIa,IAAgB,WAAI,CAAC,eAG3C3B,QAAQC,IAAI,8BAA+BY,EAAOc,MAKtD,IAAI8Y,EAAiB5Z,EAAOM,WAAW/C,QACnC7B,EAAM,WAAasE,EAAOM,WAAW5F,KAOzC,QANgC,IAArB4B,KAAKa,OAAOzB,KACrBke,EAAiBtd,KAAKa,OAAOzB,GAAOY,KAAKa,OAAOzB,GAAOke,GAEzDxJ,EAAgByJ,OAAS,CAAEze,MAAOwe,EAAgBtF,WAAY,IAC1DtU,EAAO0B,UAAY0O,EAAgByJ,OAAOvF,WAAWhX,KAAK,YAEtC,oBAApBhB,KAAK+F,WACP,IAAIyX,EAAgBxd,KAAKgU,OAAOjS,YAE5Byb,EAAgB,EAElBxd,KAAKgG,aAAewX,IAExB1J,EAAgBoC,QAAU,CAAEpX,MAAO4E,EAAO+Z,SAASD,GAAgBxF,WAAY,IAC3EtU,EAAO0B,UAAY0O,EAAgBoC,QAAQ8B,WAAWhX,KAAK,YAC3D0C,EAAOM,WAAWlD,MAAMP,SAAS,aAAeuT,EAAgBoC,QAAQ8B,WAAWhX,KAAK,YAE5FhB,KAAK+T,aAAa1S,QAAQ,CAACgV,EAAaxR,KACtCiP,EAAgBuC,GAAe,CAAEvX,MAAO4E,EAAOqB,OAAOF,GAAMmT,WAAY,IACpEtU,EAAO0B,UAAY0O,EAAgBuC,GAAa2B,WAAWhX,KAAK,cAGtE,IAAI0c,EAAiB,IAAI,MAAI,aAC7BA,EAAelZ,GAAKd,EAAOc,GAC3BkZ,EAAe1Z,WAAaN,EAAOM,WACnC0Z,EAAe9c,KAAO8C,EAAO9C,KAC7B8c,EAAeC,SAAWja,EAAOuB,SACjCyY,EAAehZ,KAAOoP,EAEtB9T,KAAK8T,gBAAgB9S,KAAK0c,KAQ9B,YACE,IAAI3Y,EAAS,GAmBb,OAlBK/E,KAAK6U,eAeR9P,EAAS/E,KAAKyT,YAdVzT,KAAKgG,cAAgBhG,KAAK8F,YAAcf,EAAO/D,KAAK,iBAEhC,oBAApBhB,KAAK+F,YACP/F,KAAKgU,OAAO3S,QAAQoZ,IAClB1V,EAAO/D,KAAKyZ,EAAMrc,QAEpB2G,EAAO/D,KAAK,oBAEZ+D,EAAO/D,KAAK,kBACZhB,KAAKgU,OAAO3S,QAAQoZ,IAClB1V,EAAO/D,KAAKyZ,EAAMrc,UAOjB2G,EAOT,YAAa4O,GAOX,IANA,IAAI9S,EAASb,KAAKa,OACd+c,EAAgB,GAChBC,EAAc,GACdlF,EAAe,GAGVza,EAAIyV,EAAQ5R,OAAO,EAAG7D,GAAK,EAAGA,IAAK,CAC1C,IAAI2G,EAAM8O,EAAQ5R,OAAS,EAAI7D,EAQ/B,GANwB,oBAApB8B,KAAK+F,WACP6X,EAAc/Y,GAAO,IAAI8O,EAAQzV,GAAG6G,OAAQ4O,EAAQzV,GAAG8F,WAAW5F,MAElEwf,EAAc/Y,GAAO,CAAC8O,EAAQzV,GAAG8c,MAAM5c,QAASuV,EAAQzV,GAAG6G,QAGzD/E,KAAKgG,cAAgBhG,KAAK8F,WAAY,CACxC,IAAIwX,EAAiB3J,EAAQzV,GAAG8F,WAAW/C,QACvC7B,EAAM,WAAauU,EAAQzV,GAAG8F,WAAW5F,UAClB,IAAhByC,EAAOzB,KAChBke,EAAiBzc,EAAOzB,GAAOyB,EAAOzB,GAAOke,GAE/CM,EAAc/Y,GAAK6R,QAAQ4G,GAG7BO,EAAY3f,GAAK,mBAAS0f,EAAc/Y,GAAK9C,OAAQ,GAGvD,GAAI/B,KAAKgT,SAAU,CACjB2F,EAAe,mBAASiF,EAAc,GAAG7b,OAAQ,GAGjD,IAAK,IAAIob,EAAI,EAAGA,EAAIS,EAAc7b,OAAQob,IAOxC,IANA,IAIIW,EAJSF,EAAcT,GAIVpb,OAAS,EAEjBjE,EAHG,EAGQA,EAAIggB,EAAKhgB,IAAK,CAChC,IAAIigB,EAAaH,EAAcT,GAAGrf,GAClC,GAAIqf,EAAIS,EAAc7b,OAAO,EAC3B,IAAIic,EAAcJ,EAAcT,EAAE,GAAGrf,GAIvC,KAAIqf,EAAIS,EAAc7b,OAAO,GAAKgc,GAAcC,GAGzC,CAEL,IAAK,IAAIC,EAAKngB,EAAGmgB,EAAKH,EAAKG,IACzBJ,EAAYV,GAAGc,GAAMtF,EAAasF,GAClCtF,EAAasF,GAAM,EAErB,MARAJ,EAAYV,GAAGrf,IAAM,EACrB6a,EAAa7a,IAAM,EAYzB,GAAwB,oBAApBkC,KAAK+F,WACP,IAAImY,EAAcle,KAAK+T,aAAahS,OAAS,OAEzCmc,EAAc,EAIpB,IAASf,EAAIS,EAAc7b,OAAO,EAAGob,GAAK,EAAGA,IAAK,CAC5CY,EAAaH,EAAcT,GAAGe,GAClC,GAAIf,EAAI,EACN,IAAIgB,EAAYP,EAAcT,EAAE,GAAGe,GAGjCf,EAAI,GAAKY,GAAcI,GACzBN,EAAYV,GAAGe,IAAgB,EAC/BvF,EAAauF,IAAgB,IAG7BL,EAAYV,GAAGe,GAAevF,EAAauF,GAC3CvF,EAAauF,GAAe,GAIhCL,EAAY9G,UAQd,OALApD,EAAQtS,QAAQ,CAACqC,EAAQmB,KACvBnB,EAAOuB,SAAW4Y,EAAYhZ,GAC9B7E,KAAKoU,eAAe1Q,EAAOc,IAAMqZ,EAAYhZ,KAGxC8O,EAeT,uBACE,IAAIyK,EAAgB,GAChBC,EAAkB,GAClBC,EAAgB,GAEfte,KAAK6U,eAaR7U,KAAK6T,mBAAmBxS,QAAQqC,IACC,2BAA3BA,EAAOM,WAAWxD,KACpB4d,EAAcpd,KAAK,CAAEwD,GAAId,EAAOc,KACI,6BAA3Bd,EAAOM,WAAWxD,MAAqD,UAAdkD,EAAOc,GACzE6Z,EAAgBrd,KAAK,CAAEwD,GAAId,EAAOc,KACE,6BAA3Bd,EAAOM,WAAWxD,MAAqD,UAAdkD,EAAOc,IACzE8Z,EAActd,KAAK,CAAEwD,GAAId,EAAOc,OAlBpCxE,KAAK2T,QAAQtS,QAAQqC,IACY,cAA3BA,EAAOM,WAAWxD,MAAyBR,KAAKsU,gBAAgC,kBAAd5Q,EAAOc,IAA2Bd,EAAO9C,KAEzE,cAA3B8C,EAAOM,WAAWxD,MAAwBR,KAAKsU,gBAAgC,kBAAd5Q,EAAOc,GACjF4Z,EAAcpd,KAAK,CAAEwD,GAAId,EAAOc,KACI,YAA3Bd,EAAOM,WAAWxD,MAAuBkD,EAAOR,OAAUQ,EAAO9C,KAEtC,YAA3B8C,EAAOM,WAAWxD,MAAsBkD,EAAOR,QAAUQ,EAAO9C,MACzE0d,EAActd,KAAK,CAAEwD,GAAId,EAAOc,KAFhC6Z,EAAgBrd,KAAK,CAAEwD,GAAId,EAAOc,KAJlC4Z,EAAcpd,KAAK,CAAEwD,GAAId,EAAOc,OA2BxC,gBAAiB3G,GACf,GAAKmC,KAAK6U,eAYR,OAAO7U,KAAK6T,mBAAmBqF,OAAOhb,GAAKA,EAAE+G,SAASpH,GAAK,GAX3D,GAAImC,KAAKsU,eACP,IAAIX,EAAU3T,KAAK2T,QAAQuF,OAAOhb,GAA0B,WAArBA,EAAE8F,WAAWxD,MAA8B,kBAATtC,EAAEsG,IAAwB0U,OAAOhb,IAAMA,EAAE0C,WAE9G+S,EAAW3T,KAAK2T,QAAQuF,OAAOhb,GAAc,kBAATA,EAAEsG,IAAwB0U,OAAOhb,IAAMA,EAAE0C,MAKnF,OAFA+S,EAAU3T,KAAKmZ,YAAYxF,GAASuF,OAAOhb,GAAKA,EAAE+G,SAASpH,GAAK,GAUpE,cACE,OAAKmC,KAAK6U,eAGD7U,KAAK8T,gBAAgBoF,OAAOvV,IAAQA,EAAI/C,MAFxCZ,KAAK0E,KAWhB,gBAAiBf,GACf,GAAK3D,KAAK6U,eAsBH,EACD0J,EAAQve,KAAK6T,oBACXxS,QAAQ,CAACmd,EAAM3Z,KACnB2Z,EAAKC,QAAU,EACc,2BAAzBD,EAAKxa,WAAWxD,WAAkE,IAAtBmD,EAAIga,SAAS9Y,KAC3E2Z,EAAKC,QAAUze,KAAKoU,eAAezQ,EAAIa,IAAIK,MAG/C0Z,EAAQA,EAAMrF,OAAOsF,GAAQA,EAAKC,QAAU,OA9BpB,CAExB,GAAIze,KAAKsU,eACP,IAAIiK,EAAQve,KAAK2T,QAAQuF,OAAOhb,GAA0B,WAArBA,EAAE8F,WAAWxD,MAA8B,kBAATtC,EAAEsG,IAAwB0U,OAAOhb,IAAMA,EAAE0C,WAEhH,IAAI2d,EAASve,KAAK2T,QAAQuF,OAAOhb,GAAc,kBAATA,EAAEsG,IAAwB0U,OAAOhb,IAAMA,EAAE0C,OAI5EZ,KAAKsU,gBAAkBtU,KAAK+S,WAE/BwL,EAAMld,QAAQmd,IACZA,EAAKC,QAAU,EACE,cAAb9a,EAAInD,MAAwBR,KAAKqU,eAAe1Q,EAAIa,IAAIga,EAAKha,IAAM,IACrEga,EAAKC,QAAUze,KAAKqU,eAAe1Q,EAAIa,IAAIga,EAAKha,OAInC,cAAbb,EAAInD,OACN+d,EAAQA,EAAMrF,OAAOhb,GAA0B,WAArBA,EAAE8F,WAAWxD,MAAqBR,KAAKqU,eAAe1Q,EAAIa,IAAItG,EAAEsG,IAAM,KAatG,OAAO+Z,EAWT,YAAYG,EAAMC,EAAIC,GACpB,IAAI/d,EAASb,KAAKa,OAClB,GAAI6d,GAAQC,EAAI,CACd,IAAIE,EAAQF,EAAKD,EACbI,EAAYje,EAAO8R,YACvB3S,KAAK2T,QAAQtS,QAAQqX,IACQ,WAAvBA,EAAI1U,WAAWxD,MAAsBkY,EAAIxV,QACvCwV,EAAI5T,KAAO4Z,GAAQhG,EAAI5T,IAAM4Z,EAAO,GAEtChG,EAAI5T,KAAO+Z,EACFnG,EAAI5T,KAAO6Z,GAAMjG,EAAI5T,IAAM4Z,EAEpChG,EAAI5T,KAAO,GACF4T,EAAI5T,KAAO4Z,EAAO,IAAMhG,EAAI5T,IAAM6Z,EAAK,KAEhDjG,EAAI5T,KAAO,IAEbga,EAAUpG,EAAIlU,IAAMkU,EAAI5T,OAG5B8Z,EAAkBE,IAItB,iBACO,CAAC,cAAe,SAAU,eAAgB,UAAUve,SAASP,KAAKa,OAAOuR,SAC5EpS,KAAKa,OAAOuR,MAAQ,eAGjB,CAAC,QAAS,QAAQ7R,SAASP,KAAKa,OAAO6R,UAC1C1S,KAAKa,OAAO6R,OAAS,cAGmB,IAA/B1S,KAAKa,OAAOgU,iBACrB7U,KAAKa,OAAOgU,gBAAiB,GAG/BtW,OAAOmb,QAAQ1Z,KAAKa,QAAQQ,QAAQiV,IAChB,UAAdA,EAAO,GACTA,EAAO,IAAK,EACW,SAAdA,EAAO,KAChBA,EAAO,IAAK,KAWlB,gBACE,IAAIyI,EAAa,GAUjB,OATA/e,KAAK0E,KAAKrD,QAAQ1C,IAChB,GAAe,cAAXA,EAAE6B,KAAsB,CAC1B,IAAImD,EAAM,GACV3D,KAAK2T,QAAQtS,QAAQnD,IACnByF,EAAIzF,EAAEsG,IAAM7F,EAAE+F,KAAKxG,EAAEsG,IAAI1F,QAE3BigB,EAAW/d,KAAK2C,MAGbob","file":"vis_table_plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = queryResponseField.is_numeric\n    this.is_array = ['list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = []\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style.push(style_setting)\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'styles':\n              this.styles = Array.isArray(tags[2]) ? tags[2] : [tags[2]] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' && queryResponseField.is_table_calculation\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = queryResponseField.is_turtle\n    this.can_pivot = can_pivot\n  }\n}\n\nclass PivotField {\n  constructor({ queryResponseField }) {\n    this.name = queryResponseField.name,\n    this.label = queryResponseField.short_label || queryResponseField.label,\n    this.view = queryResponseField.view_label || ''\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(with_subtotals)\n      this.max_for_display = Math.max(with_subtotals)\n      this.min = Math.min(line_items_only)\n      this.max = Math.max(line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  to_string() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    this.modelField = null\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n    this.colspans = []\n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.variance_type = '' // empty | absolute | percentage\n    this.pivoted = false\n    this.subtotal = false\n    this.super = false\n\n    this.series = null\n    \n    this.sort_by_measure_values = [] // [index -1|dimension 0|measure 1|row totals & supermeasures 2, column number, [measure values]  ]\n    this.sort_by_pivot_values = []   // [index -1|dimension 0|measure 1|row totals & supermeasures 2, [pivot values], column number    ]\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getLabel (level) {\n    if (this.transposed) {\n      return this.labels[level]\n    }\n\n    if (typeof this.vis.visId !== 'undefined' && this.vis.visId === 'report_table') {\n      var label = this.vis.useShortName ? this.modelField.short_name || this.modelField.label : this.modelField.label\n      switch (this.variance_type) {\n        case 'absolute':\n          var label = 'Var #'\n          break;\n        case 'percentage':\n          var label = 'Var %'\n          break;\n      }\n    } else {\n      var label = this.modelField.label\n    }\n    \n    var config_setting = this.vis.config['label|' + this.modelField.name]\n    if (typeof config_setting !== 'undefined' && config_setting !== this.modelField.label) {\n      label = config_setting ? config_setting : label\n    }\n\n    if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n      label = [this.modelField.view, label].join(' ') \n    }\n    \n    if (typeof this.vis.has_pivots !== 'undefined') {\n      if (this.vis.has_pivots) { \n        if (this.vis.sortColsBy === 'getSortByPivots') {\n          if (level < this.levels.length) {\n            label = this.levels[level]\n          } else {\n            // label already set\n          }\n        } else { // params.config.sortColumnsBy === 'getSortByMeasures'\n          if (level >= 1) {\n            label = this.levels[level - 1]\n          } else {\n            // label already set\n          }\n        } \n      } else { // flat table\n        if (this.vis.useHeadings && level === 0) {\n          var config_setting = this.vis.config['heading|' + this.modelField.name]\n          if (typeof config_setting !== 'undefined') {\n            label = config_setting ? config_setting : this.modelField.heading\n          } else {\n            label = this.modelField.heading\n          }\n        } else {\n          // label already set\n        }\n      }\n    }\n    return label\n  }\n\n  updateSortByMeasures (idx) {\n    if (this.sort_by_measure_values[0] == 1) {\n      if (!this.pivoted && !this.subtotal) {\n        this.sort_by_measure_values = [1, idx]\n      }\n    }\n  }\n\n  getSortByMeasures () {\n    return this.sort_by_measure_values\n  }\n\n  getSortByPivots () {\n    return this.sort_by_pivot_values\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.PivotField = PivotField\nexports.Row = Row\nexports.Column = Column\n","/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nvar make_ssf = function make_ssf(SSF){\nSSF.version = '0.11.0';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\tt[65535]= 'General';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\nfunction general_fmt_int(v) { return v.toString(10); }\nSSF._general_int = general_fmt_int;\nvar general_fmt_num = (function make_general_fmt_num() {\nvar gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/, gnr6 = /(E[+-])(\\d)$/;\nfunction gfn2(v) {\n\tvar w = (v<0?12:11);\n\tvar o = gfn5(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\nfunction gfn3(v) {\n\tvar o = v.toFixed(11).replace(gnr1,\".$1\");\n\tif(o.length > (v<0?12:11)) o = v.toPrecision(6);\n\treturn o;\n}\nfunction gfn4(o) {\n\tfor(var i = 0; i != o.length; ++i) if((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4,\".$1\").replace(gnr5,\"E\").replace(\"e\",\"E\").replace(gnr6,\"$10$2\");\n\treturn o;\n}\nfunction gfn5(o) {\n\treturn o.indexOf(\".\") > -1 ? o.replace(gnr2,\"\").replace(gnr1,\".$1\") : o;\n}\nreturn function general_fmt_num(v) {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = gfn2(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = gfn3(v);\n\treturn gfn5(gfn4(o));\n};})();\nSSF._general_num = general_fmt_num;\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri() { return 0; }\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1;\n\t}\n\tif(outl > 0) return pad0(out, outl); else return \"\";\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 0;\n\t}\n\treturn Math.round((val-Math.floor(val))*Math.pow(10,d));\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) { if(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0)); return \"\"+Math.floor(val); }\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase \"$\": out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\n};\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n","import SSF from \"ssf\"\n\nimport { newArray, ModelDimension, ModelMeasure, CellSeries, ColumnSeries, Row, Column } from './vis_primitives'\n\nconst tableModelCoreOptions = {\n  theme: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Theme\",\n    values: [\n      { 'Traditional': 'traditional' },\n      { 'Looker': 'looker' },\n      { 'Contemporary': 'contemporary' },\n      { 'Use custom theme': 'custom'}\n    ],\n    default: \"traditional\",\n    order: 1,\n  },\n  customTheme: {\n    section: \"Theme\",\n    type: \"string\",\n    label: \"Load custom CSS from:\",\n    default: \"\",\n    order: 2,\n  },\n  layout: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Layout\",\n    values: [\n      { 'Even': 'fixed' },\n      { 'Auto': 'auto' }\n    ],\n    default: \"fixed\",\n    order: 3,\n  },\n  columnOrder: {},\n  rowSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Row Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 1,\n  },\n  colSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Col Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 2,\n  },\n  spanRows: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Dims\",\n    display_size: 'half',\n    default: true,\n    order: 3,\n  },\n  spanCols: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Headers\",\n    display_size: 'half',\n    default: true,\n    order: 4,\n  },\n  subtotalDepth: {\n    section: \"Table\",\n    type: \"number\",\n    label: \"Sub Total Depth\",\n    default: 1,\n    order: 5,\n  },\n  sortColumnsBy: {\n    section: \"Table\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Sort Columns By\",\n    values: [\n      { 'Pivots': 'getSortByPivots' },\n      { 'Measures': 'getSortByMeasures' }\n    ],\n    default: \"getSortByPivots\",\n    order: 6,\n  },\n  useViewName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Include View Name\",\n    default: false,\n    order: 7,\n  },\n  useHeadings: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Headings (non-pivots only)\",\n    default: false,\n    order: 8,\n  },\n  useShortName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Short Name (from model)\",\n    default: false,\n    order: 9,\n  },\n  groupVarianceColumns: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Group Variance Columns After Pivots\",\n    default: false,\n    order: 10,\n  },\n  indexColumn: {\n    section: \"Dimensions\",\n    type: \"boolean\",\n    label: \"Use Last Field Only\",\n    default: false,\n    order: 0,\n  },\n  tranposeTable: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Transpose\",\n    default: false,\n    order: 100,\n  },\n}\n/**\n * Represents an \"enriched data object\" with additional methods and properties for data vis\n * Takes the data, config and queryResponse objects as inputs to the constructor\n */\nclass VisPluginTableModel {\n  /**\n   * Build the LookerData object\n   * @constructor\n   * \n   * - Check for pivots and supermeasures\n   * - Check for variance calculations\n   * - Add dimensions\n   * - Add measures\n   * - Build index column\n   *   - Index all original columns to preserve order later\n   *   - Add dimensions, list of ids, list of full objects\n   *   - Add measures, list of ids, list of full objects\n   * - TODO: CHECK FOR SUBTOTALS\n   *   – SET this.has_row_totals\n   *   - IF this.has_pivots, FLATTEN SUBTOTALS DATA\n   *   – SET this.subtotals\n   * - Build rows\n   * - Add column series\n   * - Build totals\n   * - Build row spans\n   * - If configured: Add row subtotals\n   * - If configured and 2 pivots: Add column subtotals\n   * - Add variances\n   * - TODO: add new column series\n   * - Sort columns\n   * - Apply formatting\n   * - If configured: transpose table\n   *   - add transposed_columns\n   *   - add transposed_rows\n   * - Validate config\n   * - TODO: Get table column groups\n   * \n   * @param {*} lookerData \n   * @param {*} queryResponse \n   * @param {*} config \n   */\n  constructor(lookerData, queryResponse, config) {\n    this.visId = 'report_table'\n    this.config = config\n\n    this.dimensions = []\n    this.measures = []\n    this.columns = []\n    this.data = []\n    this.subtotals_data = {}\n\n    this.transposed_columns = []\n    this.transposed_data = []\n\n    this.pivot_fields = []\n    this.pivots = []\n    this.pivot_values = []\n    this.variances = []\n    this.column_series = []\n\n    this.colspan_values = {}\n    this.rowspan_values = {}\n\n    this.useIndexColumn = config.indexColumn || false\n    this.useHeadings = config.useHeadings || false\n    this.useShortName = config.useShortName || false\n    this.useViewName = config.useViewName || false\n    this.addRowSubtotals = config.rowSubtotals || false\n    this.addSubtotalDepth = config.subtotalDepth || this.dimensions.length - 1\n    this.spanRows = false || config.spanRows\n    this.spanCols = false || config.spanCols\n    this.sortColsBy = config.sortColumnsBy || 'getSortByPivots'\n\n    this.has_totals = false\n    this.has_subtotals = false\n    this.has_row_totals = queryResponse.has_row_totals || false\n    this.has_pivots = false\n    this.has_supers = false\n\n    this.transposeTable = config.tranposeTable\n\n    var col_idx = 0\n    this.checkPivotsAndSupermeasures(queryResponse)\n    this.checkVarianceCalculations()\n    this.addDimensions(queryResponse, col_idx)\n    this.addMeasures(queryResponse, col_idx)\n    this.buildIndexColumn(queryResponse)\n    this.checkSubtotalsData(queryResponse)\n    this.buildRows(lookerData)\n    this.addColumnSeries()\n    this.buildTotals(queryResponse)\n    this.updateRowSpanValues()\n    if (this.config.rowSubtotals) { this.addSubTotals(config.subtotalDepth) }\n    if (this.config.colSubtotals && this.pivot_fields.length == 2) { this.addColumnSubTotals() }\n    this.addVarianceColumns()\n    // this.addColumnSeries()    // TODO: add column series for generated columns (eg column subtotals)\n    this.sortColumns()\n    this.applyFormatting()\n    if (this.transposeTable) { \n      this.transposeColumns() \n      this.transposeRows()\n    }\n    this.validateConfig()\n    // this.getTableColumnGroups() \n  }\n\n  static getCoreConfigOptions() {\n    return tableModelCoreOptions\n  }\n\n  /**\n   * Hook to be called by a Looker custom vis, for example:\n   *    this.trigger('registerOptions', VisPluginTableModel.getConfigOptions())\n   * \n   * Returns a new config object, combining the core options with dynamic options based on available dimensions and measures\n   */\n  getConfigOptions() {\n    var newOptions = tableModelCoreOptions\n\n    this.dimensions.forEach((dimension, i) => {\n      newOptions['label|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: dimension.label,\n        default: dimension.label,\n        order: i * 10 + 1,\n      }\n\n      newOptions['heading|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: 'Heading',\n        default: '',\n        order: i * 10 + 2,\n      }\n\n      newOptions['hide|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'boolean',\n        label: 'Hide',\n        display_size: 'third',\n        default: false,\n        order: i * 10 + 3,\n      }\n    })\n\n    this.measures.forEach((measure, i) => {\n      newOptions['label|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: measure.label_short || measure.label,\n        default: measure.label_short || measure.label,\n        order: 100 + i * 10 + 1,\n      }\n\n      newOptions['heading|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Heading for ' + ( measure.label_short || measure.label ),\n        default: '',\n        order: 100 + i * 10 + 2,\n      }\n\n      newOptions['style|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Style',\n        display: 'select',\n        values: [\n          {'Normal': 'normal'},\n          {'Black/Red': 'black_red'},\n          {'Subtotal': 'subtotal'},\n          {'Hidden': 'hide'}\n        ],\n        order: 100 + i * 10 + 3\n      }\n\n      var comparisonOptions = []\n      \n      if (measure.can_pivot) {\n        var pivotComparisons = []\n        this.pivot_fields.forEach((pivot_field, p) => {\n          if (this.pivot_fields.length === 1 || p === 1 || this.config.colSubtotals ) {\n            var option = {}\n            option['By ' + pivot_field] = pivot_field\n            pivotComparisons.push(option)\n          }\n        })\n        comparisonOptions = comparisonOptions.concat(pivotComparisons)\n      }\n\n      // measures, row totals and supermeasures\n      this.measures.forEach((comparisonMeasure, j) => {\n        var includeMeasure = measure.can_pivot === comparisonMeasure.can_pivot\n                              || \n                            this.has_row_totals && !comparisonMeasure.is_table_calculation         \n        if (i != j && includeMeasure) {\n          var option = {}\n          option['vs. ' + comparisonMeasure.label] = comparisonMeasure.name\n          comparisonOptions.push(option)\n        }\n      })\n      comparisonOptions.unshift({ '(none)': 'no_variance'})\n\n      newOptions['comparison|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Comparison',\n        display: 'select',\n        values: comparisonOptions,\n        order: 100 + i * 10 + 5\n      }\n\n      newOptions['switch|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Switch',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 6,\n      }\n\n      newOptions['var_num|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var #',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 7,\n      }\n\n      newOptions['var_pct|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var %',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 8,\n      }\n    })\n    return newOptions\n  }\n\n  /**\n   * Update the VisPluginTableModel instance\n   * - this.pivots\n   * - this.pivot_fields\n   * - this.has_pivots\n   * - this.has_supers\n   * @param {*} queryResponse \n   */\n  checkPivotsAndSupermeasures(queryResponse) {\n    queryResponse.fields.pivots.forEach(pivot_field => { \n      this.pivot_fields.push(pivot_field.name) \n      this.pivots.push(pivot_field)\n    })\n\n    if (typeof queryResponse.pivots !== 'undefined') {\n      this.pivot_values = queryResponse.pivots\n      this.has_pivots = true\n    }\n\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      this.has_supers = true\n    }\n  }\n\n  /**\n   * Update the VisPluginTableModel instace\n   * - this.variances\n   */\n  checkVarianceCalculations() {\n    var config = this.config\n    Object.keys(config).forEach(option => {\n      if (option.startsWith('comparison')) {\n        var baseline = option.split('|')[1]\n\n        if (this.pivot_fields.includes(config[option])) {\n          var type = 'by_pivot'\n        } else {\n          var type = 'vs_measure'\n        }\n\n        if (typeof config['switch|' + baseline] !== 'undefined') {\n          if (config['switch|' + baseline]) {\n            var reverse = true\n          } else {\n            var reverse = false\n          }\n        }\n\n        this.variances.push({\n          baseline: baseline,\n          comparison: config[option],\n          type: type,\n          reverse: reverse\n        })\n      }\n    })\n  }\n\n  /**\n   * Registers dimensions with the VisPluginTableModel\n   * - this.dimensions\n   * - this.columns\n   * \n   * Uses this.applyVisToolsTags() to enrich column information\n   * \n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addDimensions(queryResponse, col_idx) {\n    queryResponse.fields.dimension_like.forEach(dimension => {\n      var dim = new ModelDimension({\n        vis: this,\n        queryResponseField: dimension\n      })\n      this.dimensions.push(dim)\n\n      var column = new Column(dim.name, this, dim) \n      column.idx = col_idx\n      column.levels = newArray(queryResponse.fields.pivots.length, '')\n      column.sort_by_measure_values = [0, col_idx, ...newArray(this.pivot_fields.length, 0)]\n      column.sort_by_pivot_values = [0, ...newArray(this.pivot_fields.length, 0), col_idx]\n\n      this.columns.push(column)\n      col_idx += 10\n    })\n  }\n\n  /**\n   * Registers measures with the VisPluginTableModel\n   * - this.measures\n   * - this.columns\n   * \n   * Uses this.applyVisToolsTags() to enrich column information\n   * \n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addMeasures(queryResponse, col_idx) {\n    var config = this.config\n    // add measures, list of ids\n    queryResponse.fields.measure_like.forEach(measure => {\n      var newMeasure = new ModelMeasure({\n        vis: this,\n        queryResponseField: measure,\n        can_pivot: true\n      })\n      this.measures.push(newMeasure) \n    })\n    \n    // add measures, list of full objects\n    if (this.has_pivots) {\n      this.pivot_values.forEach(pivot_value => {\n        this.measures.forEach((measure, m) => {\n          var include_measure = (                         // for pivoted measures, skip table calcs for row totals\n            pivot_value.key != '$$$_row_total_$$$'        // if user wants a row total for table calc, must define separately\n          ) || (\n            pivot_value.key == '$$$_row_total_$$$' \n            && measure.is_table_calculation == false\n          )\n\n          if (include_measure) {\n            var columnId = pivot_value.key + '.' + measure.name\n\n            var levels = [] // will contain a list of all the pivot values for this column\n            var level_sort_values = []\n            queryResponse.fields.pivots.forEach(pivot_field => { \n              levels.push(pivot_value['data'][pivot_field.name])\n              level_sort_values.push(pivot_value['sort_values'][pivot_field.name]) \n            })\n\n            var modelField = measure\n            var column = new Column(columnId, this, modelField)\n            column.idx = col_idx\n            column.levels = levels\n            column.pivoted = true\n            column.pivot_key = pivot_value.key\n\n            if (pivot_value.key !== '$$$_row_total_$$$') {\n              column.sort_by_measure_values = [1, m, ...level_sort_values]\n              column.sort_by_pivot_values = [1, ...level_sort_values, col_idx]\n            } else {\n              column.super = true\n              column.sort_by_measure_values = [2, m, ...newArray(this.pivot_fields.length, 0)]\n              column.sort_by_pivot_values = [2, ...newArray(this.pivot_fields.length, 0), col_idx]\n            }\n\n            this.columns.push(column)\n            col_idx += 10\n          }\n        })\n      })\n    } else {\n      // noticeably simpler for flat tables!\n      this.measures.forEach(measure => {\n        var column = new Column(measure.name, this, measure)\n        column.idx = col_idx\n        try {\n          if (typeof config.columnOrder[column.id] !== 'undefined') {\n            column.pos = config.columnOrder[column.id]\n          } else {\n            column.pos = col_idx\n          }\n        }\n        catch {\n          column.pos = col_idx\n        }\n        column.sort_by_measure_values = [1, column.pos]\n        column.sort_by_pivot_values = [1, column.pos]\n        this.columns.push(column)\n\n        col_idx += 10\n      })\n    }\n    \n    // add supermeasures, if present\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      queryResponse.fields.supermeasure_like.forEach(supermeasure => {\n        var meas = new ModelMeasure({\n          vis: this,\n          queryResponseField: supermeasure,\n          can_pivot: false,\n        })\n        this.measures.push(meas) \n\n        var column = new Column(meas.name, this, meas)\n        column.idx = col_idx\n        column.levels = newArray(queryResponse.fields.pivots.length, '')\n        column.super = true\n        column.sort_by_measure_values = [2, col_idx, ...newArray(this.pivot_fields.length, 1)]\n        column.sort_by_pivot_values = [2, ...newArray(this.pivot_fields.length, 1), col_idx]\n\n        this.columns.push(column)\n        col_idx += 10\n      })\n    }\n  }\n\n  /**\n   * Creates the index column, a \"for display only\" column when the set of dimensions is reduced to\n   * a single column for reporting purposes.\n   * \n   * @param {*} queryResponse \n   */\n  buildIndexColumn(queryResponse) {\n    var index_column = new Column('$$$_index_$$$', this, this.dimensions[this.dimensions.length - 1])\n\n    index_column.levels = newArray(queryResponse.fields.pivots.length, '')\n    index_column.sort_by_measure_values = [-1, 0, ...newArray(this.pivot_fields.length, 0)]\n    index_column.sort_by_pivot_values = [-1, ...newArray(this.pivot_fields.length, 0), 0]\n    \n    this.columns.push(index_column)\n  }\n\n  checkSubtotalsData(queryResponse) {\n    if (typeof queryResponse.subtotals_data !== 'undefined') {\n      this.has_subtotals = true\n\n      if (typeof queryResponse.subtotals_data[this.addSubtotalDepth] !== 'undefined') {\n        queryResponse.subtotals_data[this.addSubtotalDepth].forEach(lookerSubtotal => {\n          var visSubtotal = new Row('subtotal')\n  \n          visSubtotal['$$$__grouping__$$$'] = lookerSubtotal['$$$__grouping__$$$']\n          var groups = ['Subtotal']\n          visSubtotal['$$$__grouping__$$$'].forEach(group => {\n            groups.push(lookerSubtotal[group].value)\n          })\n          visSubtotal.id = groups.join('|')\n  \n          this.columns.forEach(column => {\n            if (column.pivoted) {\n              visSubtotal.data[column.id] = lookerSubtotal[column.modelField.name][column.pivot_key]\n            } else {\n              visSubtotal.data[column.id] = lookerSubtotal[column.id]\n            }\n  \n            if (typeof visSubtotal.data[column.id] !== 'undefined') {\n              if (typeof visSubtotal.data[column.id].cell_style === 'undefined') {\n                visSubtotal.data[column.id].cell_style = ['total', 'subtotal']\n              } else {\n                isSubtotal.data[column.id].cell_style.concat(['total', 'subtotal'])\n              }\n              if (typeof column.modelField.style !== 'undefined') {\n                visSubtotal.data[column.id].cell_style = visSubtotal.data[column.id].cell_style.concat(column.modelField.style)\n              }\n              if (visSubtotal.data[column.id].value === null) {\n                visSubtotal.data[column.id].rendered = ''\n              }\n            }            \n          })\n          this.subtotals_data[visSubtotal.id] = visSubtotal\n        })\n      }\n    }\n  }\n\n  /**\n   * Populates this.data with Rows of data\n   * @param {*} lookerData \n   */\n  buildRows(lookerData) {\n    lookerData.forEach((lookerRow, i) => {\n      var row = new Row('line_item') // TODO: consider creating the row object once all required field values identified\n      \n      // flatten data, if pivoted. Looker's data structure is nested for pivots (to a single level, no matter how many pivots)\n      this.columns.forEach(column => {\n        \n        if (column.pivoted) {\n          row.data[column.id] = lookerRow[column.modelField.name][column.pivot_key]\n        } else {\n          row.data[column.id] = lookerRow[column.id]\n        }\n\n        if (typeof row.data[column.id] !== 'undefined') {\n          if (typeof row.data[column.id].cell_style === 'undefined') {\n            row.data[column.id].cell_style = []\n          }\n          if (typeof column.modelField.style !== 'undefined') {\n            row.data[column.id].cell_style = row.data[column.id].cell_style.concat(column.modelField.style)\n          }\n          if (row.data[column.id].value === null) {\n            row.data[column.id].rendered = ''\n          }\n          if (column.modelField.is_turtle) {\n            var cell_series = new CellSeries({\n              column: column,\n              row: row,\n              sort_value: row.data[column.id].sort_value,\n              series: {\n                keys: row.data[column.id]._parsed.keys,\n                values: row.data[column.id]._parsed.values\n              }\n            })\n            row.data[column.id].value = cell_series\n            row.data[column.id].rendered = cell_series.to_string()\n          }\n        }\n      })\n\n      // set a unique id for the row\n      var all_dims = []\n      this.dimensions.forEach(dimension => {\n        all_dims.push(row.data[dimension.name].value)\n      })\n      row.id = all_dims.join('|')\n\n      // set an index value (note: this is an index purely for display purposes; row.id remains the unique reference value)\n      var last_dim = this.dimensions[this.dimensions.length - 1].name\n\n      row.data['$$$_index_$$$'] = {\n        value: row.data[last_dim].value,\n        rendered: this.getRenderedFromHtml(row.data[last_dim]),\n        html: row.data[last_dim].html,\n        cell_style: ['indent']\n      }\n\n      row.sort = [0, 0, i]\n      this.data.push(row)\n    })\n  }\n\n  /**\n   * Applies conditional formatting (red if negative) to all measure columns set to use it \n   */\n  applyFormatting() {\n    this.columns.forEach(col => {\n      var config_setting = this.config['style|' + col.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        switch (config_setting) {\n          case 'black_red':\n            this.data.forEach(row => {\n              if (row.data[col.id].value < 0) {\n                row.data[col.id].cell_style.push('red')\n              }\n            })\n            break\n        }\n      }\n    })\n  }\n\n  /**\n   * Returns column that matches ID provided\n   * @param {*} id \n   */\n  getColumnById (id) {\n    var column = ''\n    this.columns.forEach(c => {\n      if (id === c.id) { \n        column = c\n      } \n    })\n    return column\n  }\n\n  getMeasureByName (name) {\n    var measure = ''\n    this.measures.forEach(m => {\n      if (name === m.name) { \n        measure = m\n      }\n    })\n    return measure\n  }\n\n  /**\n   * Performs vertical cell merge, by calculating required rowspan values\n   * Works backwards through the data rows.\n   */\n  updateRowSpanValues () {\n    var span_tracker = {}\n    this.dimensions.forEach(dimension => {\n      span_tracker[dimension.name] = 1\n    })\n\n    // loop backwards through data rows\n    for (var r = this.data.length-1; r >= 0 ; r--) {\n      var row = this.data[r]\n\n      // full reset and continue for totals\n      if (row.type !== 'line_item' ) {\n        this.dimensions.forEach(dimension => {\n          span_tracker[dimension.name] = 1\n        })\n        continue;\n      }\n\n      // loop fowards through the dimensions\n      this.rowspan_values[row.id] = {}\n      for (var i = 0; i < this.dimensions.length; i++) {\n        var dimension = this.dimensions[i]\n        var this_cell_value = this.data[r].data[dimension.name].value\n        if (r > 0) {\n          var cell_above_value = this.data[r-1].data[dimension.name].value\n        }\n\n        // increment the span_tracker if dimensions match\n        if (r > 0 && this_cell_value == cell_above_value) {\n          this.rowspan_values[row.id][dimension.name] = -1;\n          span_tracker[dimension.name] += 1;\n        } else {\n        // partial reset and continue if dimensions different\n          for (var d_ = i; d_ < this.dimensions.length; d_++) {\n            var dim_ = this.dimensions[d_].name\n            this.rowspan_values[row.id][dim_] = span_tracker[dim_];\n            span_tracker[dim_] = 1\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Sorts the rows of data, then updates vertical cell merge \n   * \n   * Rows are sorted by three values:\n   * 1. Section\n   * 2. Subtotal Group\n   * 3. Row Value (currently based only on original row index from the Looker data object)\n   */\n  sortData () {\n    var compareRowSortValues = (a, b) => {\n      var depth = a.sort.length\n      for(var i=0; i<depth; i++) {\n          if (a.sort[i] > b.sort[i]) { return 1 }\n          if (a.sort[i] < b.sort[i]) { return -1 }\n      }\n      return -1\n    }\n    this.data.sort(compareRowSortValues)\n    this.updateRowSpanValues()\n  }\n\n  /**\n   * Sorts columns by config option\n   * \n   * Depending on the colsSortBy option, columns are sorted by either:\n   * \n   * Sort by Pivots (default)\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Pivot sort values\n   * 3. Original column number for the Looker data obect [last item in sort value array]\n   * \n   * Sort by Measures\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Original Column Number\n   * 3. Measure sort values [remainder of sort value array]\n   * \n   * Note that column sort values can be over-riden by manual drag'n'drop \n   */\n  sortColumns () {\n    var compareColSortValues = (a, b) => {\n      var param = this.sortColsBy\n      var depth = a[param]().length\n      for(var i=0; i<depth; i++) {\n          if (a[param]()[i] > b[param]()[i]) { return 1 }\n          if (a[param]()[i] < b[param]()[i]) { return -1 }\n      }\n      return -1\n    }\n    this.columns.sort(compareColSortValues)\n\n    if (this.useIndexColumn) {\n      var columns = this.columns.filter(c => c.modelField.type == 'measure' || c.id === '$$$_index_$$$').filter(c => !c.hide)\n    } else {\n      var columns =  this.columns.filter(c => c.id !== '$$$_index_$$$').filter(c => !c.hide)\n    }\n    this.setColSpans(columns)\n  }\n\n  /**\n   * Generates subtotals values\n   * \n   * 1. Build array of subtotal groups\n   *    - Based on the joined values of each row's dimensions (up to the configured subtotal depth)\n   *    - Update each row's sort value with its subtotal group number\n   * 2. Generate data rows\n   *    - For each subtotal group, create a new Row\n   *      - For each Column\n   *        - Set the style\n   *        - In the index dimension and the firstVisibleDimension, put the subtotal label\n   *        - If it's a measure \n   *          - Count & total all rows of type 'line_item'\n   *          - Use total or average value based on calculation type\n   *          - Set as blank if it's a string type\n   *            // This is a gap in functionality. Ideally subtotal would replicate the logic that generated\n   *            // the string values in the line items.\n   */\n  addSubTotals () { \n    var depth = this.addSubtotalDepth\n\n    // BUILD GROUPINGS / SORT VALUES\n    var subTotalGroups = []\n    var latest_group = []\n    this.data.forEach((row, i) => {    \n      if (row.type !== 'total') {\n        var group = []\n        for (var g = 0; g < depth; g++) {\n          var dim = this.dimensions[g].name\n          group.push(row.data[dim].value)\n        }\n        if (group.join('|') !== latest_group.join('|')) {\n          subTotalGroups.push(group)\n          latest_group = group\n        }\n        row.sort = [0, subTotalGroups.length-1, i]\n      }\n    })\n\n    var firstVisibleDimension = this.dimensions[0].name\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dimension = this.dimensions[i]\n      if (!dimension.hide) {\n        firstVisibleDimension = dimension.name\n        break\n      }\n    }\n\n    // GENERATE DATA ROWS FOR SUBTOTALS\n    subTotalGroups.forEach((subTotalGroup, s) => {\n      var subtotal = new Row('subtotal')\n      subtotal.id = 'Subtotal|' + subTotalGroup.join('|')\n\n      this.columns.forEach(column => {\n        subtotal.data[column.id] = { 'cell_style': ['total', 'subtotal'] } // set default\n\n        if (column.id === '$$$_index_$$$' || column.id === firstVisibleDimension ) {\n          var subtotal_label = subTotalGroup.join(' | ')\n          subtotal.data[column.id].value = subtotal_label\n        } \n\n        if (column.modelField.type == 'measure') {\n          if (Object.entries(this.subtotals_data).length > 0) {\n            subtotal.data[column.id] = { ...subtotal.data[column.id], ...this.subtotals_data[subtotal.id].data[column.id] }\n          } else {\n            if (column.pivoted) {\n              var cellKey = [column.pivot_key, column.modelField.name].join('.') \n            } else {\n              var cellKey = column.id\n            }\n\n            var subtotal_value = 0\n            var subtotal_items = 0\n            var rendered = ''\n            this.data.forEach(data_row => {\n              if (data_row.type == 'line_item' && data_row.sort[1] == s) { // data_row.sort[1] == s checks whether its part of the subtotal group\n                var value = data_row.data[cellKey].value\n                if (Number.isFinite(value)) {\n                  subtotal_value += value\n                  subtotal_items++\n                }\n              } \n            })\n            \n            if (column.modelField.calculation_type === 'average' && subtotal_items > 0) {\n              subtotal_value = subtotal_value / subtotal_items\n            }\n            if (subtotal_value) {\n              rendered = column.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(column.modelField.value_format, subtotal_value)\n            }\n            if (column.modelField.calculation_type === 'string') {\n              subtotal_value = ''\n              rendered = ''\n            } \n\n            var cellValue = {\n              value: subtotal_value,\n              rendered: rendered,\n              cell_style: ['subtotal', 'total']\n            }\n            subtotal.data[cellKey] = cellValue\n          }\n        }\n      })\n      subtotal.sort = [0, s, 9999]\n      this.data.push(subtotal)\n    })\n    this.sortData()\n    this.has_subtotals = true\n  }\n\n  /**\n   * Generates new column subtotals, where 2 pivot levels have been used\n   * // TODO: Could also have subtotals for 1 pivot tables sorted by measure\n   * \n   * 1. Derive the new column definitions\n   * 2. Use the new definitions to add subtotal columns to table.columns\n   * 3. Calculate the column subtotal values\n   */\n  addColumnSubTotals () {\n    var last_pivot_key = ''\n    var last_pivot_col = {}\n    var subtotals = []\n\n    var pivots = []\n    var pivot_dimension = this.pivot_fields[0]\n    this.pivot_values.forEach(pivot_value => {\n      var p_value = pivot_value['data'][pivot_dimension]\n      if (p_value !== null) { pivots.push(p_value) }\n    })\n    pivots = [...new Set(pivots)]\n\n    // DERIVE THE NEW COLUMN DEFINITIONS\n    pivots.forEach((pivot, p) => {\n      var highest_pivot_col = [0, '']\n      var previous_subtotal = null\n\n      this.measures.forEach((measure, m) => {\n        if (measure.can_pivot) {\n          var subtotal_col = {\n            modelField: measure,\n            pivot: pivot,\n            measure_idx: m,\n            pivot_idx: p,\n            columns: [],\n            id: ['$$$_subtotal_$$$', pivot, measure.name].join('.'),\n            after: ''\n          }\n  \n          this.columns.forEach((column, i) => {  \n            if (column.pivoted && column.levels[0] == pivot) {\n              if (column.modelField.name == measure.name) {\n                subtotal_col.columns.push(column.id)\n              }\n              if (column.levels[0] == pivot) {\n                if (i > highest_pivot_col[0]) {\n                  highest_pivot_col = [i, column.id]\n                }\n              }\n            }\n          })\n  \n          if (pivot != last_pivot_key) {\n            last_pivot_col[pivot] = highest_pivot_col[1]\n            previous_subtotal = null\n          }\n  \n          subtotal_col.after = previous_subtotal || last_pivot_col[pivot]\n          last_pivot_key = pivot\n          previous_subtotal = subtotal_col.id\n          subtotals.push(subtotal_col)\n        }\n      })\n    })\n\n    // USE THE NEW DEFINITIONS TO ADD SUBTOTAL COLUMNS TO TABLE.COLUMNS\n    subtotals.forEach((subtotal, s) => {\n      var modelField = this.measures[subtotal.measure_idx]\n      var column = new Column(subtotal.id, this, modelField)\n\n      column.levels = [subtotal.pivot, 'Subtotal']\n      column.sort_by_measure_values = [1, subtotal.measure_idx, ...column.levels]\n\n      var pivot_values = [...column.levels]\n      if (typeof pivot_values[pivot_values.length-1] == 'string') {\n        pivot_values[pivot_values.length-1] = 'ZZZZ'\n      } else {\n        pivot_values[pivot_values.length-1] = 9999\n      }\n      column.sort_by_pivot_values = [1, ...pivot_values, 10000 + s]\n      column.pivoted = true\n      column.subtotal = true\n      column.pivot_key = [subtotal.pivot, '$$$_subtotal_$$$'].join('|')\n      this.columns.push(column)\n    })\n    this.sortColumns()\n\n    // CALCULATE COLUMN SUB TOTAL VALUES\n    this.data.forEach(row => {\n      subtotals.forEach(subtotal => {\n        var subtotal_value = 0\n        subtotal.columns.forEach(field => {\n          subtotal_value += row.data[field].value\n        })\n        row.data[subtotal.id] = {\n          value: subtotal_value,\n          rendered: subtotal.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(subtotal.modelField.value_format, subtotal_value),\n          align: 'right',\n          cell_style: ['subtotal']\n        }\n        if (['subtotal', 'total'].includes(row.type)) { row.data[subtotal.id].cell_style.push('total') }\n      })\n    })\n\n    return subtotals\n  }\n\n  /**\n   * Variance calculation function to enable addVariance()\n   * @param {*} value_format \n   * @param {*} id \n   * @param {*} calc \n   * @param {*} baseline \n   * @param {*} comparison \n   */\n  calculateVariance (value_format, id, calc, baseline, comparison) {\n    this.data.forEach(row => {\n      var baseline_value = row.data[baseline.id].value\n      var comparison_value = row.data[comparison.id].value\n      if (calc === 'absolute') {\n        var cell_value = {\n          value: baseline_value - comparison_value,\n          rendered: value_format === '' ? (baseline_value - comparison_value).toString() : SSF.format(value_format, (baseline_value - comparison_value)),\n          cell_style: []\n        }\n      } else {\n        var value = (baseline_value - comparison_value) / Math.abs(comparison_value)\n        if (!isFinite(value)) {\n          var cell_value = {\n            value: null,\n            rendered: '∞',\n            cell_style: []\n          }\n        } else {\n          var cell_value = {\n            value: value,\n            rendered: SSF.format('#0.00%', value),\n            cell_style: []\n          }\n        }\n      }\n      if (row.type == 'total' || row.type == 'subtotal') {\n        cell_value.cell_style.push('total')\n      }\n      if (row.type === 'subtotal') {\n        cell_value.cell_style.push('subtotal')\n      }\n      if (cell_value.value < 0) {\n        cell_value.cell_style.push('red')\n      }\n      row.data[id] = cell_value\n    })\n  }\n\n  createVarianceColumn (colpair) {\n    var config = this.config\n    if (!config.colSubtotals && colpair.variance.baseline.startsWith('$$$_subtotal_$$$')) {\n      console.log('Cannot calculate variance of column subtotals if subtotals disabled.')\n      return\n    }\n    var id = ['$$$_variance_$$$', colpair.calc, colpair.variance.baseline, colpair.variance.comparison].join('|')\n    var baseline = this.getColumnById(colpair.variance.baseline)\n    var comparison = this.getColumnById(colpair.variance.comparison)\n    var column = new Column(id, this, baseline.modelField)\n\n    if (colpair.calc === 'absolute') {\n      column.variance_type = 'absolute'\n      column.idx = baseline.idx + 1\n      column.pos = baseline.pos + 1\n      column.sort_by_measure_values = baseline.sort_by_measure_values.concat(1)\n      column.sort_by_pivot_values = baseline.sort_by_pivot_values.concat(1)\n      column.hide = !config['var_num|' + baseline.modelField.name]\n    } else {\n      column.variance_type = 'percentage'\n      column.idx = baseline.idx + 2\n      column.pos = baseline.pos + 2\n      column.sort_by_measure_values = baseline.sort_by_measure_values.concat(2)\n      column.sort_by_pivot_values = baseline.sort_by_pivot_values.concat(2)\n      column.unit = '%'\n      column.hide = !config['var_pct|' + baseline.modelField.name]\n    }\n\n    // TODO: Review sort values / algorithms\n    if (baseline.sort_by_measure_values.length < column.sort_by_measure_values.length) {\n      baseline.sort_by_measure_values.push(0)\n    }\n    if (baseline.sort_by_pivot_values.length < column.sort_by_pivot_values.length) {\n      baseline.sort_by_pivot_values.push(0)\n    }\n\n    if (typeof config.columnOrder[column.id] !== 'undefined') {\n      column.pos = config.columnOrder[column.id]\n    } \n\n    column.field = {\n      name: id\n    }\n    column.pivoted = baseline.pivoted\n    column.super = baseline.super\n    column.pivot_key = ''\n\n    column.levels = baseline.levels\n    if (config.groupVarianceColumns) {\n      if (config.sortColumnsBy === 'getSortByPivots') {\n        column.sort_by_pivot_values[0] = 1.5\n      }\n      if (baseline.levels.length === 1) {\n        column.levels = ['Variance']\n      } else {\n        column.levels = ['Variance', baseline.levels[1]]\n      }\n    }\n\n    this.columns.push(column)\n    if (colpair.variance.reverse) {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, comparison, baseline)\n    } else {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, baseline, comparison)\n    }\n  }\n\n  /**\n   * Function to add variance columns directly within table vis rather than requiring a table calc\n   * \n   * Takes list of variances configured by the user, and generates a list of column-pairs necessary\n   * to calculate those variances. There is at least one baseline-comparison pair per variance.\n   * Comparing different measures in a pivoted table will calculate a variance pair per pivot value.\n   * Comparing the same measure across pivots will calculate one pair less than there are pivots e.g.\n   * if comparing this year to last year, there are two \"Reporting Period\" values but only one variance.\n   */\n  addVarianceColumns () {\n    var variance_colpairs = []\n    var calcs = ['absolute', 'percent']\n    \n    Object.keys(this.variances).forEach(v => {\n      var variance = this.variances[v]\n      if (variance.comparison !== 'no_variance') {          \n        if (variance.type === 'vs_measure') {\n          if (!this.has_pivots) {\n            calcs.forEach(calc => {\n              variance_colpairs.push({\n                variance: variance,\n                calc: calc\n              })\n            })\n          } else {\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                calcs.forEach(calc => {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [pivot_value.key, variance.comparison].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                })\n              }\n            })\n          }\n        } else if (variance.type === 'by_pivot') { \n          if (this.pivot_fields.length === 1 || this.pivot_fields[1] === variance.comparison) {\n            this.pivot_values.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                if (!pivot_value.is_total) {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [this.pivot_values[index].key, variance.baseline].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                }\n              })\n            })\n          } else { // top pivot value - variance by subtotal\n            var top_level_pivots = []\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                var value = pivot_value.data[this.pivot_fields[0]]\n                if (!top_level_pivots.includes(value)) {\n                  top_level_pivots.push(value)\n                }\n              }\n            })\n            top_level_pivots.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                variance_colpairs.push({\n                  calc: calc,\n                  variance: {\n                    baseline: ['$$$_subtotal_$$$', pivot_value, variance.baseline].join('.'),\n                    comparison: ['$$$_subtotal_$$$', top_level_pivots[index], variance.baseline].join('.'),\n                    reverse: variance.reverse,\n                    type: variance.type\n                  }\n                })\n              })\n            })\n          } \n        }\n      }\n    })\n\n    variance_colpairs.forEach(colpair => {\n      this.createVarianceColumn(colpair)\n    })\n  }\n\n  /**\n   * Generate data series to support transposition\n   */\n  addColumnSeries() {\n    this.columns.forEach(column => {\n      var keys = []\n      var values = []\n      var types = []\n\n      this.data.forEach(row => {\n        keys.push(row.id)\n        values.push(row.data[column.id].value)\n        types.push(row.type)\n      })\n\n      var new_series = new ColumnSeries({\n        column: column,\n        is_numeric: column.modelField.is_numeric,\n        series: {\n          keys: keys,\n          values: values,\n          types: types\n        }\n      })\n      \n      column.series = new_series\n      this.column_series.push(new_series)\n    })\n  }\n\n  buildTotals(queryResponse) {\n    if (typeof queryResponse.totals_data !== 'undefined') {\n      if (typeof queryResponse.truncated !== 'undefined') {\n        var calculate_others = true\n      } else {\n        var calculate_others = false\n      }\n\n      var totals_ = queryResponse.totals_data\n\n      var firstVisibleDimension = this.dimensions[0].name\n      for (var i = 0; i > this.dimensions.length; i++) {\n        var dimension = this.dimensions[i]\n        if (!dimension.hide) {\n          firstVisibleDimension = dimension.name\n          break\n        }\n      }\n\n      var totals_row = new Row('total')\n      var others_row = new Row('line_item')\n\n      this.columns.forEach(column => {\n        var other_value = null\n        totals_row.id = 'Total'\n        others_row.id = 'Others'\n        totals_row.data[column.id] = { value: '', cell_style: ['total'] } // set a default on all columns\n        others_row.data[column.id] = { value: '', cell_style: [] } // set a default on all columns\n        \n        if (column.modelField.type == 'measure') {\n          if (column.pivoted == true) {\n            var cellValue = totals_[column.modelField.name][column.pivot_key]       \n          } else {\n            var cellValue = totals_[column.id]  \n          }\n          if (typeof cellValue.rendered == 'undefined' && typeof cellValue.html !== 'undefined' ){ // totals data may include html but not rendered value\n            cellValue.rendered = this.getRenderedFromHtml(cellValue)\n          }\n          if (calculate_others) {\n            if (['sum', 'count_distinct', 'count'].includes(column.modelField.calculation_type)) {\n              other_value = cellValue.value - column.series.series.sum\n            } else if (column.modelField.calculation_type === 'average') {\n              other_value = (cellValue.value + column.series.series.avg) / 2\n            }  \n          }\n          cellValue.cell_style = ['total']\n          totals_row.data[column.id] = cellValue\n          if (typeof totals_row.data[column.id].links !== 'undefined') {\n            totals_row.data[column.id].links.forEach(link => {\n              link.type = \"measure_default\"\n            })\n          }\n\n          if (calculate_others && other_value) {\n            var formatted_value = column.modelField.value_format === '' \n                  ? other_value.toString() \n                  : SSF.format(column.modelField.value_format, other_value)\n                  others_row.data[column.id] = { value: other_value, rendered: formatted_value } \n          }\n                    \n        }\n      })\n      totals_row.data['$$$_index_$$$'].value = 'TOTAL'\n      totals_row.data[firstVisibleDimension].value = 'TOTAL' \n      totals_row.sort = [1, 0, 0]\n\n      if (calculate_others) {\n        others_row.data['$$$_index_$$$'].value = 'Others'\n        others_row.data[firstVisibleDimension].value = 'Others'\n        others_row.sort = [1, -1, -1] \n      }\n      \n      this.data.push(totals_row)\n      calculate_others && this.data.push(others_row)\n\n      this.has_totals = true\n      this.sortData()\n    }\n  }\n\n  /**\n   * Extracts the formatted value of the field from the html: value\n   * There are cases (totals data) where the formatted value isn't available as usual rendered_value\n   * @param {*} cellValue \n   */\n  getRenderedFromHtml (cellValue) {\n    var parser = new DOMParser()\n    if (typeof cellValue.html !== 'undefined' && !['undefined', ''].includes(cellValue.html)) {\n      try {\n        var parsed_html = parser.parseFromString(cellValue.html, 'text/html')\n        var rendered = parsed_html.documentElement.textContent\n      }\n      catch(TypeError) {\n        var rendered = cellValue.html\n      }\n    } else {\n      var rendered = cellValue.value\n    }\n\n    return rendered\n  }\n\n  /**\n   * For rendering a transposed table i.e. with the list of measures on the left hand side\n   * 1. If used, add the 'header' column\n   * 2. Depending on column sort order, add pivot fields then a measure column (or vice versa) \n   * 3. Add a transposed column for every data row\n   */\n  transposeColumns () {\n    this.transposed_columns = []\n    var default_colspan = newArray(this.dimensions.length, 1)\n    var index_parent = {\n      align: 'left',\n      type: 'transposed_table_index',\n      is_table_calculation: false\n    }\n    var measure_parent = {\n      align: 'right',\n      type: 'transposed_table_measure',\n      is_table_calculation: false\n    }\n\n    if (this.useHeadings && !this.has_pivots) {\n      var transposed_column = new Column('header', this, index_parent)\n      transposed_column.labels = ['Header', '', '']\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'measure'\n      this.transposed_columns.push(transposed_column)\n    }\n\n    if (this.sortColsBy === 'getSortByPivots') {\n      this.pivots.forEach(pivot => {\n        var transposed_column = new Column(pivot.name, this, index_parent)\n        transposed_column.labels = [pivot.label_short, '', '']\n        transposed_column.colspans = default_colspan\n        transposed_column.type = 'dimension'\n        transposed_column.align = 'left'\n        this.transposed_columns.push(transposed_column)\n      })\n\n      var transposed_column = new Column('measure', this, index_parent)\n      transposed_column.labels = ['Meaure', '', '']\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'measure'\n      transposed_column.align = 'left'\n      this.transposed_columns.push(transposed_column)\n    } else {\n      var transposed_column = new Column('measure', this, index_parent)\n      transposed_column.labels = ['Meaure', '', '']\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'measure'\n      transposed_column.align = 'left'\n      this.transposed_columns.push(transposed_column)\n\n      this.pivots.forEach(pivot => {\n        var transposed_column = new Column(pivot.name, this, index_parent)\n        transposed_column.labels = [pivot.label_short, '', '']\n        transposed_column.colspans = default_colspan\n        transposed_column.type = 'dimension'\n        transposed_column.align = 'left'\n        this.transposed_columns.push(transposed_column)\n      })\n    }\n    \n    for (var h = 0; h < this.data.length; h++) {\n      var sourceRow = this.data[h]\n      if (sourceRow.type === 'line_item') {\n        var colspan = []\n        var labels = []\n        this.dimensions.forEach(dim => {\n          if (this.spanRows) {\n            colspan.push(this.rowspan_values[sourceRow.id][dim.name])\n          } else {\n            colspan.push(1)\n          }\n          labels.push(sourceRow.data[dim.name].value)\n        })\n      } else if (sourceRow.type === 'subtotal') {\n        var colspan = default_colspan\n        var labels = ['Subtotal'].concat(newArray(this.dimensions.length-1, ''))\n      } else if (sourceRow.type === 'total') {\n        var colspan = default_colspan\n        var labels = ['TOTAL'].concat(newArray(this.dimensions.length-1, ''))\n      }\n\n      var transposed_column = new Column(sourceRow.id, this, measure_parent)\n      transposed_column.transposed = true\n      transposed_column.colspans = colspan\n      transposed_column.labels = labels\n      transposed_column.align = 'right'\n      this.transposed_columns.push(transposed_column)\n    }\n  }\n\n  transposeRows () {\n    this.columns.filter(c => c.modelField.type === 'measure').forEach(column => {\n      var transposed_data = {}\n      this.data.forEach(row => {\n        if (typeof row.data[column.id] !== 'undefined') {\n          transposed_data[row.id] = row.data[column.id]\n          transposed_data[row.id]['align'] = 'right'\n          if (typeof transposed_data[row.id]['cell_style'] !== 'undefined') {\n            transposed_data[row.id]['cell_style'].push('transposed')\n          } else {\n            transposed_data[row.id]['cell_style'] = ['transposed']\n          }\n        } else {\n          console.log('row data does not exist for', column.id)\n        }\n      })\n\n      // INDEX FIELDS (header, pivot values, measure name)\n      var column_heading = column.modelField.heading\n      var key = 'heading|' + column.modelField.name\n      if (typeof this.config[key] !== 'undefined') {\n        column_heading = this.config[key] ? this.config[key] : column_heading\n      } \n      transposed_data.header = { value: column_heading, cell_style: [] }\n      if (column.subtotal) { transposed_data.header.cell_style.push('subtotal') }\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        var measure_level = this.pivots.length\n      } else {\n        var measure_level = 0\n      }\n      if (this.useHeadings) { measure_level++ }\n\n      transposed_data.measure = { value: column.getLabel(measure_level), cell_style: [] }\n      if (column.subtotal) { transposed_data.measure.cell_style.push('subtotal') }\n      if (column.modelField.style.includes('subtotal')) { transposed_data.measure.cell_style.push('subtotal') }\n      \n      this.pivot_fields.forEach((pivot_field, idx) => {\n        transposed_data[pivot_field] = { value: column.levels[idx], cell_style: [] }\n        if (column.subtotal) { transposed_data[pivot_field].cell_style.push('subtotal') }\n      })\n\n      var transposed_row = new Row('line_item')\n      transposed_row.id = column.id\n      transposed_row.modelField = column.modelField\n      transposed_row.hide = column.hide\n      transposed_row.rowspans = column.colspans\n      transposed_row.data = transposed_data\n\n      this.transposed_data.push(transposed_row)\n    })\n  }\n\n  /**\n   * Used to support rendering of table as vis. \n   * Returns an array of 0s, of length to match the required number of header rows\n   */\n  getLevels () {\n    var levels = []\n    if (!this.transposeTable) {\n      if (this.useHeadings && !this.has_pivots) { levels.push('headers level') }\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        this.pivots.forEach(pivot => {\n          levels.push(pivot.name)\n        })\n        levels.push('measures level')\n      } else {\n        levels.push('measures level')\n        this.pivots.forEach(pivot => {\n          levels.push(pivot.name)\n        })\n      }\n    } else {\n      levels = this.dimensions\n    }\n\n    return levels\n  }\n\n  /**\n   * Performs horizontal cell merge of header values by calculating required colspan values\n   * @param {*} columns \n   */\n  setColSpans (columns) {\n    var config = this.config\n    var header_levels = []\n    var span_values = []\n    var span_tracker = []\n    \n    // init header_levels and span_values arrays\n    for (var c = columns.length-1; c >= 0; c--) {\n      var idx = columns.length - 1 - c\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        header_levels[idx] = [...columns[c].levels, columns[c].modelField.name]\n      } else {\n        header_levels[idx] = [columns[c].field.name, ...columns[c].levels]\n      }\n\n      if (this.useHeadings && !this.has_pivots) {\n        var column_heading = columns[c].modelField.heading\n        var key = 'heading|' + columns[c].modelField.name\n        if (typeof config[key] !== 'undefined') {\n          column_heading = config[key] ? config[key] : column_heading\n        } \n        header_levels[idx].unshift(column_heading)\n      }\n\n      span_values[c] = newArray(header_levels[idx].length, 1)\n    }\n\n    if (this.spanCols) {\n      span_tracker = newArray(header_levels[0].length, 1)\n\n      // FIRST PASS: loop through the pivot headers\n      for (var h = 0; h < header_levels.length; h++) {\n        var header = header_levels[h]\n        \n        // loop through the levels for the pivot headers\n        var start = 0\n        var end = header.length - 1\n\n        for (var l = start; l < end; l++) {\n          var this_value = header_levels[h][l]\n          if (h < header_levels.length-1) {\n            var above_value = header_levels[h+1][l]\n          }\n\n          // increment the tracker if values match\n          if (h < header_levels.length-1 && this_value == above_value) {\n            span_values[h][l] = -1;\n            span_tracker[l] += 1;\n          } else {\n          // partial reset if the value differs\n            for (var l_ = l; l_ < end; l_++) {\n              span_values[h][l_] = span_tracker[l_];\n              span_tracker[l_] = 1\n            }\n            break;\n          }\n        }\n      }\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        var label_level = this.pivot_fields.length + 1\n      } else {\n        var label_level = 0\n      }\n\n      // SECOND PASS: loop backwards through the levels for the column labels\n      for (var h = header_levels.length-1; h >= 0; h--) {\n        var this_value = header_levels[h][label_level]\n        if (h > 0) {\n          var next_value =header_levels[h-1][label_level] \n        }\n        // increment the span_tracker if dimensions match\n        if (h > 0 && this_value == next_value) {\n          span_values[h][label_level] = -1;\n          span_tracker[label_level] += 1;\n        } else {\n        // partial reset and continue if dimensions different\n          span_values[h][label_level] = span_tracker[label_level];\n          span_tracker[label_level] = 1\n        }\n      }\n\n      span_values.reverse()\n    }\n    \n    columns.forEach((column, idx) => {\n      column.colspans = span_values[idx]\n      this.colspan_values[column.id] = span_values[idx]\n    })\n\n    return columns\n  }\n\n  /**\n   * Builds array of arrays, used at by table vis to build column groups\n   * Three column groups: \n   * - index (dimensions)\n   * - measures (standard measures)\n   * - totals (supermeasures: row totals and some table calcs)\n   * \n   * For transposed tables:\n   * - index (headers, pivot value, measures)\n   * - measures (Includes subtotals. Cells contain measure values, header rows contain dimension values)\n   * - totals (totals)\n   */\n  getTableColumnGroups () {\n    var index_columns = []\n    var measure_columns = []\n    var total_columns = []\n\n    if (!this.transposeTable) {\n      this.columns.forEach(column => {\n        if (column.modelField.type === 'dimension' && !this.useIndexColumn && column.id !== '$$$_index_$$$' && !column.hide) {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'dimension' && this.useIndexColumn && column.id === '$$$_index_$$$') {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && !column.super && !column.hide) {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && column.super && !column.hide) {\n          total_columns.push({ id: column.id })\n        }\n      })\n    } else {\n      this.transposed_columns.forEach(column => {\n        if (column.modelField.type === 'transposed_table_index') {\n          index_columns.push({ id: column.id})\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id !== 'Total') {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id === 'Total') {\n          total_columns.push({ id: column.id })\n        }\n      })\n    }\n  }\n\n  /**\n   * Used to support rendering of data table as vis. \n   * Builds list of columns out of data set that should be displayed\n   * @param {*} i \n   */\n  getTableHeaders (i) {\n    if (!this.transposeTable) {\n      if (this.useIndexColumn) {\n        var columns = this.columns.filter(c => c.modelField.type == 'measure' || c.id === '$$$_index_$$$').filter(c => !c.hide)\n      } else {\n        var columns =  this.columns.filter(c => c.id !== '$$$_index_$$$').filter(c => !c.hide)\n      }\n\n      columns = this.setColSpans(columns).filter(c => c.colspans[i] > 0)\n\n      return columns\n\n    } else {\n      return this.transposed_columns.filter(c => c.colspans[i] > 0)\n    }\n\n  }\n\n  getDataRows () {\n    if (!this.transposeTable) {\n      return this.data\n    } else {\n      return this.transposed_data.filter(row => !row.hide)\n    }\n  }\n\n  /**\n   * Used to support rendering of data table as vis.\n   * For a given row of data, returns filtered array of cells – only those cells that are to be displayed.\n   * @param {*} row \n   */\n  getTableColumns (row) {\n    if (!this.transposeTable) {\n      // filter out unwanted dimensions based on index_column setting\n      if (this.useIndexColumn) {\n        var cells = this.columns.filter(c => c.modelField.type == 'measure' || c.id === '$$$_index_$$$').filter(c => !c.hide)\n      } else {\n        var cells =  this.columns.filter(c => c.id !== '$$$_index_$$$').filter(c => !c.hide)\n      }\n\n      // if we're using all dimensions, and we've got span_rows on, need to update the row\n      if (!this.useIndexColumn && this.spanRows) {\n      // set row spans, for dimension cells that should appear\n        cells.forEach(cell => {\n          cell.rowspan = 1 // set default\n          if (row.type === 'line_item' && this.rowspan_values[row.id][cell.id] > 0) {\n            cell.rowspan = this.rowspan_values[row.id][cell.id]\n          } \n        })\n        // filter out dimension cells that a hidden / merged into a cell above\n        if (row.type === 'line_item') {\n          cells = cells.filter(c => c.modelField.type == 'measure' || this.rowspan_values[row.id][c.id] > 0)\n        }\n      }\n    } else {\n      var cells = this.transposed_columns\n      cells.forEach((cell, idx) => {\n        cell.rowspan = 1\n        if (cell.modelField.type === 'transposed_table_index' && typeof row.rowspans[idx] !== 'undefined') {\n          cell.rowspan = this.colspan_values[row.id][idx]\n        }\n      })\n      cells = cells.filter(cell => cell.rowspan > 0)\n    }\n    return cells    \n  }\n\n  /**\n   * Used to support column drag'n'drop when rendering data table as vis.\n   * Updates the table.config with the new pos values.\n   * Accepts a callback function for interaction with the vis.\n   * @param {*} from \n   * @param {*} to \n   * @param {*} callback \n   */\n  moveColumns(from, to, updateColumnOrder) {\n    var config = this.config\n    if (from != to) {\n      var shift = to - from\n      var col_order = config.columnOrder\n      this.columns.forEach(col => {\n        if (col.modelField.type == 'measure' && !col.super) {\n          if (col.pos >= from && col.pos < from + 10) {\n            // console.log('MOVING COLUMN', col.id, col.pos, '->', col.pos + shift)\n            col.pos += shift\n          } else if (col.pos >= to && col.pos < from) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos + 10)\n            col.pos += 10\n          } else if (col.pos >= from + 10 && col.pos < to + 10) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos - 10)\n            col.pos -= 10\n          }\n          col_order[col.id] = col.pos\n        } \n      })\n      updateColumnOrder(col_order)\n    }\n  }\n\n  validateConfig() {\n    if (!['traditional', 'looker', 'contemporary', 'custom'].includes(this.config.theme)) {\n      this.config.theme = 'traditional'\n    }\n\n    if (!['fixed', 'auto'].includes(this.config.layout)) {\n      this.config.layout = 'fixed'\n    }\n\n    if (typeof this.config.transposeTable === 'undefined') {\n      this.config.transposeTable = false\n    }\n\n    Object.entries(this.config).forEach(option => {\n      if (option[1] === 'false') {\n        option[1] = false\n      } else if (option[1] === 'true') {\n        option[1] = true\n      }\n    })\n  }\n\n  /**\n   * Returns dataset as a simple json object\n   * Includes line_items only (e.g. no row subtotals)\n   * \n   * Convenience function when using LookerData as an object to support e.g. Vega Lite visualisations\n   */\n  getSimpleJson() {\n    var raw_values = []\n    this.data.forEach(r => {\n      if (r.type === 'line_item') {\n        var row = {}\n        this.columns.forEach(c => {\n          row[c.id] = r.data[c.id].value\n        })\n        raw_values.push(row)\n      }\n    })\n    return raw_values\n  }\n}\n\nexports.VisPluginTableModel = VisPluginTableModel\n\n// MUST\n// TODO: update validateConfig to enforce ALL defaults\n\n// SHOULD\n// TODO: tooltip for data cells\n// TODO: tooltip for index cells\n\n// NICE TO HAVE\n// TODO: Investigate replacing all this.pivot_fields references with this.pivots\n// TODO: option for reporting in 000s or 000000s\n// TODO: more formatting options\n// TODO: addSpacerColumns\n// TODO: addUnitHeaders\n// TODO: addRowNumbers // to Index Column only?"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js","webpack:///./node_modules/ssf/ssf.js","webpack:///./src/vis_table_plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelField","vis","queryResponseField","this","view","view_label","label","field_group_variant","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","heading","short_name","unit","tags","forEach","tag","split","Series","keys","values","types","length","line_items_only","with_subtotals","push","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelDimension","super","align","ModelPivot","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","HeaderCell","cell_style","pivotData","id","join","colspan","rowspan","headerRow","concat","DataCell","html","links","rowid","colid","Row","sort","data","Column","transposed","idx","pos","levels","pivot_key","isVariance","variance_type","pivoted","isRowTotal","subtotal","subtotal_data","colspans","level","headerCell","header_setting","label_setting","useShortName","groupVarianceColumns","pivot_values","useViewName","headers","getHeaderCellLabel","headerData","header","_strrev","x","charAt","fill","pad0","v","pad_","rpad_","version","p2_32","pow","pad0r","round","pad0r1","pad0r2","isgeneral","charCodeAt","days","months","init_table","table_fmt","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","basedate","dnthresh","getTime","base1904","datenum_local","epoch","getTimezoneOffset","_general_int","general_fmt_num","gnr1","gnr2","gnr4","gnr5","gnr6","gfn5","indexOf","replace","V","LOG10E","toPrecision","w","toFixed","toExponential","gfn2","substr","gfn3","gfn4","general_fmt","Error","write_date","fmt","val","ss0","ss","tt","outl","commaify","j","_general_num","_general","write_num","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","String","fromCharCode","rnd","dd","dec","write_num_flt","match","ffmt","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","slice","lastIndexOf","split_fmt","in_str","_split","abstime","fmt_is_date","toUpperCase","eval_fmt","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","is_date","_eval","cfregex","cfregex2","chkcond","thresh","parseFloat","dateNF","table","f","lat","m1","m2","choose_fmt","load_entry","undefined","load","_table","get_table","load_table","tbl","make_ssf","DO_NOT_EXPORT_SSF","tableModelCoreOptions","theme","section","display","default","order","customTheme","layout","minWidthForIndexColumns","headerFontSize","display_size","bodyFontSize","showTooltip","showHighlight","columnOrder","rowSubtotals","colSubtotals","sortRowSubtotalsBy","spanRows","spanCols","calculateOthers","sortColumnsBy","useHeadings","useUnit","genericLabelForSubtotals","indexColumn","transposeTable","rowSortOrder","VisPluginTableModel","lookerData","queryResponse","visId","dimensions","measures","columns","subtotals_data","transposed_headers","transposed_columns","transposed_data","pivot_fields","pivots","variances","column_series","firstVisibleDimension","useIndexColumn","addRowSubtotals","addSubtotalDepth","subtotalDepth","subtotalGroups","addColSubtotals","useInitialRowSort","originalRowSorts","sorts","sortColsBy","fieldLevel","hasTotals","totals_data","truncated","hasSubtotals","hasRowTotals","has_row_totals","hasPivots","hasSupers","fields","supermeasure_like","Boolean","addPivotsAndHeaders","addDimensions","addMeasures","checkVarianceCalculations","addIndexColumn","addRows","addColumnSeries","buildTotals","initialSort","calculateSubtotalRows","enrichSubtotalRows","updateDataSortValues","collapsibleSortData","setRowSpans","addColumnSubTotals","addVarianceColumns","sortColumns","setHeaderCellLabels","setColSpans","applyFormatting","transposeDimensionsIntoHeaders","transposeRowsIntoColumns","transposeColumnsIntoRows","validateConfig","getTableColumnGroups","newOptions","subtotal_options","dimension","subtotal_option","measure","comparisonOptions","pivotComparisons","pivot_field","option","comparisonMeasure","includeMeasure","unshift","pivot","measureHeaders","col_idx","dimension_like","newDimension","pivotField","measure_like","newMeasure","reportInSetting","unitSetting","pivot_value","level_sort_values","startsWith","sort_values","supermeasure","meas","baseline","comparison","baseline_in_measures","comparison_available","map","comparitor","reverse","dim_config_setting","lookerRow","originalRow","cellValue","cell","cell_series","_parsed","last_dim","sourceCell","new_series","totals_","totalsRow","filter","getRenderedFromHtml","link","Number","POSITIVE_INFINITY","othersRow","othersValue","othersStyle","totalValue","sortData","collapsibleSort","depth","a_value","b_value","desc","compareCollapsibleSortArrays","subtotalSorts","updateCollapsibleSortValues","latestGroups","sub","subDimension","group","g","subtotalId","visSubtotal","children","newSubtotalGroup","subtotals_array","entries","subtotals_entry","filterable_value","groupId","field","subtotalGroup","missingGroups","$$$__grouping__$$$","missingGroup","subtotal_value","subtotal_items","isFinite","leaves","tiers","span_tracker","tier","leaf","this_tier_value","neighbour_value","t_","tier_","subtotalColumns","pivot_dimension","p_value","Set","subtotalColumn","measure_idx","columnPivotValue","sort_value_from_column","subtotalSortValue","calc","baseline_value","comparison_value","colpair","variance","getColumnById","getHeaderCellLabelByType","calculateVariance","variance_colpairs","calcs","is_total","index","top_level_pivots","createVarianceColumn","compareSortArrays","getHeaderData","config_setting","index_parent","transposedColumn","h","measure_parent","sourceRow","cellRef","transposedData","transposed_row","field_option","field_name","keep_option","parser","DOMParser","parseFromString","documentElement","textContent","TypeError","dataRows","cells","from","to","updateColumnOrder","shift","col_order","col","raw_values","indexColumns","measureColumns","totalColumns","columnGroups","tipHTML","getRowById","focusColumn","rowClass","render","isEstimate","measureLabel","isReportedIn","1000","1000000","1000000000"],"mappings":"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","file":"vis_table_plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.field_group_variant || queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = typeof queryResponseField.is_numeric !== 'undefined' ? queryResponseField.is_numeric : false\n    this.is_array = ['list', 'number_list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format ? queryResponseField.value_format : ''\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = ''\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style = style_setting\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'style':\n              this.style = tags[2] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelPivot extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'pivot'    \n    this.align = 'center'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' ? queryResponseField.is_table_calculation : false\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = typeof queryResponseField.is_turtle !== 'undefined' ? queryResponseField.is_turtle : false\n    this.can_pivot = can_pivot\n  }\n}\n\nclass HeaderCell {\n  constructor({ column, type, label = null, align = '', cell_style = [], modelField = { name: '', label: '', view: '' }, pivotData = {} } = { column, type, label, align, cell_style, modelField, pivotData }) {\n    this.id = [column.id, type].join('.')\n    this.column = column\n    this.type = type\n    this.colspan = 1\n    this.rowspan = 1\n    this.headerRow = true\n    this.cell_style = ['headerCell'].concat(cell_style)\n    this.label = label\n\n    this.align = align ? align : this.column.modelField.is_numeric ? 'right' : 'left'\n\n    // if (column.vis.sortColsBy === 'pivots') {\n    //   if (type.startsWith 'pivot') {\n    //     this.align = 'center'\n    //   }\n    // } else {\n\n    // }\n\n    // if (this.column.modelField.type === 'dimension') {\n    //   if (type === 'pivot') {\n    //     this.align = 'right'\n    //   } else if (type === 'heading') {\n    //     this.align = 'center'\n    //   } else {\n    //     this.align = modelField.align || 'left'\n    //   }\n    // } else if (this.column.modelField.type === 'measure') {\n    //   if (type === 'field' && (column.vis.pivot_fields.length === 0 || column.vis.sortColsBy === 'getSortByPivots' )) {\n    //     this.align = modelField.align || 'right'\n    //   } else {\n    //     this.align = 'center'\n    //   }\n    // } else {\n    //   this.align = align\n    // }\n\n    this.modelField = modelField\n    this.pivotData = pivotData\n\n    if (modelField.type) { this.cell_style.push(modelField.type)}\n    if (modelField.is_table_calculation) { this.cell_style.push('calculation')}\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(...with_subtotals)\n      this.max_for_display = Math.max(...with_subtotals)\n      this.min = Math.min(...line_items_only)\n      this.max = Math.max(...line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  toString() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\nclass DataCell {\n  constructor({ value, rendered = null, html = null, links = [], cell_style = [], align = 'right', rowspan = 1, colspan = 1, rowid = '', colid = '' } = {})\n    {\n      this.value = value\n      this.rendered = rendered\n      this.html = html\n      this.links = links\n      this.cell_style = ['rowCell'].concat(cell_style)\n      this.align = align\n      this.rowspan = rowspan\n      this.colspan = colspan\n\n      this.colid = colid\n      this.rowid = rowid\n      this.id = colid && rowid ? [colid, rowid].join('.') : null\n\n      if (this.value === null && this.rendered !== '∞') {\n        this.rendered = '∅'\n      }\n    }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    // this.modelField = null\n    this.hide = false\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.isVariance = false\n    this.variance_type = null\n    this.pivoted = false\n    this.isRowTotal = false\n    this.super = false\n    this.subtotal = false\n    this.subtotal_data = {}\n    \n    this.series = null\n\n    this.sort = []\n    this.colspans = []\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getHeaderCellLabel (level) {\n    var headerCell = this.levels[level]\n\n    if (headerCell.label !== null) {\n      var label = headerCell.label\n    } else {\n      var label = headerCell.modelField.label\n      var header_setting = this.vis.config['heading|' + headerCell.modelField.name]\n      var label_setting = this.vis.config['label|' + headerCell.modelField.name]\n\n      if (headerCell.type === 'heading') {\n        if (typeof header_setting !== 'undefined') {\n          label = header_setting ? header_setting : headerCell.modelField.heading\n        } else {\n          label = headerCell.modelField.heading\n        }\n        return label\n      }\n\n      if (headerCell.type === 'field') {\n        label = this.vis.useShortName\n          ? headerCell.modelField.short_name || headerCell.modelField.label \n          : headerCell.modelField.label\n        \n        if (typeof label_setting !== 'undefined' && label_setting !== this.modelField.label) {\n          label = label_setting ? label_setting : label\n        }\n\n        if (this.isVariance) {\n          if (this.vis.groupVarianceColumns) {\n            if (this.vis.pivot_values.length === 2) {\n              label = this.variance_type === 'absolute' ? label + ' #' : label + ' %'\n            } else {\n              label = this.variance_type === 'absolute' ? label + ' Var #' : label + ' Var %'\n            }\n          } else {\n            label = this.variance_type === 'absolute' ? 'Var #' : 'Var %'\n          }\n        }\n    \n        if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n          label = [this.modelField.view, label].join(' ') \n        }\n      }\n\n      if (headerCell.type === 'pivot') {\n        if (this.isVariance && this.vis.groupVarianceColumns) {\n          if (this.vis.pivot_values.length === 2) {\n            label = 'Variance'\n          } else {\n            label = 'Var ' + label\n          }\n        }\n      }\n    }\n\n    return label\n  }\n\n  getHeaderCellLabelByType (type) {\n    for (var i = 0; i < this.vis.headers.length; i++) {\n      if (type === this.vis.headers[i].type) {\n        return this.getHeaderCellLabel(i)\n      }\n    }\n    return null\n  }\n\n  setHeaderCellLabels () {\n    this.levels.forEach((level, i) => {\n      level.label = level.label === null ? this.getHeaderCellLabel(i) : level.label\n    })\n  }\n\n  getHeaderData () {\n    var headerData = {}\n    this.modelField.vis.headers.forEach((header, i) => {\n      headerData[header.type] = this.levels[i]\n    })\n\n    return headerData\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelPivot = ModelPivot\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.HeaderCell = HeaderCell\nexports.DataCell = DataCell\nexports.Row = Row\nexports.Column = Column\n","/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nvar make_ssf = function make_ssf(SSF){\nSSF.version = '0.11.0';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\tt[65535]= 'General';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\nfunction general_fmt_int(v) { return v.toString(10); }\nSSF._general_int = general_fmt_int;\nvar general_fmt_num = (function make_general_fmt_num() {\nvar gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/, gnr6 = /(E[+-])(\\d)$/;\nfunction gfn2(v) {\n\tvar w = (v<0?12:11);\n\tvar o = gfn5(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\nfunction gfn3(v) {\n\tvar o = v.toFixed(11).replace(gnr1,\".$1\");\n\tif(o.length > (v<0?12:11)) o = v.toPrecision(6);\n\treturn o;\n}\nfunction gfn4(o) {\n\tfor(var i = 0; i != o.length; ++i) if((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4,\".$1\").replace(gnr5,\"E\").replace(\"e\",\"E\").replace(gnr6,\"$10$2\");\n\treturn o;\n}\nfunction gfn5(o) {\n\treturn o.indexOf(\".\") > -1 ? o.replace(gnr2,\"\").replace(gnr1,\".$1\") : o;\n}\nreturn function general_fmt_num(v) {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = gfn2(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = gfn3(v);\n\treturn gfn5(gfn4(o));\n};})();\nSSF._general_num = general_fmt_num;\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri() { return 0; }\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1;\n\t}\n\tif(outl > 0) return pad0(out, outl); else return \"\";\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 0;\n\t}\n\treturn Math.round((val-Math.floor(val))*Math.pow(10,d));\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) { if(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0)); return \"\"+Math.floor(val); }\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase \"$\": out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\n};\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n","import SSF from \"ssf\"\n\nimport { ModelDimension, ModelPivot, ModelMeasure, CellSeries, ColumnSeries, Row, Column, DataCell, HeaderCell } from './vis_primitives'\n\nconst tableModelCoreOptions = {\n  theme: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Theme\",\n    values: [\n      { 'Traditional': 'traditional' },\n      { 'Looker': 'looker' },\n      { 'Contemporary': 'contemporary' },\n      { 'Use custom theme': 'custom'}\n    ],\n    default: \"traditional\",\n    order: 1,\n  },\n  customTheme: {\n    section: \"Theme\",\n    type: \"string\",\n    label: \"Load custom CSS from:\",\n    default: \"\",\n    order: 2,\n  },\n  layout: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Layout\",\n    values: [\n      { 'Even': 'fixed' },\n      { 'Auto': 'auto' }\n    ],\n    default: \"fixed\",\n    order: 3,\n  },\n  minWidthForIndexColumns: {\n    section: 'Theme',\n    type: 'boolean',\n    label: \"Automatic column width on index\",\n    default: true,\n    order: 3.5\n  },\n  headerFontSize: {\n    section: 'Theme',\n    type: 'number',\n    display_size: 'half',\n    label: 'Header Size',\n    default: 12,\n    order: 4,\n  },\n  bodyFontSize: {\n    section: 'Theme',\n    type: 'number',\n    display_size: 'half',\n    label: 'Body Size',\n    default: 12,\n    order: 5,\n  },\n  showTooltip: {\n    section: 'Theme',\n    type: 'boolean',\n    display_size: 'half',\n    label: \"Show tooltip\",\n    default: true,\n    order: 6\n  },\n  showHighlight: {\n    section: 'Theme',\n    type: 'boolean',\n    display_size: 'half',\n    label: \"Show highlight\",\n    default: true,\n    order: 7\n  },\n\n  columnOrder: {},\n  \n  rowSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Row Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 1,\n  },\n  colSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Col Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 2,\n  },\n  sortRowSubtotalsBy: {\n    section: \"Table\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Sort Subtotals By\",\n    values: [\n      { 'Dimensions': 'dimension'},\n      { 'First Measure': 'measure'}\n    ],\n    default: 'dimension',\n    order: 2.5\n  },\n  spanRows: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Dims\",\n    display_size: 'half',\n    default: true,\n    order: 3,\n  },\n  spanCols: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Headers\",\n    display_size: 'half',\n    default: true,\n    order: 4,\n  },\n  calculateOthers: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Calculate Others Row\",\n    default: true,\n    order: 4.5\n  },\n  sortColumnsBy: {\n    section: \"Table\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Sort Columns By\",\n    values: [\n      { 'Pivots': 'pivots' },\n      { 'Measures': 'measures' }\n    ],\n    default: \"pivots\",\n    order: 6,\n  },\n  useViewName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Include View Name\",\n    default: false,\n    order: 7,\n  },\n  useHeadings: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Headings\",\n    default: false,\n    order: 8,\n  },\n  useShortName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Short Name (from model tags)\",\n    default: false,\n    order: 9,\n  },\n  useUnit: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Unit (when reporting in 000s)\",\n    default: false,\n    order: 9.5,\n  },\n  groupVarianceColumns: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Group Variance Columns\",\n    default: false,\n    order: 10,\n  },\n  genericLabelForSubtotals: {\n    section: 'Table',\n    type: 'boolean',\n    label: \"Label all subtotal rows as 'Subtotal'\",\n    default: false,\n    order: 11\n  },\n  indexColumn: {\n    section: \"Dimensions\",\n    type: \"boolean\",\n    label: \"Use Last Field Only\",\n    default: false,\n    order: 0,\n  },\n  transposeTable: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Transpose Table\",\n    default: false,\n    order: 100,\n  },\n}\n\nlet rowSortOrder = []\n\n/**\n * Represents an \"enriched data object\" with additional methods and properties for data vis\n * Takes the data, config and queryResponse objects as inputs to the constructor\n */\nclass VisPluginTableModel {\n  /**\n   * Build the LookerData object\n   * @constructor\n   * \n   * - TODO: add new column series\n   * - TODO: Get table column groups\n   * \n   * @param {*} lookerData \n   * @param {*} queryResponse \n   * @param {*} config \n   */\n  constructor(lookerData, queryResponse, config) {\n    rowSortOrder = []\n\n    this.visId = 'report_table'\n    this.config = config\n\n    this.headers = []\n    this.dimensions = []\n    this.measures = []\n    this.columns = []\n    this.data = []\n    this.subtotals_data = {}\n\n    this.transposed_headers = []\n    this.transposed_columns = []\n    this.transposed_data = []\n\n    this.pivot_fields = []\n    this.pivot_values = typeof queryResponse.pivots !== 'undefined' ? queryResponse.pivots : []\n    this.variances = []\n    this.column_series = []\n\n    this.firstVisibleDimension = ''\n\n    this.useIndexColumn = config.indexColumn || false\n    this.useHeadings = config.useHeadings || false\n    this.useShortName = config.useShortName || false\n    this.useViewName = config.useViewName || false\n    this.addRowSubtotals = config.rowSubtotals || false\n    this.addSubtotalDepth = parseInt(config.subtotalDepth)|| this.dimensions.length - 1\n    this.subtotalGroups = []\n    this.addColSubtotals = config.colSubtotals || false\n    this.spanRows = false || config.spanRows\n    this.spanCols = false || config.spanCols\n    this.useInitialRowSort = true\n    this.originalRowSorts = queryResponse.sorts\n    this.sortColsBy = config.sortColumnsBy || 'pivots' // matches to Column methods: pivots(), measures)\n    this.fieldLevel = 0 // set in addPivotsAndHeaders()\n    this.groupVarianceColumns = config.groupVarianceColumns || false\n    this.minWidthForIndexColumns = config.minWidthForIndexColumns || false\n    this.showTooltip = config.showTooltip || false\n    this.showHighlight = config.showHighlight || false\n    this.genericLabelForSubtotals = config.genericLabelForSubtotals || false\n\n    this.hasTotals = typeof queryResponse.totals_data !== 'undefined' ? true : false\n    this.calculateOthers = typeof queryResponse.truncated !== 'undefined' ? queryResponse.truncated && config.calculateOthers : false \n    this.hasSubtotals = typeof queryResponse.subtotals_data !== 'undefined' ? true : false\n    this.hasRowTotals = queryResponse.has_row_totals || false\n    this.hasPivots = typeof queryResponse.pivots !== 'undefined' ? true : false\n    this.hasSupers = typeof queryResponse.fields.supermeasure_like !== 'undefined' ? Boolean(queryResponse.fields.supermeasure_like.length) : false\n\n    this.transposeTable = config.transposeTable || false\n\n    var col_idx = 0\n    this.addPivotsAndHeaders(queryResponse)\n    this.addDimensions(queryResponse, col_idx)\n    this.addMeasures(queryResponse, col_idx)\n\n    this.checkVarianceCalculations()\n    if (this.useIndexColumn) { this.addIndexColumn(queryResponse) }\n    \n    this.addRows(lookerData)\n    this.addColumnSeries()\n\n    if (this.hasTotals) { this.buildTotals(queryResponse) }\n    if (this.addRowSubtotals) { \n      this.initialSort()\n      this.calculateSubtotalRows(queryResponse)\n      this.enrichSubtotalRows()\n      this.updateDataSortValues()\n      this.collapsibleSortData()\n    }\n    if (this.spanRows) { this.setRowSpans() }\n    if (this.addColSubtotals && this.pivot_fields.length === 2) { this.addColumnSubTotals() }\n    if (this.variances) { this.addVarianceColumns() }\n\n    this.sortColumns()\n    this.columns.forEach(column => column.setHeaderCellLabels())\n    if (this.spanCols) { this.setColSpans() }\n    this.applyFormatting()\n\n    if (this.transposeTable) { \n      this.transposeDimensionsIntoHeaders()\n      this.transposeRowsIntoColumns() \n      this.transposeColumnsIntoRows()\n    }\n\n    this.validateConfig()\n    this.getTableColumnGroups() \n  }\n\n  static getCoreConfigOptions() {\n    return tableModelCoreOptions\n  }\n\n  /**\n   * Hook to be called by a Looker custom vis, for example:\n   *    this.trigger('registerOptions', VisPluginTableModel.getConfigOptions())\n   * \n   * Returns a new config object, combining the core options with dynamic options based on available dimensions and measures\n   */\n  getConfigOptions() {\n    var newOptions = tableModelCoreOptions\n\n    var subtotal_options = []\n    this.dimensions.forEach((dimension, i) => {\n      newOptions['label|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: dimension.label,\n        default: dimension.label,\n        order: i * 10 + 1,\n      }\n\n      newOptions['heading|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: 'Heading',\n        default: '',\n        order: i * 10 + 2,\n      }\n\n      newOptions['hide|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'boolean',\n        label: 'Hide',\n        display_size: 'third',\n        default: false,\n        order: i * 10 + 3,\n      }\n\n      if (i < this.dimensions.length - 1) {\n        var subtotal_option = {}\n        subtotal_option[dimension.label] = (i + 1).toString()\n        subtotal_options.push(subtotal_option)\n      }\n    })\n\n    newOptions['subtotalDepth'] = {\n      section: \"Table\",\n      type: \"string\",\n      label: \"Sub Total Depth\",\n      display: 'select',\n      values: subtotal_options,\n      default: \"1\",\n      order: 5,\n    }\n\n    this.measures.forEach((measure, i) => {\n      newOptions['label|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: measure.label,\n        default: measure.label,\n        order: 100 + i * 10 + 1,\n      }\n\n      newOptions['heading|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Heading for ' + measure.label,\n        default: '',\n        order: 100 + i * 10 + 2,\n      }\n\n      newOptions['style|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Style',\n        display: 'select',\n        display_size: 'third',\n        values: [\n          {'Normal': 'normal'},\n          {'Black/Red': 'black_red'},\n          {'Subtotal': 'subtotal'},\n          {'Hidden': 'hide'}\n        ],\n        default: 'normal',\n        order: 100 + i * 10 + 3\n      }\n\n      newOptions['reportIn|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Report In',\n        display: 'select',\n        display_size: 'third',\n        values: [\n          {'Absolute Figures': '1'},\n          {'Thousands': '1000'},\n          {'Millions': '1000000'},\n          {'Billions': '1000000000'}\n        ],\n        default: '1',\n        order: 100 + i * 10 + 3.5\n      }\n\n      newOptions['unit|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Unit',\n        // display: 'select',\n        display_size: 'third',\n        default: '',\n        order: 100 + i * 10 + 3.7\n      }\n\n      var comparisonOptions = []\n      \n      if (measure.can_pivot) {\n        var pivotComparisons = []\n        this.pivot_fields.forEach((pivot_field, p) => {\n          if (this.pivot_fields.length === 1 || p === 1 || this.config.colSubtotals ) {\n            var option = {}\n            option['By ' + pivot_field.label] = pivot_field.name\n            pivotComparisons.push(option)\n          }\n        })\n        comparisonOptions = comparisonOptions.concat(pivotComparisons)\n      }\n\n      // measures, row totals and supermeasures\n      this.measures.forEach((comparisonMeasure, j) => {\n        var includeMeasure = measure.can_pivot === comparisonMeasure.can_pivot\n                              || \n                            this.hasRowTotals && !comparisonMeasure.is_table_calculation         \n        if (i != j && includeMeasure) {\n          var option = {}\n          option['Vs. ' + comparisonMeasure.label] = comparisonMeasure.name\n          comparisonOptions.push(option)\n        }\n      })\n      comparisonOptions.unshift({ '(none)': 'no_variance'})\n\n      newOptions['comparison|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Comparison',\n        display: 'select',\n        values: comparisonOptions,\n        default: 'no_variance',\n        order: 100 + i * 10 + 5\n      }\n\n      newOptions['switch|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Switch',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 6,\n      }\n\n      newOptions['var_num|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var #',\n        display_size: 'third',\n        default: true,\n        order: 100 + i * 10 + 7,\n      }\n\n      newOptions['var_pct|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var %',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 8,\n      }\n    })\n    return newOptions\n  }\n\n  /**\n   * - this.pivot_fields\n   * - this.headers\n   * @param {*} queryResponse \n   */\n  addPivotsAndHeaders(queryResponse) {\n    queryResponse.fields.pivots.forEach((pivot, i) => {\n      var pivot_field = new ModelPivot({ vis: this, queryResponseField: pivot })\n      this.pivot_fields.push(pivot_field)\n      this.headers.push({ type: 'pivot' + i, modelField: pivot_field })\n    })\n\n    var measureHeaders = this.useHeadings \n      ? [{ type: 'heading', modelField: { label: '(will be replaced by header for column)s' } }] \n      : []\n    \n    measureHeaders.push({ type: 'field', modelField: { label: '(will be replaced by field for column)' } })\n\n    if (this.sortColsBy === 'pivots') {\n      this.headers.push(...measureHeaders)\n    } else {\n      this.headers.unshift(...measureHeaders)\n    }\n\n    for (var i = 0; i < this.headers.length; i++) {\n      if (!this.headers[i] === 'field') {\n        this.fieldLevel = i\n        break\n      }\n    }\n  }\n\n  /**\n   * - this.dimensions\n   * - this.columns\n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addDimensions(queryResponse, col_idx) {\n    queryResponse.fields.dimension_like.forEach(dimension => {\n      var newDimension = new ModelDimension({\n        vis: this,\n        queryResponseField: dimension\n      })\n      newDimension.hide = this.useIndexColumn ? true : newDimension.hide\n      this.dimensions.push(newDimension)\n\n      var column = new Column(newDimension.name, this, newDimension) \n      column.idx = col_idx\n      column.sort.push(0)\n      this.headers.forEach(header => {\n        switch (header.type) {\n          case 'pivot0':\n          case 'pivot1':\n            var pivotField = new ModelPivot({ vis: this, queryResponseField: header.modelField })\n            var headerCell = new HeaderCell({ column: column, type: header.type, modelField: pivotField })\n            headerCell.label = '' // TODO: Decide how (if) it makes sense to add pivot labels at top of dimension columns\n            column.levels.push(headerCell)\n            column.sort.push(0)\n            break\n          case 'heading':\n            column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: newDimension }))\n            break\n          case 'field':\n            column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: newDimension }))\n            column.sort.push(col_idx)\n            break\n        }\n      })\n\n      this.columns.push(column)\n      col_idx += 10\n    })\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dimension = this.dimensions[i]\n      if (!dimension.hide) {\n        this.firstVisibleDimension = dimension.name\n        break\n      }\n    }\n  }\n\n  /**\n   * Registers measures with the VisPluginTableModel\n   * - this.measures\n   * - this.columns\n   * \n   * Uses this.applyVisToolsTags() to enrich column information\n   * \n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addMeasures(queryResponse, col_idx) {\n    // add measures, list of ids\n    queryResponse.fields.measure_like.forEach(measure => {\n      var newMeasure = new ModelMeasure({\n        vis: this,\n        queryResponseField: measure,\n        can_pivot: true\n      })\n\n      var reportInSetting = this.config['reportIn|' + measure.name]\n      var unitSetting = this.config['unit|' + measure.name]\n      if (typeof reportInSetting !== 'undefined'  && reportInSetting !== '1') {\n        newMeasure.value_format = '#,##0'\n        if (typeof unitSetting !== 'undefined' && unitSetting !== '') {\n           newMeasure.unit = unitSetting\n        }\n      }\n      this.measures.push(newMeasure) \n    })\n    \n    // add measures, list of full objects\n    if (this.hasPivots) {\n      this.pivot_values.forEach(pivot_value => {\n        var isRowTotal = pivot_value.key === '$$$_row_total_$$$'\n        this.measures.forEach((measure, m) => {\n          // for pivoted measures, skip table calcs for row totals \n          // if user wants a row total of a table calc, it must be defined as another table calc (in which case, it will be a supermeasure)\n          var include_measure = !isRowTotal || ( isRowTotal && !measure.is_table_calculation )\n          \n          if (include_measure) {\n            var column = new Column([pivot_value.key, measure.name].join('.'), this, measure)\n            column.pivoted = isRowTotal ? false : true\n            column.isRowTotal = isRowTotal\n            column.pivot_key = pivot_value.key\n            column.idx = col_idx\n            column.sort.push(isRowTotal ? 2 : 1)\n\n            var level_sort_values = []\n            this.headers.forEach(header => {\n              switch (header.type) {\n                case 'pivot0':\n                case 'pivot1':\n                  var label = isRowTotal ? '' : pivot_value.data[header.modelField.name]\n                  if (isRowTotal && header.type.startsWith('pivot') && header.type === 'pivot' + (this.pivot_fields.length - 1)) {\n                    label = 'Row Total'\n                  }\n                  column.levels.push(new HeaderCell({ \n                    column: column, \n                    type: header.type, \n                    modelField: { label: label },\n                    pivotData: pivot_value\n                  }))\n                  level_sort_values.push(pivot_value.sort_values[header.modelField.name])\n                  if (column.pivoted) {\n                    column.sort.push(pivot_value.sort_values[header.modelField.name])\n                  } else {\n                    column.sort.push(0)\n                  }\n                  break\n\n                case 'heading':\n                  column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: measure}))\n                  break\n\n                case 'field':\n                  column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: measure}))\n                  column.sort.push(m)\n                  break;\n              }\n            })\n\n            this.columns.push(column)\n            col_idx += 10\n          }\n        })\n      })\n    } else {\n      // noticeably simpler for flat tables!\n      this.measures.forEach(measure => {\n        var column = new Column(measure.name, this, measure)\n        column.sort.push(1)\n        column.idx = col_idx\n\n        try {\n          if (typeof this.config.columnOrder[column.id] !== 'undefined') {\n            column.pos = this.config.columnOrder[column.id]\n          } else {\n            column.pos = col_idx\n          }\n        }\n        catch {\n          column.pos = col_idx\n        }\n\n        this.headers.forEach(header => {\n          switch (header.type) {\n            case 'heading':\n              column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: measure}))\n              break\n\n            case 'field':\n              column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: measure}))\n              column.sort.push(column.pos)\n              break;\n          }\n        })\n\n        this.columns.push(column)\n        col_idx += 10\n      })\n    }\n    \n    // add supermeasures, if present\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      queryResponse.fields.supermeasure_like.forEach(supermeasure => {\n        var meas = new ModelMeasure({\n          vis: this,\n          queryResponseField: supermeasure,\n          can_pivot: false,\n        })\n        var reportInSetting = this.config['reportIn|' + supermeasure.name]\n        var unitSetting = this.config['unit|' + supermeasure.name]\n        if (typeof reportInSetting !== 'undefined'  && reportInSetting !== '1') {\n          meas.value_format = '#,##0'\n          if (typeof unitSetting !== 'undefined' && unitSetting !== '') {\n            meas.unit = unitSetting\n          }\n        }\n        this.measures.push(meas) \n\n        var column = new Column(meas.name, this, meas)\n        column.sort.push(2)\n        this.headers.forEach(header => {\n          switch (header.type) {\n            case 'pivot0':\n            case 'pivot1':\n              column.levels.push(new HeaderCell({ column: column, type: header.type, modelField: { label: '' } }))\n              column.sort.push(1)\n              break\n            case 'heading':\n              column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: meas }))\n              break\n            case 'field':\n              column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: meas }))\n              column.sort.push(col_idx)\n              break\n          }\n        })\n        column.idx = col_idx\n        column.super = true\n\n        this.columns.push(column)\n        col_idx += 10\n      })\n    }\n  }\n\n   /**\n   * Update the VisPluginTableModel instace\n   * - this.variances\n   * \n   *  option is either 'no_variance' or a measure.name\n   */\n  checkVarianceCalculations() {\n    Object.keys(this.config).forEach(option => {\n      if (option.startsWith('comparison')) {\n        var baseline = option.split('|')[1]\n        var comparison = this.config[option]\n\n        var baseline_in_measures = false\n        this.measures.forEach(measure => {\n          if (baseline === measure.name) {\n            baseline_in_measures = true\n          }\n        })\n\n        var comparison_available = false\n\n        var comparison_options = [...this.measures.map(measure => measure.name), ...this.pivot_fields.map(pivot_field => pivot_field.name)]\n        comparison_options.forEach(comparitor => {\n          if (comparison === comparitor) {\n            comparison_available = true\n          }\n        })\n\n        if (baseline_in_measures && comparison_available) {\n          if (this.pivot_fields.map(pivot_field => pivot_field.name).includes(this.config[option])) {\n            var type = 'by_pivot'\n          } else {\n            var type = this.config[option] === 'no_variance' ? 'no_variance' : 'vs_measure'\n          }\n  \n          if (typeof this.config['switch|' + baseline] !== 'undefined') {\n            if (this.config['switch|' + baseline]) {\n              var reverse = true\n            } else {\n              var reverse = false\n            }\n          }\n  \n          this.variances.push({\n            baseline: baseline,\n            comparison: this.config[option],\n            type: type,\n            reverse: reverse\n          })\n        } else if (baseline_in_measures) {\n          this.config[option] = 'no_variance'\n        } else {\n          delete this.config[option]\n        }\n      }\n    })\n  }\n\n  /**\n   * Creates the index column, a \"for display only\" column when the set of dimensions is reduced to\n   * a single column for reporting purposes.\n   */\n  addIndexColumn() {\n    var dimension = this.dimensions[this.dimensions.length - 1]\n    var dim_config_setting = this.config['hide|' + dimension.name]\n    var column = new Column('$$$_index_$$$', this, dimension)\n    column.sort.push(-1)\n    column.hide = dim_config_setting === true ? dim_config_setting : false\n\n    this.headers.forEach(header => {\n      switch (header.type) {\n        case 'pivot0':\n        case 'pivot1':\n          var pivotField = new ModelPivot({ vis: this, queryResponseField: header.modelField })\n          var headerCell = new HeaderCell({ column: column, type: header.type, modelField: pivotField })\n          headerCell.label = ''  // TODO: Decide how (if) it makes sense to add pivot labels at top of dimension columns\n          column.levels.push(headerCell)\n          column.sort.push(0)\n          break\n        case 'heading':\n          column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: dimension }))\n          break\n        case 'field':\n          column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: dimension }))\n          column.sort.push(0)\n          break\n      }\n    })\n    \n    this.columns.push(column)\n  }\n\n  /**\n   * Populates this.data with Rows of data\n   * @param {*} lookerData \n   */\n  addRows(lookerData) {\n    lookerData.forEach((lookerRow, i) => {\n      var row = new Row('line_item')\n      row.id = this.dimensions.map(dimension => lookerRow[dimension.name].value).join('|')\n      row.originalRow = i\n\n      this.columns.forEach(column => {\n        var cellValue = (column.pivoted || column.isRowTotal)? lookerRow[column.modelField.name][column.pivot_key] : lookerRow[column.id]\n        var cell = new DataCell({ \n          ...cellValue, \n          ...{ \n            cell_style: [column.modelField.type], \n            colid: column.id, \n            rowid: row.id } \n        })\n\n        if (column.modelField.is_numeric) {\n          cell.cell_style.push('numeric')\n          cell.align = 'right'\n        } else {\n          cell.cell_style.push('nonNumeric')\n          cell.align = 'left'\n        }\n\n        if (typeof column.modelField.style !== 'undefined') {\n          cell.cell_style = cell.cell_style.concat(column.modelField.style)\n        }\n\n        var reportInSetting = this.config['reportIn|' + column.modelField.name]\n        if (typeof reportInSetting !== 'undefined'  && reportInSetting !== '1') {\n          var unit = this.config.useUnit && column.modelField.unit !== '#'  ? column.modelField.unit : ''\n          cell.html = null\n          cell.value = Math.round(cell.value / parseInt(reportInSetting))\n          cell.rendered = column.modelField.value_format === '' ? cell.value.toString() : unit + SSF.format(column.modelField.value_format, cell.value)\n        }\n\n        if (column.modelField.is_turtle) {\n          var cell_series = new CellSeries({\n            column: column,\n            row: row,\n            sort_value: cell.sort_value,\n            series: {\n              keys: row.data[column.id]._parsed.keys,\n              values: row.data[column.id]._parsed.values\n            }\n          })\n          cell.value = cell_series\n          cell.rendered = cell_series.toString()\n        }\n\n        row.data[column.id] = cell\n      })\n\n      if (this.useIndexColumn) {\n        var last_dim = this.dimensions[this.dimensions.length - 1].name\n        var sourceCell = row.data[last_dim]\n\n        row.data['$$$_index_$$$'] = new DataCell({\n          value: sourceCell.value,\n          rendered: sourceCell.rendered,\n          html: sourceCell.html,\n          cell_style: ['singleIndex', 'dimension'],\n          align: this.dimensions[this.dimensions.length - 1].is_numeric ? 'right' : 'left',\n          colid: '$$$_index_$$$',\n          rowid: sourceCell.rowid\n        })\n      }\n\n      row.sort = [0, 0, i]\n      this.data.push(row)\n    })\n  }\n\n  /**\n   * Generate data series to support transposition\n   */\n  addColumnSeries() {\n    this.columns.forEach(column => {\n      var keys = []\n      var values = []\n      var types = []\n\n      this.data.forEach(row => {\n        keys.push(row.id)\n        values.push(row.data[column.id].value)\n        types.push(row.type)\n      })\n\n      var new_series = new ColumnSeries({\n        column: column,\n        is_numeric: column.modelField.is_numeric,\n        series: {\n          keys: keys,\n          values: values,\n          types: types\n        }\n      })\n      \n      column.series = new_series\n      this.column_series.push(new_series)\n    })\n  }\n\n  buildTotals(queryResponse) {\n    var totals_ = queryResponse.totals_data\n    var totalsRow = new Row('total')\n\n    this.columns.forEach(column => {\n      totalsRow.id = 'Total'\n\n      if (column.modelField.type === 'dimension') {\n        if ([this.firstVisibleDimension, '$$$_index_$$$'].includes(column.id)) {\n          var rowspan = 1\n          var colspan = this.useIndexColumn ? 1 : this.dimensions.filter(d => !d.hide).length\n        } else {\n          var rowspan = -1\n          var colspan = -1\n        }\n        totalsRow.data[column.id] = new DataCell({ \n          value: '', \n          cell_style: ['total', 'dimension'],\n          rowspan: rowspan, \n          colspan: colspan,\n          colid: column.id,\n          align: column.modelField.is_numeric ? 'right' : 'left',\n          rowid: 'Total' \n        })\n      } else {\n        var rowspan = 1\n        var colspan = 1\n      }\n      \n      \n      if (column.modelField.type === 'measure') {\n        var cell_style = column.modelField.is_numeric ? ['total', 'numeric', 'measure'] : ['total', 'nonNumeric', 'measure']\n        var cellValue = (column.pivoted || column.isRowTotal) ? totals_[column.modelField.name][column.pivot_key] : totals_[column.id]\n\n        cellValue = new DataCell({ \n          ...cellValue, \n          ...{ \n            cell_style: cell_style,\n            rowspan: rowspan, \n            colspan: colspan, \n            colid: column.id, \n            align: column.modelField.is_numeric ? 'right' : 'left',\n            rowid: 'Total'} \n        })\n\n        if (typeof cellValue.rendered === 'undefined' && typeof cellValue.html !== 'undefined' ) { // totals data may include html but not rendered value\n          cellValue.rendered = this.getRenderedFromHtml(cellValue)\n        }\n\n        var reportInSetting = this.config['reportIn|' + column.modelField.name]\n        if (typeof reportInSetting !== 'undefined'  && reportInSetting !== '1') {\n          var unit = this.config.useUnit && column.modelField.unit !== '#'  ? column.modelField.unit : ''\n          cellValue.html = undefined\n          cellValue.value = Math.round(cellValue.value / parseInt(reportInSetting))\n          cellValue.rendered = column.modelField.value_format === '' ? cellValue.value.toString() : unit + SSF.format(column.modelField.value_format, cellValue.value)\n        }\n        \n        totalsRow.data[column.id] = cellValue\n        if (typeof totalsRow.data[column.id].links !== 'undefined') {\n          totalsRow.data[column.id].links.forEach(link => {\n            link.type = \"measure_default\"\n          })\n        }       \n      }\n    })\n\n    if (this.useIndexColumn) {\n      totalsRow.data['$$$_index_$$$'].value = 'TOTAL'\n      totalsRow.data['$$$_index_$$$'].align = 'left'\n      totalsRow.data['$$$_index_$$$'].colspan = this.dimensions.filter(d => !d.hide).length\n    } else {\n      if (this.firstVisibleDimension) {\n        totalsRow.data[this.firstVisibleDimension].value = 'TOTAL'\n        totalsRow.data[this.firstVisibleDimension].align = 'left'\n      }\n    }\n    totalsRow.sort = [1, 0, 0]\n    totalsRow.originalRow = Number.POSITIVE_INFINITY\n    this.data.push(totalsRow)\n\n    // Including an Others row: note the huge assumption in calculating a very simple average!\n    // This will prevent a data gap distracting users, and may indicate whether the Others data\n    // is \"higher or lower\" than the top x items. But it is not an accurate number.\n    if (this.calculateOthers) {\n      var othersRow = new Row('line_item')\n      othersRow.id = 'Others'\n      this.columns.forEach(column => {\n        var othersValue = null\n        var othersStyle = column.modelField.is_numeric ? ['numeric'] : ['nonNumeric']\n        var totalValue = totalsRow.data[column.id]\n        \n        if (column.modelField.type === 'measure') {\n          if (othersValue = ['sum', 'count'].includes(column.modelField.calculation_type)) {\n            othersValue = totalValue.value - column.series.series.sum\n            othersStyle.push('measure')\n          } else {\n            othersValue = (totalValue.value + column.series.series.avg) / 2\n            othersStyle = othersStyle.concat(['estimate', 'measure'])\n            if (['count', 'count_distinct'].includes(column.modelField.calculation_type)) {\n              othersValue = Math.round(othersValue)\n            }\n          }\n        } else {\n          othersStyle.push('dimension')\n        }\n\n        if (othersValue) {\n          var formatted_value = column.modelField.value_format === '' \n                ? othersValue.toString() \n                : SSF.format(column.modelField.value_format, othersValue)\n          othersRow.data[column.id] = new DataCell({ \n            value: othersValue, \n            rendered: formatted_value, \n            cell_style: othersStyle,\n            align: column.modelField.is_numeric ? 'right' : 'left',\n            colid: column.id,\n            rowid: 'Others'\n          })\n        } else {\n          othersRow.data[column.id] = new DataCell({ \n            rendered: '',\n            cell_style: othersStyle, \n            colid: column.id, \n            rowid: 'Others'\n          })\n        }\n      })\n\n      if (this.useIndexColumn) {\n        othersRow.data['$$$_index_$$$'].value = 'Others'\n        othersRow.data['$$$_index_$$$'].rendered = 'Others'\n        othersRow.data['$$$_index_$$$'].align = 'left'\n        othersRow.data['$$$_index_$$$'].cell_style.push('singleIndex')\n      } else {\n        if (this.firstVisibleDimension) {\n          othersRow.data[this.firstVisibleDimension].value = 'Others'\n          othersRow.data[this.firstVisibleDimension].rendered = 'Others'\n          othersRow.data[this.firstVisibleDimension].align = 'left'\n        }\n      }\n      othersRow.sort = [1, -1, -1] \n      othersRow.originalRow = 999999\n      this.data.push(othersRow)\n    }\n    \n    this.sortData()\n  }\n\n    /**\n   * Updates the values used for sorting rows\n   * \n   * Sort factors: \n   *    section (total, subtotal group, line item)\n   *    field list\n   *    original order\n   *\n   */\n  updateCollapsibleSortValues () {\n    console.log('updateCollapsibleSortValues() rowSortOrder:', rowSortOrder)\n\n    this.data.forEach(row => {\n      row.collapsibleSort = []\n      rowSortOrder.forEach(sort => {\n        switch (sort.type) {\n          case 'dimension':\n          case 'measure':\n            row.collapsibleSort.push(row.data[sort.name].value)\n            break\n          case 'total':\n            row.collapsibleSort.push(row.type === 'total' ? Number.POSITIVE_INFINITY : 0)\n            break\n          case 'originalRow':\n            row.collapsibleSort.push(row.originalRow)\n            break\n        }\n      })\n    })\n  }\n\n  compareCollapsibleSortArrays (a, b) {\n    var depth = Math.max(a.collapsibleSort.length, b.collapsibleSort.length)\n    for(var i = 0; i < depth; i++) {\n        var a_value = typeof a.collapsibleSort[i] !== 'undefined' ? a.collapsibleSort[i] : 0\n        var b_value = typeof b.collapsibleSort[i] !== 'undefined' ? b.collapsibleSort[i] : 0\n        if (rowSortOrder[i].desc === false) {\n          if (a_value > b_value) { return 1 }\n          if (a_value < b_value) { return -1 }\n        } else {\n          if (a_value < b_value) { return 1 }\n          if (a_value > b_value) { return -1 } \n        }\n    }\n    return -1\n  }\n\n  collapsibleSortData () {\n    this.data.sort(this.compareCollapsibleSortArrays)\n    if (this.spanRows) { this.setRowSpans() }\n  }\n\n  /**\n   * Sorts data rows to ensure subtotal groupings are correct\n   * Creates Rows for each subtotal group\n   * Adds children (subtotals and line_items) to each Row\n   */\n  initialSort() {\n    this.originalRowSorts.forEach(sort => {\n      if (this.measures.map(measure => measure.name).includes(sort.name)) {\n        sort.type = 'measure'\n      } else {\n        sort.type = 'dimension'\n      }\n    })\n\n    let subtotalSorts = []\n    for (let i = 0; i < this.dimensions.length - 1; i++) {\n      subtotalSorts.push({\n        type: 'dimension',\n        name: this.dimensions[i].name,\n        desc: false\n      })\n    }\n\n    rowSortOrder = [\n      {\n        type: 'total',\n        name: 'total',\n        desc: false\n      },\n      ...subtotalSorts,\n      {\n        type: 'originalRow',\n        name: 'originalRow',\n        desc: false\n      }\n    ]\n    \n    this.updateCollapsibleSortValues()\n    this.collapsibleSortData()\n\n    // BUILD STRUCTURE OF ALL SUBTOTALS\n    this.subtotalGroups = {}\n    let latestGroups = [...subtotalSorts.map(sub => [])]\n    this.data.forEach(row => {\n      subtotalSorts.forEach((subDimension, depth) => {\n        if (row.type !== 'total') {\n          let group = []\n          for (let g = 0; g < depth + 1; g++) {\n            group.push(row.data[subtotalSorts[g].name].value)\n          }\n          let subtotalId = ['CollapsibleSubtotal', ...group].join('|')\n          if (subtotalId !== latestGroups[depth].id) {\n            let visSubtotal = new Row('subtotal')\n            visSubtotal.id = subtotalId\n            visSubtotal.depth = depth\n            visSubtotal.children = []\n            this.data.push(visSubtotal)\n\n            let newSubtotalGroup = {\n              depth: depth,\n              id: subtotalId,\n              values: group,\n              row: visSubtotal \n            }\n            this.subtotalGroups[subtotalId] = newSubtotalGroup\n            latestGroups[depth] = newSubtotalGroup\n            if (depth > 0) {\n              latestGroups[depth - 1].row.children.push(visSubtotal)\n            }\n          }\n        }\n      })\n      if (row.type !== 'total') {\n        latestGroups[subtotalSorts.length - 1].row.children.push(row)\n      }\n    })\n  }\n\n  /**\n   * calculates subtotal Rows with aggregated data\n   * uses subtotals_data from queryResponse\n   * checks for missing data (either because subtotals weren't available in queryResponse at all, or inidivudal missing rows)\n   *   - calculated subtotals where missing\n   */\n  calculateSubtotalRows(queryResponse) {\n    let subtotalSorts = rowSortOrder.filter(sort => sort.type === 'dimension')\n    if (typeof queryResponse.subtotals_data !== 'undefined') {\n      for (const [key, subtotals_array] of Object.entries(queryResponse.subtotals_data)) {\n        subtotals_array.forEach(subtotals_entry => {\n          let group = []\n          subtotalSorts.forEach(dimension => {\n            if (!(subtotals_entry[dimension.name].value === null && subtotals_entry[dimension.name].filterable_value === \"EMPTY\")) {\n              group.push(subtotals_entry[dimension.name].value)\n            }\n          })\n          let groupId = ['CollapsibleSubtotal', ...group].join('|')\n          for (const [field, cell] of Object.entries(subtotals_entry)) {\n            this.subtotalGroups[groupId].row.data[field] = new DataCell({\n              ...cell,\n              ...{ cell_style: [\"total\", \"subtotal\"] }\n            })\n          }\n        })\n      }\n    }\n\n    for (const [key, subtotalGroup] of Object.entries(this.subtotalGroups)) {\n      let missingGroups = []\n      if (typeof subtotalGroup.row.data.$$$__grouping__$$$ === 'undefined') {\n        console.log('subtotalGroup missing in queryResponse.subtotals_data:', key)\n        missingGroups.push(subtotalGroup)\n      }\n\n      missingGroups.forEach(missingGroup => {\n        this.dimensions.forEach((dimension, i) => {\n          if (typeof missingGroup.values[i] !== 'undefined') {\n            missingGroup.row.data[dimension.name] = new DataCell({ \n              value: missingGroup.values[i],\n              cell_style: [\"total\", \"subtotal\"]\n            })\n          } else {\n            missingGroup.row.data[dimension.name] = new DataCell({\n              value: null,\n              rendered: \"\",\n              filterable_value: \"EMPTY\",\n              cell_style: [\"total\", \"subtotal\"]\n            })\n          }\n        })\n\n        this.columns.filter(column => column.modelField.type === 'measure').forEach(column => {\n          var subtotal_value = 0\n          var subtotal_items = 0\n          var rendered = ''\n\n          this.data.forEach(row => {\n            if (row.type === 'line_item') {\n              let match = true\n              missingGroup.values.forEach((value, i) => {\n                if (row.data[subtotalSorts[i].name].value !== value) {\n                  match = false\n                }\n              })\n              if (match) {\n                let value = row.data[column.id].value\n                if (Number.isFinite(value)) {\n                  subtotal_value += value\n                  subtotal_items++\n                }\n              }\n            }\n          })\n\n          if (column.modelField.calculation_type === 'average' && subtotal_items > 0) {\n            subtotal_value = subtotal_value / subtotal_items\n          }\n          if (subtotal_value) {\n            var unit = this.config.useUnit && column.modelField.unit !== '#'  ? column.modelField.unit : ''\n            rendered = column.modelField.value_format === '' ? subtotal_value.toString() : unit + SSF.format(column.modelField.value_format, subtotal_value)\n          }\n          if (column.modelField.calculation_type === 'string') {\n            subtotal_value = ''\n            rendered = ''\n          } \n\n          var cell = new DataCell({\n            value: subtotal_value,\n            rendered: rendered,\n            cell_style: [\"total\", \"subtotal\"]\n          })\n          missingGroup.row.data[column.id] = cell          \n        })\n      })\n    }\n    this.hasSubtotals = true\n    console.log('enrichSubtotalRows() final this', this)\n  }\n\n  enrichSubtotalRows () {\n    for (const [key, subtotalGroup] of Object.entries(this.subtotalGroups)) {\n      subtotalGroup.row.data['$$$_index_$$$'] = new DataCell({})\n      this.columns.forEach(column => {\n        // console.log('column:', column.id, 'subtotalGroup column:', subtotalGroup.row.data[column.id] )\n        let cell = subtotalGroup.row.data[column.id]\n        cell.colid = column.id\n        cell.rowid = subtotalGroup.id\n        cell.id = [cell.colid, cell.rowid].join('|')\n\n        if (column.modelField.type === 'dimension') {\n          if ([this.firstVisibleDimension, '$$$_index_$$$'].includes(column.id)) {\n            cell.rowspan = 1\n            cell.colspan = this.useIndexColumn ? 1 : this.dimensions.filter(d => !d.hide).length\n          } else {\n            cell.rowspan = -1\n            cell.colspan = -1\n          }\n\n          if (column.modelField.is_numeric) {\n            cell.align = 'right'\n            cell.cell_style = cell.cell_style.concat(['numeric', 'dimension'])\n          } else {\n            cell.align = 'left'\n            cell.cell_style = cell.cell_style.concat(['nonNumeric', 'dimension'])\n          }\n          \n          if (column.id === '$$$_index_$$$' || column.id === this.firstVisibleDimension ) {\n            if (this.genericLabelForSubtotals) {\n              cell.value = 'Subtotal'\n              cell.rendered = 'Subtotal'\n            } else {\n              cell.value = subtotalGroup.values.join(' | ') ? subtotalGroup.values.join(' | ') : 'Others'\n              cell.rendered = cell.value\n            }\n          }\n        }\n\n        if (column.modelField.type === 'measure') {\n          if (column.modelField.is_numeric) {\n            cell.align = 'right'\n            cell.cell_style = cell.cell_style.concat(['numeric', 'measure'])\n          } else {\n            cell.align = 'left'\n            cell.cell_style = cell.cell_style.concat(['nonNumeric', 'measure'])\n          }\n        }\n      })\n    }\n  }\n \n  /**\n   * sets new sort values \n   *   total\n   *   subtotal\n   *     field: all subtotal dimensions. value exists or is infinite\n   *     field: primary measure per subtotal dimensions\n   *   row level sorts\n   *   original row\n   */\n  updateDataSortValues () {\n    let subtotalSorts = []\n    for (let i = 0; i < this.dimensions.length - 1; i++) {\n      subtotalSorts.push({\n        type: this.config.sortRowSubtotalsBy === 'dimension' ? 'subtotalDimension' : 'subtotalMeasure',\n        depth: i,\n        name: this.dimensions[i].name,\n        desc: false\n      })\n    }\n\n    rowSortOrder = [\n      {\n        type: 'total',\n        name: 'total',\n        desc: false\n      },\n      ...subtotalSorts,\n      {\n        type: 'subtotalLast',\n        name: 'subtotalLast',\n        desc: false,\n      },\n      ...this.originalRowSorts,\n      {\n        type: 'originalRow',\n        name: 'originalRow',\n        desc: false\n      }\n    ]\n    console.log('updateDataSortValues() rowSortOrder:', rowSortOrder)\n\n    this.data.forEach(row => {\n      row.collapsibleSort = []\n      rowSortOrder.forEach(sort => {\n        switch (sort.type) {\n          case 'total':\n            row.collapsibleSort.push(row.type === 'total' ? 1 : 0)\n            break\n          case 'subtotalDimension':\n          case 'subtotalMeasure':\n            if (row.type === 'subtotal') {\n              let value = this.subtotalGroups[row.id].values[sort.depth]\n              if (typeof value === 'undefined') {\n                row.collapsibleSort.push('ZZZZZZZZZ')\n              } else {\n                row.collapsibleSort.push(value)\n              }\n            } else {\n              row.collapsibleSort.push(row.data[sort.name].value)\n            }\n            break\n          case 'subtotalLast':\n            row.collapsibleSort.push(row.type === 'subtotal' ? 1 : 0)\n            break\n          case 'dimension':\n          case 'measure':\n            row.collapsibleSort.push(row.data[sort.name].value)\n            break\n          case 'originalRow':\n            row.collapsibleSort.push(row.originalRow)\n            break\n        }\n      })\n    })\n  }\n\n  /**\n   * 1. Build list of leaves\n   * 2. Build list of tiers (and initialise span_tracker)\n   * 3. Backwards <--- leaves\n   *    4. Check for resets (n/a for colspans)\n   *    5. Forwards ---> tiers\n   *        6. Match: mark invisible (span_value = -1). Increment the span_tracker.\n   *        7. Diff: set span_value from span_tracker. Partial reset and continue.\n   */\n  setRowSpans () {\n    var leaves = []\n    var tiers = []\n    var span_tracker = {}\n\n    // 1)\n    leaves = this.data\n\n    // 2)\n    tiers = this.dimensions.filter(d => !d.hide)\n    tiers.forEach(tier => {\n      span_tracker[tier.name] = 1\n    })\n\n    // Loop backwards through leaves\n    for (var l = leaves.length - 1; l >= 0 ; l--) {\n      var leaf = leaves[l]\n\n      // Totals/subtotals rows: full reset and continue\n      if (leaf.type !== 'line_item' ) {\n        tiers.forEach(tier => {\n          span_tracker[tier.name] = 1\n        })\n        continue;\n      }\n\n      // Loop fowards through the tiers\n      for (var t = 0; t < tiers.length; t++) {\n        var tier = tiers[t]\n        var this_tier_value = leaf.data[tier.name].value\n        var neighbour_value = l > 0 ? leaves[l - 1].data[tier.name].value : null\n\n        // Match: mark invisible (span_value = -1). Increment the span_tracker.\n        if (l > 0 && this_tier_value === neighbour_value) {\n          leaf.data[tier.name].rowspan = -1\n          leaf.data[tier.name].colspan = -1\n          span_tracker[tier.name] += 1\n        } else {\n        // Different: set span_value from span_tracker. Partial reset and continue\n          for (var t_ = t; t_ < tiers.length; t_++) {\n            var tier_ = tiers[t_]\n            leaf.data[tier_.name].rowspan = span_tracker[tier_.name]\n            if (leaf.data[tier_.name].rowspan > 1) {\n              leaf.data[tier_.name].cell_style.push('merged')\n            }\n            span_tracker[tier_.name] = 1\n          }\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * Generates new column subtotals, where 2 pivot levels have been used\n   * // TODO: Could also have subtotals for 1 pivot tables sorted by measure\n   * \n   * 1. Derive the new column definitions\n   * 2. Use the new definitions to add subtotal columns to table.columns\n   * 3. Calculate the column subtotal values\n   */\n  addColumnSubTotals () {\n    var subtotalColumns = []\n\n    // Get a list of unique top-level pivot values in the pivot_values object\n    var pivots = []\n    var pivot_dimension = this.pivot_fields[0].name\n    this.pivot_values.forEach(pivot_value => {\n      var p_value = pivot_value['data'][pivot_dimension]\n      if (p_value !== null) { pivots.push(p_value) }\n    })\n    pivots = [...new Set(pivots)]\n\n\n    // DERIVE THE NEW COLUMN DEFINITIONS\n    pivots.forEach(pivot => {\n      this.measures.forEach((measure, m) => {\n        if (measure.can_pivot) {\n          var subtotalColumn = new Column(['$$$_subtotal_$$$', pivot, measure.name].join('.'), this, measure)\n          subtotalColumn.pivoted = true\n          subtotalColumn.subtotal = true\n          subtotalColumn.pivot_key = [pivot, '$$$_subtotal_$$$'].join('|')\n          subtotalColumn.subtotal_data = {\n            pivot: pivot,\n            measure_idx: m,\n            columns: [],\n          }\n  \n          this.columns.forEach((column, i) => {  \n            var columnPivotValue = null\n            for (var i = 0; i < column.levels.length; i++) {\n              if (column.levels[i].type.startsWith('pivot')) {\n                columnPivotValue = column.levels[i].modelField.label\n                break\n              }\n            }\n\n            if (column.pivoted && columnPivotValue === pivot) {\n              if (column.modelField.name === measure.name) {\n                subtotalColumn.subtotal_data.columns.push(column)\n              }\n            }\n          })\n          subtotalColumns.push(subtotalColumn)\n        }\n      })\n    })\n\n    // USE THE NEW DEFINITIONS TO ADD SUBTOTAL COLUMNS TO TABLE.COLUMNS\n    subtotalColumns.forEach((subtotalColumn, s) => {\n      subtotalColumn.sort.push(1)\n\n      this.headers.forEach((header, i) => {\n        switch (header.type) {\n          case 'pivot0':\n            var sort_value_from_column = subtotalColumn.subtotal_data.columns[0].levels[i].pivotData.sort_values[header.modelField.name]\n            subtotalColumn.levels.push(new HeaderCell({ \n              column: subtotalColumn, \n              type: header.type, \n              modelField: {\n                name: this.pivot_fields[0].name,\n                label: subtotalColumn.subtotal_data.pivot,\n              }\n            }))\n            subtotalColumn.sort.push(sort_value_from_column)\n            break\n\n          case 'pivot1':\n            subtotalColumn.levels.push(new HeaderCell({ column: subtotalColumn, type: header.type, modelField: {\n              name: 'subtotal',\n              label: 'Subtotal',\n            }}))\n            var subtotalSortValue = typeof this.pivot_values[0].sort_values[header.modelField.name] === 'string' ? 'ZZZZ' : 99999999\n            subtotalColumn.sort.push(subtotalSortValue)\n            break\n\n          case 'heading':\n            subtotalColumn.levels.push(new HeaderCell({ column: subtotalColumn, type: 'heading', modelField: subtotalColumn.modelField}))\n            break\n\n          case 'field':\n            subtotalColumn.levels.push(new HeaderCell({ column: subtotalColumn, type: 'field', modelField: subtotalColumn.modelField}))\n            subtotalColumn.sort.push(subtotalColumn.subtotal_data.measure_idx)\n            break\n        }\n      })\n      this.columns.push(subtotalColumn)\n    })\n\n    // CALCULATE COLUMN SUB TOTAL VALUES\n    this.data.forEach(row => {\n      subtotalColumns.forEach(subtotalColumn => {\n        var cell_style = subtotalColumn.modelField.is_numeric ? ['subtotal', 'numeric', 'measure'] : ['subtotal', 'nonNumeric', 'measure']\n        var subtotal_value = 0\n        subtotalColumn.subtotal_data.columns.forEach(column => { // subtotalColumn.columns i.e. the individual columns that are aggregated into a single subtotal columns\n          subtotal_value += row.data[column.id].value\n        })\n        row.data[subtotalColumn.id] = new DataCell({\n          value: subtotal_value,\n          rendered: subtotalColumn.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(subtotalColumn.modelField.value_format, subtotal_value),\n          cell_style: cell_style,\n          colid: subtotalColumn.id,\n          rowid: row.id\n        })\n        if (['subtotal', 'total'].includes(row.type)) { \n          row.data[subtotalColumn.id].cell_style.push('total') \n        }\n      })\n    })\n\n    // return subtotals\n  }\n\n  /**\n   * Variance calculation function to enable addVariance()\n   * @param {*} value_format \n   * @param {*} id \n   * @param {*} calc \n   * @param {*} baseline \n   * @param {*} comparison \n   */\n  calculateVariance (value_format, id, calc, baseline, comparison) {\n    this.data.forEach(row => {\n      var baseline_value = row.data[baseline.id].value\n      var comparison_value = row.data[comparison.id].value\n      if (calc === 'absolute') {\n        var cell = new DataCell({\n          value: baseline_value - comparison_value,\n          rendered: value_format === '' ? (baseline_value - comparison_value).toString() : SSF.format(value_format, (baseline_value - comparison_value)),\n          cell_style: ['numeric', 'measure', 'variance', 'varianceAbsolute'],\n          colid: id,\n          rowid: row.id\n        })\n      } else {\n        var value = (baseline_value - comparison_value) / Math.abs(comparison_value)\n        if (!isFinite(value)) {\n          var cell = new DataCell({\n            value: null,\n            rendered: '∞',\n            cell_style: ['numeric', 'measure', 'variance', 'variancePercent'],\n            colid: id,\n            rowid: row.id\n          })\n        } else {\n          var cell = new DataCell({\n            value: value,\n            rendered: SSF.format('#0.00%', value),\n            cell_style: ['numeric', 'measure', 'variance', 'variancePercent'],\n            colid: id,\n            rowid: row.id\n          })\n        }\n      }\n      if (row.type == 'total' || row.type == 'subtotal') {\n        cell.cell_style.push('total')\n      }\n      if (row.type === 'subtotal') {\n        cell.cell_style.push('subtotal')\n      }\n      if (cell.value < 0) {\n        cell.cell_style.push('negative')\n      }\n      row.data[id] = cell\n    })\n  }\n\n  createVarianceColumn (colpair) {\n    if (!this.config.colSubtotals && colpair.variance.baseline.startsWith('$$$_subtotal_$$$')) {\n      console.log('Cannot calculate variance of column subtotals if subtotals disabled.')\n      return\n    }\n    var id = ['$$$_variance_$$$', colpair.calc, colpair.variance.baseline, colpair.variance.comparison].join('|')\n    var baseline = this.getColumnById(colpair.variance.baseline)\n    var comparison = this.getColumnById(colpair.variance.comparison)\n    var column = new Column(id, this, baseline.modelField)\n    column.isVariance = true\n\n    if (colpair.calc === 'absolute') {\n      column.variance_type = 'absolute'\n      column.idx = baseline.idx + 1\n      column.pos = baseline.pos + 1\n      column.sort = [...baseline.sort, 1]\n      column.hide = !this.config['var_num|' + baseline.modelField.name]\n    } else {\n      column.variance_type = 'percentage'\n      column.idx = baseline.idx + 2\n      column.pos = baseline.pos + 2\n      column.sort = [...baseline.sort, 2]\n      column.unit = '%'\n      column.hide = !this.config['var_pct|' + baseline.modelField.name]\n    }\n\n    if (typeof this.config.columnOrder[column.id] !== 'undefined') {\n      column.pos = this.config.columnOrder[column.id]\n    } \n\n    column.pivoted = baseline.pivoted\n    column.super = baseline.super\n    column.pivot_key = baseline.pivot_key\n\n    if (this.groupVarianceColumns) {    \n        column.sort[0] = 1.5\n    }\n\n    this.headers.forEach((header, i) => {\n      switch (header.type) {\n        case 'pivot0':\n        case 'pivot1':\n          var label = baseline.getHeaderCellLabelByType(header.type)\n          if (this.groupVarianceColumns && header.type === 'pivot0') {\n            var label = this.pivot_values.length === 2 ? 'Variance' : 'Variance: ' + label\n          }\n          var headerCell = new HeaderCell({ column: column, type: header.type, modelField: { label: label } })\n          column.levels[i] = headerCell\n          break\n        case 'heading':\n          var headerCell = new HeaderCell({ column: column, type: 'heading', modelField: baseline.modelField })\n          column.levels[i] = headerCell\n          break\n        case 'field':\n          var headerCell = new HeaderCell({ column: column, type: 'field', modelField: baseline.modelField })\n          column.levels[i] = headerCell\n          break;\n      }\n    })\n\n    this.columns.push(column)\n    if (colpair.variance.reverse) {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, comparison, baseline)\n    } else {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, baseline, comparison)\n    }\n  }\n\n  /**\n   * Function to add variance columns directly within table vis rather than requiring a table calc\n   * \n   * Takes list of variances configured by the user, and generates a list of column-pairs necessary\n   * to calculate those variances. There is at least one baseline-comparison pair per variance.\n   * Comparing different measures in a pivoted table will calculate a variance pair per pivot value.\n   * Comparing the same measure across pivots will calculate one pair less than there are pivots e.g.\n   * if comparing this year to last year, there are two \"Reporting Period\" values but only one variance.\n   */\n  addVarianceColumns () {\n    var variance_colpairs = []\n    var calcs = ['absolute', 'percent']\n    \n    Object.keys(this.variances).forEach(v => {\n      var variance = this.variances[v]\n      if (variance.comparison !== 'no_variance') {          \n        if (variance.type === 'vs_measure') {\n          if (!this.hasPivots) {\n            calcs.forEach(calc => {\n              variance_colpairs.push({\n                variance: variance,\n                calc: calc\n              })\n            })\n          } else {\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                calcs.forEach(calc => {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [pivot_value.key, variance.comparison].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                })\n              }\n            })\n          }\n        } else if (variance.type === 'by_pivot') { \n          if (this.pivot_fields.length === 1 || this.pivot_fields[1].name === variance.comparison) {\n            this.pivot_values.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                if (!pivot_value.is_total) {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [this.pivot_values[index].key, variance.baseline].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                }\n              })\n            })\n          } else { // top pivot value - variance by subtotal\n            var top_level_pivots = []\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                var value = pivot_value.data[this.pivot_fields[0].name]\n                if (!top_level_pivots.includes(value)) {\n                  top_level_pivots.push(value)\n                }\n              }\n            })\n            top_level_pivots.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                variance_colpairs.push({\n                  calc: calc,\n                  variance: {\n                    baseline: ['$$$_subtotal_$$$', pivot_value, variance.baseline].join('.'),\n                    comparison: ['$$$_subtotal_$$$', top_level_pivots[index], variance.baseline].join('.'),\n                    reverse: variance.reverse,\n                    type: variance.type\n                  }\n                })\n              })\n            })\n          } \n        }\n      }\n    })\n\n    variance_colpairs.forEach(colpair => {\n      this.createVarianceColumn(colpair)\n    })\n  }\n\n  compareSortArrays (a, b) {\n    var depth = Math.max(a.sort.length, b.sort.length)\n    for(var i = 0; i < depth; i++) {\n        var a_value = typeof a.sort[i] !== 'undefined' ? a.sort[i] : 0\n        var b_value = typeof b.sort[i] !== 'undefined' ? b.sort[i] : 0\n        if (a_value > b_value) { return 1 }\n        if (a_value < b_value) { return -1 }\n    }\n    return -1\n  }\n\n  /**\n   * Sorts the rows of data, then updates vertical cell merge \n   */\n  sortData () {\n    this.data.sort(this.compareSortArrays)\n    if (this.spanRows) { this.setRowSpans() }\n  }\n\n  /**\n   * Sorts columns by config option\n   * \n   * Depending on the colsSortBy option, columns are sorted by either:\n   * \n   * Sort by Pivots (default)\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Pivot sort values\n   * 3. Original column number for the Looker data obect [last item in sort value array]\n   * \n   * Sort by Measures\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Original Column Number\n   * 3. Measure sort values [remainder of sort value array]\n   * \n   * Note that column sort values can be over-riden by manual drag'n'drop \n   */\n  sortColumns () {\n    this.columns.sort(this.compareSortArrays)\n  }\n\n  /**\n   * 1. Build list of leaves\n   * 2. Build list of tiers (and initialise span_tracker)\n   * 3. Backwards <--- leaves\n   *    4. Check for resets (n/a for colspans)\n   *    5. Forwards ---> tiers\n   *        6. Match: mark invisible (span_value = -1). Increment the span_tracker.\n   *        7. Diff: set span_value from span_tracker. Partial reset and continue.\n   */\n  setColSpans () {\n    var leaves = []\n    var tiers = []\n    var span_tracker = {}\n    \n    // 1)\n    var columns = this.columns.filter(c => !c.hide)\n\n    columns.forEach(column => {\n      var leaf = {\n        id: column.id,\n        data: column.getHeaderData()\n      }\n      leaves.push(leaf)\n    })\n\n    // 2)\n    tiers = this.headers\n    tiers.forEach(tier => {\n      span_tracker[tier.type] = 1\n    })\n\n    // 3)\n    for (var l = leaves.length - 1; l >= 0; l--) {\n      var leaf = leaves[l]\n\n      // 5)\n      for (var t = 0; t < tiers.length; t++) {\n        var tier = tiers[t]\n        var this_tier_value = leaf.data[tier.type].label\n        var neighbour_value = l > 0 ? leaves[l - 1].data[tier.type].label : null\n\n        // 6) \n        if (l > 0 && this_tier_value === neighbour_value) {\n          leaf.data[tier.type].colspan = -1\n          leaf.data[tier.type].rowspan = -1\n          span_tracker[tier.type] += 1;\n        } else {\n        // 7) \n          for (var t_ = t; t_ < tiers.length; t_++) {\n            var tier_ = tiers[t_]\n            leaf.data[tier_.type].colspan = span_tracker[tier_.type]\n            if (leaf.data[tier_.type].colspan > 1) {\n              leaf.data[tier_.type].align = 'center'\n              leaf.data[tier_.type].cell_style.push('merged')\n            }\n            span_tracker[tier_.type] = 1\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Applies conditional formatting (red if negative) to all measure columns set to use it \n   */\n  applyFormatting() {\n    this.columns.forEach(column => {\n      var config_setting = this.config['style|' + column.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        switch (config_setting) {\n          case 'black_red':\n            this.data.forEach(row => {\n              if (row.data[column.id].value < 0) {\n                row.data[column.id].cell_style.push('negative')\n              }\n            })\n            break\n        }\n      }\n    })\n  }\n\n  transposeDimensionsIntoHeaders () {\n    this.transposed_headers = this.columns\n      .filter(c => c.modelField.type === 'dimension')\n      .filter(c => !c.hide)\n      .map(c => { return { type: 'field', modelField: c.modelField } })\n  }\n\n  /**\n   * For rendering a transposed table i.e. with the list of measures on the left hand side\n   * 1. Add an index column per header\n   * 2. Add a transposed column for every data row\n   */\n  transposeRowsIntoColumns () {\n    // TODO: review logic for cell.align\n    var index_parent = {\n      align: 'left',\n      type: 'transposed_table_index',\n      is_table_calculation: false\n    }\n\n    // One \"index column\" per header row from original table\n    this.headers.forEach((indexColumn, i) => {\n      var transposedColumn = new Column(indexColumn.type, this, index_parent)\n\n      this.transposed_headers.forEach((header, h) => {\n        var sourceCell = this.columns[h].levels[i]\n        var headerCell = new HeaderCell({\n          column: transposedColumn,\n          type: sourceCell.type,\n          label: sourceCell.label,\n          cell_style: sourceCell.cell_style,\n          align: sourceCell.align,\n          modelField: sourceCell.modelField\n        })\n        headerCell.rowspan = sourceCell.colspan\n        headerCell.colspan = sourceCell.rowspan\n        headerCell.id = [sourceCell.modelField.name, sourceCell.type].join('.')\n        headerCell.cell_style.push('transposed')\n\n        if (headerCell.colspan > 0) {\n          headerCell.cell_style.push('merged')\n        }\n\n        transposedColumn.levels.push(headerCell)\n      })\n\n      this.transposed_columns.push(transposedColumn)\n    })\n    \n    var measure_parent = {\n      align: 'right',\n      type: 'transposed_table_measure',\n      is_table_calculation: false\n    }\n  \n    // One column per data row (line items, subtotals, totals)\n    this.data.forEach(sourceRow => {\n      var transposedColumn = new Column(sourceRow.id, this, measure_parent)\n\n      this.transposed_headers.forEach(header => {\n        var cellRef = this.useIndexColumn && ['subtotal', 'total'].includes(sourceRow.type) ? '$$$_index_$$$' : header.modelField.name\n        var sourceCell = sourceRow.data[cellRef]\n        var headerCell = new HeaderCell({ \n          column: transposedColumn, \n          type: header.type, \n          label: sourceCell.rendered === '' ? sourceCell.rendered : sourceCell.rendered || sourceCell.value, \n          align: 'center',\n          cell_style: sourceCell.cell_style,\n        })\n        headerCell.colspan = sourceCell.rowspan\n        headerCell.rowspan = sourceCell.colspan\n        headerCell.id = [sourceCell.colid, sourceCell.rowid].join('.')\n        headerCell.cell_style.push('transposed')\n\n        transposedColumn.levels.push(headerCell)\n      })\n\n      this.transposed_columns.push(transposedColumn)\n    })\n  }\n\n  transposeColumnsIntoRows () { \n    console.log('transposeColumnsIntoRows()...')\n    this.columns.filter(c => c.modelField.type === 'measure').forEach(column => {\n      var transposedData = {}\n\n      // INDEX FIELDS // every index/dimension column in original table must be represented as a data cell in the new transposed rows\n      column.levels.forEach((level, i) => {        \n        var cell = new DataCell({\n          value: level.label,\n          rendered: level.label,\n          rowspan: level.colspan,\n          colspan: level.rowspan,\n          cell_style: ['indexCell', 'transposed'],\n          align: 'left',\n          colid: column.id,\n          rowid: level.type\n        })\n\n        switch (level.type) {\n          case 'pivot0':\n          case 'pivot1':\n            cell.cell_style.push('pivot')\n            break\n          case 'heading':\n          case 'field':\n            var style = column.modelField.is_table_calculation ? 'calculation' : 'measure'\n            cell.cell_style.push(style)\n            break\n        }\n\n        if (cell.rowspan > 1) {\n          cell.cell_style.push('merged')\n        }\n\n        transposedData[level.type] = cell\n      })\n\n      // MEASURE FIELDS // every measure column in original table is converted to a data row\n      this.data.forEach(row => {\n        if (typeof row.data[column.id] !== 'undefined') {\n          var sourceCell = row.data[column.id]\n          transposedData[row.id] = row.data[column.id]\n          transposedData[row.id].id = [sourceCell.colid, sourceCell.rowid].join('.')\n          transposedData[row.id]['cell_style'].push('transposed')\n        } else {\n          console.log('row data does not exist for', column.id)\n        }\n      })\n\n      var transposed_row = new Row('line_item')\n      transposed_row.id = column.id\n      transposed_row.modelField = column.modelField\n      transposed_row.hide = column.hide\n      transposed_row.data = transposedData\n\n      this.transposed_data.push(transposed_row)\n\n    })\n  }\n\n  validateConfig() {\n    if (!['traditional', 'looker', 'contemporary', 'custom'].includes(this.config.theme)) {\n      this.config.theme = 'traditional'\n    }\n\n    if (!['fixed', 'auto'].includes(this.config.layout)) {\n      this.config.layout = 'fixed'\n    }\n\n    if (typeof this.config.transposeTable === 'undefined') {\n      this.config.transposeTable = false\n    }\n\n    Object.entries(this.config).forEach(option => {\n      if (option[1] === 'false') {\n        option[1] = false\n      } else if (option[1] === 'true') {\n        option[1] = true\n      }\n\n      if (option[0].split('|').length === 2) {\n        var [field_option, field_name] = option[0].split('|')\n        if (['label', 'heading', 'hide', 'style', 'switch', 'var_num', 'var_pct', 'comparison'].includes(field_option)) {\n          var keep_option = false\n          this.dimensions.forEach(dimension => {\n            if (dimension.name === field_name) { keep_option = true }\n          })\n          this.measures.forEach(measure => {\n            if (measure.name === field_name) { keep_option = true }\n          })\n          if (!keep_option) {\n            delete this.config[option[0]]\n          } \n        }\n      }\n    })\n  }\n\n  /**\n   * Returns column that matches ID provided\n   * @param {*} id \n   */\n  getColumnById (id) {\n    var column = {}\n    this.columns.forEach(c => {\n      if (id === c.id) { \n        column = c \n      }\n    })\n    return column\n  }\n\n  /**\n   * Returns row that matches ID provided\n   * @param {*} id \n   */\n  getRowById (id) {\n    var row = {}\n    this.data.forEach(r => {\n      if (id === r.id) {\n        row = r\n      }\n    })\n    return row\n  }\n\n  getMeasureByName (name) {\n    var measure = ''\n    this.measures.forEach(m => {\n      if (name === m.name) { \n        measure = m\n      }\n    })\n    return measure\n  }\n\n  /**\n   * Extracts the formatted value of the field from the html: value\n   * There are cases (totals data) where the formatted value isn't available as usual rendered_value\n   * @param {*} cellValue \n   */\n  getRenderedFromHtml (cellValue) {\n    var parser = new DOMParser()\n    if (typeof cellValue.html !== 'undefined' && !['undefined', ''].includes(cellValue.html)) {\n      try {\n        var parsed_html = parser.parseFromString(cellValue.html, 'text/html')\n        var rendered = parsed_html.documentElement.textContent\n      }\n      catch(TypeError) {\n        var rendered = cellValue.html\n      }\n    } else {\n      var rendered = cellValue.value\n    }\n\n    return rendered\n  }\n\n  /**\n   * Used to support rendering of table as vis. \n   * Returns an array of 0s, of length to match the required number of header rows\n   */\n  getHeaderTiers () {    \n    if (!this.transposeTable) {\n      return this.headers\n    } else {\n      return this.transposed_headers\n    }\n  }\n\n  /**\n   * Used to support rendering of data table as vis. \n   * Builds list of columns out of data set that should be displayed\n   * @param {*} i \n   */\n  getTableHeaderCells (i) {\n    if (!this.transposeTable) {\n      return this.columns\n        .filter(c => !c.hide)\n        .filter(c => c.levels[i].colspan > 0)\n    } else {\n      return this.transposed_columns\n        .filter(c => c.levels[i].colspan > 0)\n    }\n  }\n\n  getDataRows () {\n    if (!this.transposeTable) {\n      var dataRows = this.data.filter(row => !row.hide)\n    } else {\n      var dataRows = this.transposed_data.filter(row => !row.hide)\n    }\n    return dataRows\n  }\n\n  /**\n   * Used to support rendering of data table as vis.\n   * For a given row of data, returns filtered array of cells – only those cells that are to be displayed.\n   * @param {*} row \n   */\n  getTableRowColumns (row) {\n    if (!this.transposeTable) {\n      var cells = this.columns\n        .filter(column => !column.hide)\n        .filter(column => row.data[column.id].rowspan > 0)\n    } else {\n      var cells = this.transposed_columns\n      .filter(column => !column.hide)\n      .filter(column => row.data[column.id].rowspan > 0)\n    }\n    return cells    \n  }\n\n  /**\n   * Used to support column drag'n'drop when rendering data table as vis.\n   * Updates the table.config with the new pos values.\n   * Accepts a callback function for interaction with the vis.\n   * @param {*} from \n   * @param {*} to \n   * @param {*} callback \n   */\n  moveColumns(from, to, updateColumnOrder) {\n    var config = this.config\n    if (from != to) {\n      var shift = to - from\n      var col_order = config.columnOrder\n      this.columns.forEach(col => {\n        if (col.modelField.type == 'measure' && !col.super) {\n          if (col.pos >= from && col.pos < from + 10) {\n            // console.log('MOVING COLUMN', col.id, col.pos, '->', col.pos + shift)\n            col.pos += shift\n          } else if (col.pos >= to && col.pos < from) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos + 10)\n            col.pos += 10\n          } else if (col.pos >= from + 10 && col.pos < to + 10) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos - 10)\n            col.pos -= 10\n          }\n          col_order[col.id] = col.pos\n        } \n      })\n      updateColumnOrder(col_order)\n    }\n  }\n\n  /**\n   * Returns dataset as a simple json object\n   * Includes line_items only (e.g. no row subtotals)\n   * \n   * Convenience function when using LookerData as an object to support e.g. Vega Lite visualisations\n   */\n  getSimpleJson() {\n    var raw_values = []\n    this.data.forEach(r => {\n      if (r.type === 'line_item') {\n        var row = {}\n        this.columns.forEach(c => {\n          row[c.id] = r.data[c.id].value\n        })\n        raw_values.push(row)\n      }\n    })\n    return raw_values\n  }\n\n  /**\n   * Builds array of arrays, used at by table vis to build column groups\n   * Three column groups: \n   * - index (dimensions)\n   * - measures (standard measures)\n   * - totals (supermeasures: row totals and some table calcs)\n   * \n   * For transposed tables:\n   * - index (headers, pivot value, measures)\n   * - measures (Includes subtotals. Cells contain measure values, header rows contain dimension values)\n   * - totals (totals)\n   */\n  getTableColumnGroups () {\n    var indexColumns = []\n    var measureColumns = []\n    var totalColumns = []\n\n    if (!this.transposeTable) {\n      this.columns.forEach(column => {\n        if (column.modelField.type === 'dimension' && !column.hide) {\n          indexColumns.push({ id: column.id, type: 'index' })\n        } else if (column.modelField.type === 'measure' && !column.isRowTotal && !column.super && !column.hide) {\n          measureColumns.push({ id: column.id, type: 'dataCell' })\n        } else if (column.modelField.type === 'measure' && (column.isRowTotal || column.super) && !column.hide) {\n          totalColumns.push({ id: column.id, type: 'dataCell' })\n        }\n      })\n    } else {\n      this.transposed_columns.forEach(column => {\n        if (column.modelField.type === 'transposed_table_index') {\n          indexColumns.push({ id: column.id, type: 'index' })\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id !== 'Total') {\n          measureColumns.push({ id: column.id, type: 'dataCell' })\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id === 'Total') {\n          totalColumns.push({ id: column.id, type: 'dataCell' })\n        }\n      })\n    }\n\n    var columnGroups = []\n    if (indexColumns.length > 0) {\n      columnGroups.push(indexColumns)\n    }\n    if (measureColumns.length > 0) {\n      columnGroups.push(measureColumns)\n    }\n    if (totalColumns.length > 0) {\n      columnGroups.push(totalColumns)\n    }\n\n    return columnGroups\n  }\n\n  getCellToolTip (rowid, colid) {\n    var tipHTML = '<table><tbody>'\n\n    var row = this.getRowById(rowid)\n    var focusColumn = this.getColumnById(colid) \n    var field = focusColumn.modelField \n\n    if (row.type === 'total') {\n      var label = 'TOTAL'\n      var value = ''\n      var rowClass = 'focus'\n      tipHTML += ['<tr class=\"', rowClass, '\"><td><span style=\"float:left\"><em>', label, ':</em></td><td></span><span style=\"float:left\"> ', value, '</span></td></tr>'].join('')\n    } else if (row.id.startsWith('Others')) {\n      var label = 'Others'\n      var value = ''\n      var rowClass = 'focus'\n      tipHTML += ['<tr class=\"', rowClass, '\"><td><span style=\"float:left\"><em>', label, ':</em></td><td></span><span style=\"float:left\"> ', value, '</span></td></tr>'].join('')      \n    } else if (row.type === 'subtotal') {\n      var label = 'SUBTOTAL'\n      var rowClass = 'focus'\n      var subtotalColumn = this.columns.filter(c => !c.hide).filter(c => c.modelField.type === 'dimension')[0]\n      var value = row.data[subtotalColumn.id].render || row.data[subtotalColumn.id].value\n      tipHTML += ['<tr class=\"', rowClass, '\"><td><span style=\"float:left\"><em>', label, ':</em></td><td></span><span style=\"float:left\"> ', value, '</span></td></tr>'].join('')\n    } else {\n      var dimensionColumns = this.columns\n      .filter(c => c.id !== '$$$_index_$$$')\n      .filter(c => c.modelField.type === 'dimension')\n\n      dimensionColumns.forEach(column => {\n        var label = column.getHeaderCellLabelByType('field')\n        var value = row.data[column.id].rendered || row.data[column.id].value\n        var rowClass = column.id === focusColumn.id ? 'focus' : ''\n        tipHTML += ['<tr class=\"', rowClass, '\"><td><span style=\"float:left\"><em>', label, ':</em></td><td></span><span style=\"float:left\"> ', value, '</span></td></tr>'].join('')\n      })\n    }\n  \n    tipHTML += '<tr style=\"height:10px\"></tr>' // spacer row\n\n    var isEstimate = false\n    var measureLabel = ''\n    var measureColumns = this.columns\n      .filter(c => c.modelField.type === 'measure')\n      .filter(c => c.modelField === field)\n    \n    measureColumns.forEach(column => {\n      if (!column.isVariance) {\n        measureLabel = column.getHeaderCellLabelByType('field')\n      }\n\n      if ((!column.pivoted && !column.isRowTotal) || (column.pivot_key === focusColumn.pivot_key)) {\n        var label = column.getHeaderCellLabelByType('field')\n        var rowClass = column.id === focusColumn.id ? 'focus' : ''\n        \n        var cell = row.data[column.id]\n        var value = cell.rendered || cell.value\n        if (cell.html) { \n          var parser = new DOMParser()\n          var parsed_html = parser.parseFromString(cell.html, 'text/html')\n          value = parsed_html.documentElement.textContent\n        }\n\n        if (cell.cell_style.includes('estimate')) {\n          isEstimate = true\n        }\n\n        tipHTML += ['<tr class=\"', rowClass, '\"><td><span style=\"float:left\"><em>', label, ':</em></td><td></span><span style=\"float:right\"> ', value, '</span></td></tr>'].join('')\n      }\n    })\n\n    var isReportedIn = null\n    var reportInSetting = this.config['reportIn|' + focusColumn.modelField.name]\n    var reportInLabels = {\n      1000: '000s',\n      1000000: 'Millions',\n      1000000000: 'Billions'\n    }\n    if (typeof reportInSetting !== 'undefined'  && reportInSetting !== '1') {\n      isReportedIn = measureLabel + ' reported in ' + reportInLabels[reportInSetting]\n    }\n\n    if (isReportedIn || isEstimate) {\n      tipHTML += '<tr style=\"height:10px\"></tr>' // spacer row\n    }\n\n    if (isReportedIn) {\n      tipHTML += '<tr><td colspan=2><span style=\"color:darkgrey\">' + isReportedIn + '.</span></td></tr>'\n    }\n\n    if (isEstimate) {\n      tipHTML += '<tr><td colspan=2><span style=\"color:red\">Estimated figure due to query exceeding row limit.</span></td></tr>'\n      tipHTML += '<tr><td colspan=2><span style=\"color:red\">Consider increasing the row limit or using an alternative measure.</span></td></tr>'\n    }\n\n    tipHTML += '</tbody><table>'\n\n    return tipHTML\n  }\n}\n\nexports.VisPluginTableModel = VisPluginTableModel\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js","webpack:///./node_modules/ssf/ssf.js","webpack:///./src/vis_table_plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","newArray","length","arr","push","ModelField","vis","queryResponseField","this","view","view_label","label","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","heading","short_name","unit","tags","forEach","tag","split","Series","keys","values","types","line_items_only","with_subtotals","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","ModelDimension","super","align","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","PivotField","Row","id","sort","data","Column","transposed","idx","pos","levels","pivot_key","variance_type","pivoted","subtotal","sort_by_measure_values","sort_by_pivot_values","colspans","colspan_values","number_of_levels","level","labels","visId","useShortName","config_setting","useViewName","join","has_pivots","sortColsBy","useHeadings","header_levels","getLabel","column_heading","unshift","headerData","getHeaderLevels","headers","header","_strrev","x","charAt","fill","pad0","v","pad_","rpad_","version","p2_32","pow","pad0r","round","pad0r1","pad0r2","isgeneral","charCodeAt","days","months","init_table","table_fmt","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","basedate","dnthresh","getTime","base1904","datenum_local","epoch","getTimezoneOffset","_general_int","general_fmt_num","gnr1","gnr2","gnr4","gnr5","gnr6","gfn5","indexOf","replace","V","LOG10E","toPrecision","w","toFixed","toExponential","gfn2","substr","gfn3","gfn4","general_fmt","Error","write_date","fmt","val","ss0","ss","tt","outl","commaify","j","_general_num","_general","write_num","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","String","fromCharCode","rnd","dd","dec","write_num_flt","match","ffmt","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","slice","lastIndexOf","split_fmt","in_str","_split","abstime","fmt_is_date","toUpperCase","eval_fmt","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","is_date","_eval","cfregex","cfregex2","chkcond","thresh","parseFloat","dateNF","table","f","lat","m1","m2","choose_fmt","load_entry","undefined","load","_table","get_table","load_table","tbl","make_ssf","DO_NOT_EXPORT_SSF","tableModelCoreOptions","theme","section","display","default","order","customTheme","layout","columnOrder","rowSubtotals","display_size","colSubtotals","spanRows","spanCols","sortColumnsBy","groupVarianceColumns","indexColumn","transposeTable","VisPluginTableModel","lookerData","queryResponse","dimensions","measures","columns","subtotals_data","transposed_columns","transposed_data","pivot_fields","pivots","pivot_values","variances","column_series","colspan_values_","rowspan_values","useIndexColumn","addRowSubtotals","addSubtotalDepth","subtotalDepth","has_totals","has_subtotals","has_row_totals","has_supers","checkPivotsAndSupermeasures","addHeaders","addDimensions","addMeasures","checkVarianceCalculations","buildIndexColumn","checkSubtotalsData","buildRows","addColumnSeries","buildTotals","updateRowSpanValues","addSubTotals","addColumnSubTotals","addVarianceColumns","sortColumns","setColSpans_","setColSpans","applyFormatting","transposeColumns","transposeRows","validateConfig","newOptions","subtotal_options","dimension","subtotal_option","measure","comparisonOptions","pivotComparisons","pivot","option","concat","comparisonMeasure","includeMeasure","fields","pivot_field","supermeasure_like","measureHeader","col_idx","dimension_like","dim","measure_like","newMeasure","pivot_value","columnId","level_sort_values","supermeasure","meas","startsWith","baseline","baseline_in_measures","reverse","comparison","index_column","lookerSubtotal","visSubtotal","groups","group","cell_style","isSubtotal","lookerRow","cell_series","_parsed","to_string","all_dims","last_dim","getRenderedFromHtml","html","new_series","totals_data","truncated","calculate_others","totals_","firstVisibleDimension","totals_row","others_row","other_value","cellValue","links","link","sortData","span_tracker","this_cell_value","cell_above_value","d_","dim_","depth","subTotalGroups","latest_group","g","subTotalGroup","subtotal_label","entries","cellKey","subtotal_value","subtotal_items","data_row","Number","isFinite","last_pivot_key","last_pivot_col","subtotals","pivot_dimension","p_value","Set","highest_pivot_col","previous_subtotal","subtotal_col","measure_idx","pivot_idx","after","field","calc","baseline_value","comparison_value","cell_value","colpair","variance","getColumnById","calculateVariance","variance_colpairs","calcs","is_total","index","top_level_pivots","createVarianceColumn","param","filter","leaves","tiers","span_values","tier","leaf","getHeaderData","this_tier_value","neighbour_value","JSON","stringify","t_","tier_","h","end","this_value","above_value","l_","label_level","next_value","default_colspan","index_parent","measure_parent","transposed_column","sourceRow","colspan","measure_level","transposed_row","rowspans","field_option","field_name","keep_option","parser","DOMParser","parseFromString","documentElement","textContent","TypeError","index_columns","measure_columns","total_columns","cells","cell","rowspan","from","to","updateColumnOrder","shift","col_order","col","raw_values"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBC5ErD,MAAMC,EAAW,SAASC,EAAQhB,GAEhC,IADA,IAAIiB,EAAM,GACDjC,EAAI,EAAGA,EAAIgC,EAAQhC,IAC1BiC,EAAIC,KAAKlB,GAEX,OAAOiB,GAGT,MAAME,EACJ,aAAY,IAAEC,EAAG,mBAAEC,IACjBC,KAAKF,IAAMA,EACXE,KAAKhC,KAAO+B,EAAmB/B,KAC/BgC,KAAKC,KAAOF,EAAmBG,YAAc,GAC7CF,KAAKG,MAAQJ,EAAmBK,aAAeL,EAAmBI,MAClEH,KAAKK,WAAaN,EAAmBM,WACrCL,KAAKM,SAAW,CAAC,OAAQ,WAAY,QAAQC,SAASR,EAAmBS,MACzER,KAAKS,aAAeV,EAAmBU,aAEvCT,KAAKU,SAAW,IACgB,aAA5BX,EAAmBS,MAAuBT,EAAmBY,aAC/DX,KAAKU,SAAuC,aAA5BX,EAAmBS,KAAsB,WAAaT,EAAmBY,UAAU3C,MAGrGgC,KAAKY,MAAO,OACwC,IAAzCZ,KAAKF,IAAIe,OAAO,QAAUb,KAAKhC,OACpCgC,KAAKF,IAAIe,OAAO,QAAUb,KAAKhC,QACjCgC,KAAKY,MAAO,GAIhBZ,KAAKc,MAAQ,GACb,IAAIC,EAAgBf,KAAKF,IAAIe,OAAO,SAAWb,KAAKhC,WACvB,IAAlB+C,IACa,SAAlBA,EACFf,KAAKY,MAAO,EAEZZ,KAAKc,MAAQC,GAIjBf,KAAKgB,QAAU,GACfhB,KAAKiB,WAAa,GAClBjB,KAAKkB,KAAO,QAC2B,IAA5BnB,EAAmBoB,MAC5BpB,EAAmBoB,KAAKC,QAAQC,IAC9B,IAAIF,EAAOE,EAAIC,MAAM,KACrB,GAAgB,cAAZH,EAAK,GACP,OAAQA,EAAK,IACX,IAAK,UACHnB,KAAKgB,QAAUG,EAAK,GAAK,MAC3B,IAAK,aACHnB,KAAKiB,WAAaE,EAAK,GAAK,MAC9B,IAAK,OACHnB,KAAKkB,KAAOC,EAAK,GAAK,MACxB,IAAK,QACHnB,KAAKc,MAAQK,EAAK,OA0ChC,MAAMI,EACJ,aAAY,KAAEC,EAAI,OAAEC,EAAM,MAAEC,EAAQ,KAClC,GAAIF,EAAK9B,SAAW+B,EAAO/B,OAAS,CAClCM,KAAKwB,KAAOA,EACZxB,KAAKyB,OAASA,EACdzB,KAAK0B,MAAQA,EAEb,IAAIC,EAAkB,GAClBC,EAAiB,GAErB5B,KAAKyB,OAAOL,QAAQ,CAAC1C,EAAOjB,KAC1BuC,KAAK0B,MAAMjE,QAAyB,IAAbiE,EAAMjE,GAAqBiE,EAAMjE,GAAK,YACvC,cAAlBuC,KAAK0B,MAAMjE,IACbkE,EAAgB/B,KAAKlB,GACrBkD,EAAehC,KAAKlB,IACO,aAAlBsB,KAAK0B,MAAMjE,IACpBmE,EAAehC,KAAKlB,KAIxBsB,KAAK6B,gBAAkBC,KAAKC,IAAIH,GAChC5B,KAAKgC,gBAAkBF,KAAKG,IAAIL,GAChC5B,KAAK+B,IAAMD,KAAKC,IAAIJ,GACpB3B,KAAKiC,IAAMH,KAAKG,IAAIN,GACpB3B,KAAKkC,IAAMP,EAAgBQ,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAG,GACnDrC,KAAKsC,MAAQX,EAAgBjC,OAC7BM,KAAKuC,IAAMZ,EAAgBjC,OAAS,EAAIM,KAAKkC,IAAMP,EAAgBjC,OAAS,UAE5E8C,QAAQC,IAAI,iEAyMlBlF,EAAQkC,SAAWA,EACnBlC,EAAQmF,eAxQR,cAA6B7C,EAC3B,aAAY,IAAEC,EAAG,mBAAEC,IACjB4C,MAAM,CAAE7C,MAAKC,uBAEbC,KAAKQ,KAAO,YACZR,KAAK4C,MAAQ,SAoQjBrF,EAAQsF,aAhQR,cAA2BhD,EACzB,aAAY,IAAEC,EAAG,mBAAEC,EAAkB,UAAE+C,IACrCH,MAAM,CAAE7C,MAAKC,uBAEbC,KAAKQ,KAAO,UACZR,KAAK4C,MAAQ,QAEb5C,KAAK+C,0BAA0E,IAA5ChD,EAAmBgD,sBAAwChD,EAAmBgD,qBACjH/C,KAAKgD,iBAAmBjD,EAAmBS,KAC3CR,KAAKiD,UAAYlD,EAAmBkD,UACpCjD,KAAK8C,UAAYA,IAuPrBvF,EAAQ2F,WAvMR,MACE,aAAY,OAAEC,EAAM,IAAEC,EAAG,WAAEC,EAAU,OAAEC,IACrCtD,KAAKmD,OAASA,EACdnD,KAAKoD,IAAMA,EACXpD,KAAKqD,WAAaA,EAClBrD,KAAKsD,OAAS,IAAI/B,EAAO+B,GAG3B,YACE,IAAIC,EAAW,GAQf,OAPAvD,KAAKsD,OAAO9B,KAAKJ,QAAQ,CAACpC,EAAKvB,KAC7B8F,GAAYvE,EAAM,IAClB,IAAIwE,EAA0D,KAAxCxD,KAAKmD,OAAOM,WAAWhD,aACrBT,KAAKsD,OAAO7B,OAAOhE,GAAGiG,WACtBC,IAAIC,OAAO5D,KAAKmD,OAAOM,WAAWhD,aAAcT,KAAKsD,OAAO7B,OAAOhE,IAC3F8F,GAAYC,EAAkB,MAEzBD,IAuLXhG,EAAQsG,aAnLR,MACE,aAAY,OAAEV,EAAM,WAAE9C,EAAU,OAAEiD,IAChCtD,KAAKmD,OAASA,EACdnD,KAAKK,WAAaA,EAClBL,KAAKsD,OAAS,IAAI/B,EAAO+B,KAgL7B/F,EAAQuG,WArPR,MACE,aAAY,mBAAE/D,IACZC,KAAKhC,KAAO+B,EAAmB/B,KAC/BgC,KAAKG,MAAQJ,EAAmBK,aAAeL,EAAmBI,MAClEH,KAAKC,KAAOF,EAAmBG,YAAc,KAkPjD3C,EAAQwG,IAxKR,MACE,YAAYvD,EAAO,aACjBR,KAAKgE,GAAK,GACVhE,KAAKyD,WAAa,KAClBzD,KAAKQ,KAAOA,EACZR,KAAKiE,KAAO,GACZjE,KAAKkE,KAAO,KAmKhB3G,EAAQ4G,OAtJR,MACE,YAAYH,EAAIlE,EAAK2D,GACnBzD,KAAKgE,GAAKA,EACVhE,KAAKF,IAAMA,EACXE,KAAKyD,WAAaA,EAClBzD,KAAKoE,YAAa,EAElBpE,KAAKqE,IAAM,EACXrE,KAAKsE,IAAM,EACXtE,KAAKuE,OAAS,GACdvE,KAAKwE,UAAY,GAEjBxE,KAAKkB,KAAOuC,EAAWvC,MAAQ,GAC/BlB,KAAKY,KAAO6C,EAAW7C,OAAQ,EAC/BZ,KAAKyE,cAAgB,GACrBzE,KAAK0E,SAAU,EACf1E,KAAK2E,UAAW,EAChB3E,KAAK2C,OAAQ,EAEb3C,KAAKsD,OAAS,KAEdtD,KAAK4E,uBAAyB,GAC9B5E,KAAK6E,qBAAuB,GAE5B7E,KAAK8E,SAAW,GAChB9E,KAAKF,IAAIiF,eAAe/E,KAAKgE,IAAMvE,EAASO,KAAKF,IAAIkF,kBAAmB,GAO1E,SAAUC,GACR,GAAIjF,KAAKoE,WACP,OAAOpE,KAAKkF,OAAOD,GAGrB,QAA8B,IAAnBjF,KAAKF,IAAIqF,OAA4C,iBAAnBnF,KAAKF,IAAIqF,MACpD,OAAQnF,KAAKyE,eACX,IAAK,WACH,IAAItE,EAAQ,QACZ,MACF,IAAK,aACCA,EAAQ,QACZ,MACF,QACMA,EAAQH,KAAKF,IAAIsF,cAAepF,KAAKyD,WAAWxC,YAAsCjB,KAAKyD,WAAWtD,WAG1GA,EAAQH,KAAKyD,WAAWtD,MAG9B,IA0BUkF,QAzBoB,KAD1BA,EAAiBrF,KAAKF,IAAIe,OAAO,SAAWb,KAAKyD,WAAWzF,QACnBqH,IAAmBrF,KAAKyD,WAAWtD,QAC9EA,EAAQkF,GAAkClF,QAGR,IAAzBH,KAAKF,IAAIwF,aAA+BtF,KAAKF,IAAIwF,cAC1DnF,EAAQ,CAACH,KAAKyD,WAAWxD,KAAME,GAAOoF,KAAK,WAGV,IAAxBvF,KAAKF,IAAI0F,cACdxF,KAAKF,IAAI0F,WACiB,oBAAxBxF,KAAKF,IAAI2F,WACPR,EAAQjF,KAAKuE,OAAO7E,SACtBS,EAAQH,KAAKuE,OAAOU,IAKlBA,GAAS,IACX9E,EAAQH,KAAKuE,OAAOU,EAAQ,IAM5BjF,KAAKF,IAAI4F,aAAyB,IAAVT,IAGxB9E,OAD4B,KAD1BkF,EAAiBrF,KAAKF,IAAIe,OAAO,WAAab,KAAKyD,WAAWzF,QAExDqH,GAEArF,KAAKyD,WAAWzC,UAOhC,OAAOb,EAQT,kBACE,GAAuC,oBAAnCH,KAAKyD,WAAW3D,IAAI2F,WACtB,IAAIE,EAAgB,IAAI3F,KAAKuE,OAAQvE,KAAK4F,SAAS5F,KAAKuE,OAAO7E,cAE3DiG,EAAgB,CAAC3F,KAAK4F,SAAS,MAAO5F,KAAKuE,QAGjD,GAAIvE,KAAKyD,WAAW3D,IAAI4F,cAAgB1F,KAAKyD,WAAW3D,IAAI0F,WAAY,CACtE,IAAIK,EAAiB7F,KAAKyD,WAAWzC,QACjCqE,EAAiBrF,KAAKyD,WAAW3D,IAAIe,OAAO,WAAab,KAAKyD,WAAWzF,WAC/C,IAAnBqH,IACTQ,EAAiBR,GAAkCQ,GAErDF,EAAcG,QAAQD,GAGxB,OAAOF,EAGT,gBACE,IAAII,EAAa,GACbxB,EAASvE,KAAKgG,kBAKlB,OAJAhG,KAAKyD,WAAW3D,IAAImG,QAAQ7E,QAAQ,CAAC8E,EAAQzI,KAC3CsI,EAAWG,EAAOlI,MAAQuG,EAAO9G,KAG5BsI,EAGT,qBAAsB1B,GACkB,GAAlCrE,KAAK4E,uBAAuB,KACzB5E,KAAK0E,SAAY1E,KAAK2E,WACzB3E,KAAK4E,uBAAyB,CAAC,EAAGP,KAKxC,oBACE,OAAOrE,KAAK4E,uBAGd,kBACE,OAAO5E,KAAK6E,wB,gBCrUhB,IAAIlB,EAAM,IACK,SAAkBA,GAEjC,SAASwC,EAAQC,GAAiC,IAA5B,IAAIlI,EAAI,GAAIT,EAAI2I,EAAE1G,OAAO,EAASjC,GAAG,GAAGS,GAAKkI,EAAEC,OAAO5I,KAAM,OAAOS,EACzF,SAASoI,EAAKxI,EAAEJ,GAAiB,IAAZ,IAAIQ,EAAI,GAAUA,EAAEwB,OAAShC,GAAGQ,GAAGJ,EAAG,OAAOI,EAClE,SAASqI,EAAKC,EAAEzI,GAAG,IAAIY,EAAE,GAAG6H,EAAG,OAAO7H,EAAEe,QAAQ3B,EAAEY,EAAE2H,EAAK,IAAIvI,EAAEY,EAAEe,QAAQf,EACzE,SAAS8H,EAAKD,EAAEzI,GAAG,IAAIY,EAAE,GAAG6H,EAAE,OAAO7H,EAAEe,QAAQ3B,EAAEY,EAAE2H,EAAK,IAAIvI,EAAEY,EAAEe,QAAQf,EACxE,SAAS+H,EAAMF,EAAEzI,GAAG,IAAIY,EAAE,GAAG6H,EAAG,OAAO7H,EAAEe,QAAQ3B,EAAEY,EAAEA,EAAE2H,EAAK,IAAIvI,EAAEY,EAAEe,QALpEiE,EAAIgD,QAAU,SAQd,IAAIC,EAAQ9E,KAAK+E,IAAI,EAAE,IACvB,SAASC,EAAMN,EAAEzI,GAAG,OAAGyI,EAAEI,GAAOJ,GAAGI,EAHnC,SAAgBJ,EAAEzI,GAAG,IAAIY,EAAE,GAAGmD,KAAKiF,MAAMP,GAAI,OAAO7H,EAAEe,QAAQ3B,EAAEY,EAAE2H,EAAK,IAAIvI,EAAEY,EAAEe,QAAQf,EAGtCqI,CAAOR,EAAEzI,GAF1D,SAAgByI,EAAEzI,GAAG,IAAIY,EAAE,GAAG6H,EAAG,OAAO7H,EAAEe,QAAQ3B,EAAEY,EAAE2H,EAAK,IAAIvI,EAAEY,EAAEe,QAAQf,EAEiBsI,CAAtBnF,KAAKiF,MAAMP,GAAoBzI,GACrG,SAASmJ,EAAU1H,EAAG/B,GAAiB,OAAZA,EAAIA,GAAK,EAAU+B,EAAEE,QAAU,EAAIjC,GAA8B,MAAR,GAAhB+B,EAAE2H,WAAW1J,KAA6C,MAAR,GAAlB+B,EAAE2H,WAAW1J,EAAE,KAA6C,MAAR,GAAlB+B,EAAE2H,WAAW1J,EAAE,KAA6C,MAAR,GAAlB+B,EAAE2H,WAAW1J,EAAE,KAA6C,MAAR,GAAlB+B,EAAE2H,WAAW1J,EAAE,KAA6C,KAAR,GAAlB+B,EAAE2H,WAAW1J,EAAE,KAA4C,MAAR,GAAlB+B,EAAE2H,WAAW1J,EAAE,IAC5R,IAAI2J,EAAO,CACV,CAAC,MAAO,UACR,CAAC,MAAO,UACR,CAAC,MAAO,WACR,CAAC,MAAO,aACR,CAAC,MAAO,YACR,CAAC,MAAO,UACR,CAAC,MAAO,aAELC,EAAS,CACZ,CAAC,IAAK,MAAO,WACb,CAAC,IAAK,MAAO,YACb,CAAC,IAAK,MAAO,SACb,CAAC,IAAK,MAAO,SACb,CAAC,IAAK,MAAO,OACb,CAAC,IAAK,MAAO,QACb,CAAC,IAAK,MAAO,QACb,CAAC,IAAK,MAAO,UACb,CAAC,IAAK,MAAO,aACb,CAAC,IAAK,MAAO,WACb,CAAC,IAAK,MAAO,YACb,CAAC,IAAK,MAAO,aAEd,SAASC,EAAW3I,GACnBA,EAAE,GAAK,UACPA,EAAE,GAAK,IACPA,EAAE,GAAK,OACPA,EAAE,GAAK,QACPA,EAAE,GAAK,WACPA,EAAE,GAAK,KACPA,EAAE,IAAK,QACPA,EAAE,IAAK,WACPA,EAAE,IAAK,QACPA,EAAE,IAAK,UACPA,EAAE,IAAK,SACPA,EAAE,IAAK,WACPA,EAAE,IAAK,QACPA,EAAE,IAAK,SACPA,EAAE,IAAK,aACPA,EAAE,IAAK,gBACPA,EAAE,IAAK,OACPA,EAAE,IAAK,UACPA,EAAE,IAAK,cACPA,EAAE,IAAK,iBACPA,EAAE,IAAK,sBACPA,EAAE,IAAK,sBACPA,EAAE,IAAK,2BACPA,EAAE,IAAK,QACPA,EAAE,IAAK,YACPA,EAAE,IAAK,SACPA,EAAE,IAAK,WACPA,EAAE,IAAK,IACPA,EAAE,IAAK,2BACPA,EAAE,OAAQ,UAGX,IAAI4I,EAAY,GAEhB,SAASC,EAAKpB,EAAGqB,EAAGC,GAMnB,IALA,IAAIC,EAAMvB,EAAI,GAAK,EAAI,EACnBwB,EAAIxB,EAAIuB,EACRE,EAAM,EAAGC,EAAM,EAAGC,EAAI,EACtBC,EAAM,EAAGC,EAAM,EAAGC,EAAI,EACtBC,EAAIrG,KAAKsG,MAAMR,GACbK,EAAMR,IAEXM,GADAI,EAAIrG,KAAKsG,MAAMR,IACPE,EAAMD,EACdK,EAAIC,EAAIF,EAAMD,IACVJ,EAAIO,EAAK,QACbP,EAAI,GAAKA,EAAIO,GACbN,EAAMC,EAAKA,EAAMC,EACjBC,EAAMC,EAAKA,EAAMC,EAGlB,GADGA,EAAIT,IAAQQ,EAAMR,GAAKS,EAAIF,EAAKD,EAAIF,IAAcK,EAAID,EAAKF,EAAID,KAC9DJ,EAAO,MAAO,CAAC,EAAGC,EAAMI,EAAGG,GAC/B,IAAIG,EAAIvG,KAAKsG,MAAMT,EAAMI,EAAEG,GAC3B,MAAO,CAACG,EAAGV,EAAII,EAAIM,EAAEH,EAAGA,GAEzB,SAASI,EAAgB9B,EAAE+B,EAAKC,GAC/B,GAAGhC,EAAI,SAAWA,EAAI,EAAG,OAAO,KAChC,IAAIiC,EAAU,EAAFjC,EAAMkC,EAAO5G,KAAKsG,MAAM,OAAS5B,EAAIiC,IAAQE,EAAI,EACzDC,EAAK,GACLC,EAAI,CAACpB,EAAEgB,EAAMK,EAAEJ,EAAMK,EAAE,OAAOvC,EAAEiC,GAAMC,EAAKM,EAAE,EAAEnL,EAAE,EAAEE,EAAE,EAAEkL,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEd,EAAE,GAOzE,GANGvG,KAAKsH,IAAIP,EAAIE,GAAK,OAAMF,EAAIE,EAAI,GAChCR,GAAQA,EAAKc,WAAUZ,GAAQ,MAC/BI,EAAIE,EAAI,QACVF,EAAIE,EAAI,EACK,SAARL,IAAiBG,EAAIC,EAAIJ,EAAO,IAAKD,IAAQI,EAAIpB,IAE3C,KAATgB,EAAcG,EAAOJ,EAAK,CAAC,KAAK,GAAG,IAAM,CAAC,KAAK,EAAE,IAAKG,EAAI,OACxD,GAAY,IAATF,EAAaG,EAAOJ,EAAK,CAAC,KAAK,EAAE,IAAM,CAAC,KAAK,EAAE,GAAIG,EAAI,MAC1D,CACDF,EAAO,MAAMA,EAEhB,IAAI1K,EAAI,IAAIuL,KAAK,KAAM,EAAG,GAC1BvL,EAAEwL,QAAQxL,EAAEyL,UAAYf,EAAO,GAC/BG,EAAO,CAAC7K,EAAE0L,cAAe1L,EAAE2L,WAAW,EAAE3L,EAAEyL,WAC1Cb,EAAM5K,EAAE4L,SACLlB,EAAO,KAAIE,GAAOA,EAAM,GAAK,GAC7BH,IAAIG,EA+DqB,GAxD7B,OALAE,EAAIG,EAAIJ,EAAK,GAAIC,EAAIhL,EAAI+K,EAAK,GAAIC,EAAI9K,EAAI6K,EAAK,GAC/CC,EAAIM,EAAIT,EAAO,GAAIA,EAAO5G,KAAKsG,MAAMM,EAAO,IAC5CG,EAAIK,EAAIR,EAAO,GAAIA,EAAO5G,KAAKsG,MAAMM,EAAO,IAC5CG,EAAII,EAAIP,EACRG,EAAIR,EAAIM,EACDE,EAjDRvB,EAAWC,GAmDX5D,EAAI2E,gBAAkBA,EACtB,IAAIsB,EAAW,IAAIN,KAAK,KAAM,GAAI,GAAI,EAAG,EAAG,GACxCO,EAAWD,EAASE,UACpBC,EAAW,IAAIT,KAAK,KAAM,EAAG,EAAG,EAAG,EAAG,GAC1C,SAASU,EAAcxD,EAAG6C,GACzB,IAAIY,EAAQzD,EAAEsD,UAGd,OAFGT,EAAUY,GAAS,UACdzD,GAAKuD,IAAUE,GAAS,QACxBA,GAASJ,EAAoE,KAAxDrD,EAAE0D,oBAAsBN,EAASM,uBAAiC,MAGhGvG,EAAIwG,aADJ,SAAyB3D,GAAK,OAAOA,EAAE9C,SAAS,KAEhD,IAAI0G,EAAkB,WACtB,IAAIC,EAAO,kBAAmBC,EAAO,QAASC,EAAO,iBAAkBC,EAAO,WAAYC,EAAO,eAgBjG,SAASC,EAAKxM,GACb,OAAOA,EAAEyM,QAAQ,MAAQ,EAAIzM,EAAE0M,QAAQN,EAAK,IAAIM,QAAQP,EAAK,OAASnM,EAEvE,OAAO,SAAyBsI,GAC/B,IAAuDtI,EAAnD2M,EAAI/I,KAAKsG,MAAMtG,KAAKW,IAAIX,KAAKsH,IAAI5C,IAAI1E,KAAKgJ,QAK9C,OAJuB5M,EAApB2M,IAAM,GAAKA,IAAM,EAAOrE,EAAEuE,YAAY,GAAGF,GACpC/I,KAAKsH,IAAIyB,IAAM,EArBxB,SAAcrE,GACb,IAAIwE,EAAKxE,EAAE,EAAE,GAAG,GACZtI,EAAIwM,EAAKlE,EAAEyE,QAAQ,KAAM,OAAG/M,EAAEwB,QAAUsL,IAC5C9M,EAAIsI,EAAEuE,YAAY,KAAUrL,QAAUsL,EADgB9M,EAE/CsI,EAAE0E,cAAc,GAiBOC,CAAK3E,GACrB,KAANqE,EAAcrE,EAAEyE,QAAQ,IAAIG,OAAO,EAAE,IAhB9C,SAAc5E,GACb,IAAItI,EAAIsI,EAAEyE,QAAQ,IAAIL,QAAQP,EAAK,OAEnC,OADGnM,EAAEwB,QAAU8G,EAAE,EAAE,GAAG,MAAKtI,EAAIsI,EAAEuE,YAAY,IACtC7M,EAcEmN,CAAK7E,GACPkE,EAbR,SAAcxM,GACb,IAAI,IAAIT,EAAI,EAAGA,GAAKS,EAAEwB,SAAUjC,EAAG,GAAgC,MAAV,GAAlBS,EAAEiJ,WAAW1J,IAAoB,OAAOS,EAAE0M,QAAQL,EAAK,OAAOK,QAAQJ,EAAK,KAAKI,QAAQ,IAAI,KAAKA,QAAQH,EAAK,SACrJ,OAAOvM,EAWKoN,CAAKpN,KA1BI,GA6BtB,SAASqN,EAAY/E,EAAG+B,GACvB,cAAc/B,GACb,IAAK,SAAU,OAAOA,EACtB,IAAK,UAAW,OAAOA,EAAI,OAAS,QACpC,IAAK,SAAU,OAAU,EAAFA,KAASA,EAAIA,EAAE9C,SAAS,IAAM0G,EAAgB5D,GACrE,IAAK,YAAa,MAAO,GACzB,IAAK,SACJ,GAAQ,MAALA,EAAW,MAAO,GACrB,GAAGA,aAAa8C,KAAM,OAAO1F,EAAO,GAAIoG,EAAcxD,EAAG+B,GAAQA,EAAKc,UAAWd,GAEnF,MAAM,IAAIiD,MAAM,wCAA0ChF,GAK3D,SAASiF,EAAWjL,EAAMkL,EAAKC,EAAKC,GACnC,IAAiC/C,EAA7B3K,EAAE,GAAI2N,EAAG,EAAGC,EAAG,EAAG9C,EAAI2C,EAAI3C,EAAQ+C,EAAO,EAC7C,OAAOvL,GACN,KAAK,GACJwI,EAAI2C,EAAI3C,EAAI,IAEb,KAAK,IACL,OAAO0C,EAAIhM,QACV,KAAK,EAAG,KAAK,EAAGmJ,EAAMG,EAAI,IAAK+C,EAAO,EAAG,MACzC,QAASlD,EAAMG,EAAI,IAAO+C,EAAO,EAChC,MACF,KAAK,IACL,OAAOL,EAAIhM,QACV,KAAK,EAAG,KAAK,EAAGmJ,EAAM8C,EAAI9N,EAAGkO,EAAOL,EAAIhM,OAAQ,MAChD,KAAK,EAAG,OAAO2H,EAAOsE,EAAI9N,EAAE,GAAG,GAC/B,KAAK,EAAG,OAAOwJ,EAAOsE,EAAI9N,EAAE,GAAG,GAC/B,QAAS,OAAOwJ,EAAOsE,EAAI9N,EAAE,GAAG,GAC/B,MACF,KAAK,IACL,OAAO6N,EAAIhM,QACV,KAAK,EAAG,KAAK,EAAGmJ,EAAM8C,EAAI5N,EAAGgO,EAAOL,EAAIhM,OAAQ,MAChD,KAAK,EAAG,OAAO0H,EAAKuE,EAAItD,GAAG,GAC3B,QAAS,OAAOjB,EAAKuE,EAAItD,GAAG,GAC3B,MACF,KAAK,IACL,OAAOqD,EAAIhM,QACV,KAAK,EAAG,KAAK,EAAGmJ,EAAM,GAAG8C,EAAI1C,EAAE,IAAI,GAAI8C,EAAOL,EAAIhM,OAAQ,MAC1D,QAAS,KAAM,oBAAsBgM,EACpC,MACF,KAAK,GACL,OAAOA,EAAIhM,QACV,KAAK,EAAG,KAAK,EAAGmJ,EAAM8C,EAAI1C,EAAG8C,EAAOL,EAAIhM,OAAQ,MAChD,QAAS,KAAM,oBAAsBgM,EACpC,MACF,KAAK,GACL,OAAOA,EAAIhM,QACV,KAAK,EAAG,KAAK,EAAGmJ,EAAM8C,EAAIzC,EAAG6C,EAAOL,EAAIhM,OAAQ,MAChD,QAAS,KAAM,sBAAwBgM,EACtC,MACF,KAAK,IACJ,GAAU,KAAPA,GAAqB,MAAPA,GAAsB,MAAPA,GAAsB,OAAPA,GAAuB,QAAPA,EAAe,KAAM,sBAAwBA,EAC5G,OAAa,IAAVC,EAAI5C,GAAmB,KAAP2C,GAAqB,MAAPA,GACvBI,EAAVF,GAAO,EAAgB,IAARA,EAAY,IAAO,IAChB,IAARA,EAAY,GAAK,GAC3BC,EAAK/J,KAAKiF,MAAM,GAAM4E,EAAIxC,EAAIwC,EAAI5C,MACzB,GAAG+C,IAAID,EAAK,GACV,MAARH,EAA2B,IAAPG,EAAW,IAAM,GAAGA,EAAGC,GAC9C5N,EAAIqI,EAAKsF,EAAG,EAAID,GACL,OAARF,EAAqBxN,EAAEkN,OAAO,EAAE,GAC5B,IAAMlN,EAAEkN,OAAO,EAAEM,EAAIhM,OAAO,KARmB6G,EAAKoF,EAAIxC,EAAGuC,EAAIhM,QASvE,KAAK,GACL,OAAOgM,GACN,IAAK,MAAO,IAAK,OAAQ7C,EAAY,GAAN8C,EAAIlE,EAAKkE,EAAI1C,EAAG,MAC/C,IAAK,MAAO,IAAK,OAAQJ,EAAuB,IAAV,GAAN8C,EAAIlE,EAAKkE,EAAI1C,GAAM0C,EAAIzC,EAAG,MAC1D,IAAK,MAAO,IAAK,OAAQL,EAAkC,IAAV,IAAV,GAAN8C,EAAIlE,EAAKkE,EAAI1C,GAAM0C,EAAIzC,GAAMpH,KAAKiF,MAAM4E,EAAIxC,EAAEwC,EAAI5C,GAAI,MACvF,QAAS,KAAM,uBAAyB2C,EACvCK,EAAsB,IAAfL,EAAIhM,OAAe,EAAI,EAAG,MACnC,KAAK,IACJmJ,EAAMG,EAAG+C,EAAO,EAElB,OAAGA,EAAO,EAAUxF,EAAKsC,EAAKkD,GAAmB,GAGlD,SAASC,EAASxM,GAEjB,GAAGA,EAAEE,QADG,EACU,OAAOF,EAEzB,IADA,IAAIyM,EAAKzM,EAAEE,OAFH,EAEgBxB,EAAIsB,EAAE4L,OAAO,EAAEa,GACjCA,GAAGzM,EAAEE,OAAQuM,GAHX,EAGiB/N,IAAIA,EAAEwB,OAAS,EAAI,IAAM,IAAMF,EAAE4L,OAAOa,EAHzD,GAIR,OAAO/N,EApFRyF,EAAIuI,aAAe9B,EAanBzG,EAAIwI,SAAWZ,EAyEf,IAAIa,EAAY,WAChB,IAAIC,EAAO,KAoCX,IAAIC,EAAQ,yBASZ,IAAIC,EAAO,iBACPC,EAAa,WACbC,EAAQ,sBACZ,SAASC,EAAMC,GAEd,IADA,IAAYC,EAAR1O,EAAI,GACAT,EAAI,EAAGA,GAAKkP,EAAIjN,SAAUjC,EAAG,OAAQmP,EAAGD,EAAIxF,WAAW1J,IAC9D,KAAK,GAAI,MACT,KAAK,GAAIS,GAAI,IAAK,MAClB,KAAK,GAAIA,GAAI,IAAK,MAClB,QAASA,GAAI2O,OAAOC,aAAaF,GAElC,OAAO1O,EAER,SAAS6O,EAAIpB,EAAK5N,GAAK,IAAIiP,EAAKlL,KAAK+E,IAAI,GAAG9I,GAAI,MAAO,GAAI+D,KAAKiF,MAAM4E,EAAMqB,GAAIA,EAChF,SAASC,EAAItB,EAAK5N,GACjB,OAAIA,GAAK,GAAK+D,KAAKiF,OAAO4E,EAAI7J,KAAKsG,MAAMuD,IAAM7J,KAAK+E,IAAI,GAAG9I,KAAK2B,OACxD,EAEDoC,KAAKiF,OAAO4E,EAAI7J,KAAKsG,MAAMuD,IAAM7J,KAAK+E,IAAI,GAAG9I,IASrD,SAASmP,EAAc1M,EAAMkL,EAAKC,GACjC,GAA0B,KAAvBnL,EAAK2G,WAAW,KAAcuE,EAAIyB,MAAMX,GAAa,CACvD,IAAIY,EAAO1B,EAAId,QAAQ,OAAO,IAAIA,QAAQ,MAAM,IAAIA,QAAQ,KAAK,IACjE,OAAGe,GAAO,EAAUuB,EAAc,IAAKE,EAAMzB,GACtC,IAAMuB,EAAc,IAAKE,GAAOzB,GAAO,IAE/C,GAAsC,KAAnCD,EAAIvE,WAAWuE,EAAIhM,OAAS,GAAW,OAzE3C,SAAsBc,EAAMkL,EAAKC,GAEhC,IADA,IAAItH,EAAMqH,EAAIhM,OAAS,EACS,KAA1BgM,EAAIvE,WAAW9C,EAAI,MAAaA,EACtC,OAAO+H,EAAU5L,EAAMkL,EAAIN,OAAO,EAAE/G,GAAMsH,EAAM7J,KAAK+E,IAAI,GAAG,GAAG6E,EAAIhM,OAAO2E,KAsEzBgJ,CAAa7M,EAAMkL,EAAKC,GACzE,IAAyB,IAAtBD,EAAIf,QAAQ,KAAa,OA9E7B,SAAuBnK,EAAMkL,EAAKC,GACjC,IAAI2B,EAAO5B,EAAId,QAAQyB,EAAK,IAAKkB,EAAM7B,EAAIhM,OAAS4N,EAAK5N,OACzD,OAAO0M,EAAU5L,EAAM8M,EAAM3B,EAAM7J,KAAK+E,IAAI,GAAG,EAAE0G,IAAQjH,EAAK,IAAIiH,GA4E/BC,CAAchN,EAAMkL,EAAKC,GAC5D,IAAyB,IAAtBD,EAAIf,QAAQ,KAAa,OAtE7B,SAAS8C,EAAc/B,EAAKC,GAC3B,IAAIzN,EACAmG,EAAMqH,EAAIf,QAAQ,KAAOe,EAAIf,QAAQ,KAAO,EAChD,GAAGe,EAAIyB,MAAM,eAAgB,CAC5B,GAAU,GAAPxB,EAAU,MAAO,SACf,GAAGA,EAAM,EAAG,MAAO,IAAM8B,EAAc/B,GAAMC,GAClD,IAAI+B,EAAShC,EAAIf,QAAQ,MAAqB,IAAZ+C,IAAeA,EAAOhC,EAAIf,QAAQ,MACpE,IAAIgD,EAAK7L,KAAKsG,MAAMtG,KAAKW,IAAIkJ,GAAK7J,KAAKgJ,QAAQ4C,EAG/C,GAFGC,EAAK,IAAGA,GAAMD,IAEM,KADvBxP,GAAKyN,EAAI7J,KAAK+E,IAAI,GAAG8G,IAAK5C,YAAY1G,EAAI,GAAGqJ,EAAOC,GAAID,IACnD/C,QAAQ,KAAa,CACzB,IAAIiD,EAAQ9L,KAAKsG,MAAMtG,KAAKW,IAAIkJ,GAAK7J,KAAKgJ,QAG1C,KAFuB,IAApB5M,EAAEyM,QAAQ,KAAazM,EAAIA,EAAEmI,OAAO,GAAK,IAAMnI,EAAEkN,OAAO,GAAK,MAAQwC,EAAQ1P,EAAEwB,OAAOiO,GACpFzP,GAAK,MAAQ0P,EAAQD,GACF,OAAlBzP,EAAEkN,OAAO,EAAE,IAEhBlN,GADAA,EAAIA,EAAEmI,OAAO,GAAKnI,EAAEkN,OAAO,EAAEsC,GAAU,IAAMxP,EAAEkN,OAAO,EAAEsC,IAClD9C,QAAQ,aAAa,MAAMA,QAAQ,QAAQ,MAElD1M,EAAIA,EAAE0M,QAAQ,MAAM,KAErB1M,EAAIA,EAAE0M,QAAQ,4BAA2B,SAASiD,EAAGC,EAAGC,EAAGC,GAAM,OAAOF,EAAKC,EAAKC,EAAG5C,OAAO,GAAGsC,EAAOC,GAAID,GAAU,IAAMM,EAAG5C,OAAOuC,GAAM,YACpIzP,EAAIyN,EAAIT,cAAc7G,GAG7B,OAFGqH,EAAIyB,MAAM,WAAajP,EAAEiP,MAAM,cAAajP,EAAIA,EAAEkN,OAAO,EAAElN,EAAEwB,OAAO,GAAK,IAAMxB,EAAEmI,OAAOnI,EAAEwB,OAAO,IACjGgM,EAAIyB,MAAM,QAAUjP,EAAEiP,MAAM,SAAQjP,EAAIA,EAAE0M,QAAQ,MAAM,MACpD1M,EAAE0M,QAAQ,IAAI,KA8Cc6C,CAAc/B,EAAKC,GACtD,GAAyB,KAAtBD,EAAIvE,WAAW,GAAW,MAAO,IAAI+F,EAAc1M,EAAKkL,EAAIN,OAAsB,KAAfM,EAAIrF,OAAO,GAAQ,EAAE,GAAGsF,GAC9F,IAAIzN,EACAK,EAAG0P,EAAIC,EAAIC,EAAOrM,KAAKsH,IAAIuC,GAAMyC,EAAOzC,EAAM,EAAI,IAAM,GAC5D,GAAGD,EAAIyB,MAAM,SAAU,OAAOiB,EAAOtH,EAAMqH,EAAKzC,EAAIhM,QACpD,GAAGgM,EAAIyB,MAAM,WAEZ,MAD2B,OAA3BjP,EAAI4I,EAAM6E,EAAI,MAAkBzN,EAAI,IAC7BA,EAAEwB,OAASgM,EAAIhM,OAASxB,EAAIwO,EAAMhB,EAAIN,OAAO,EAAEM,EAAIhM,OAAOxB,EAAEwB,SAAWxB,EAE/E,GAAIK,EAAImN,EAAIyB,MAAMb,GAAS,OApD5B,SAAsB/N,EAAG4P,EAAMC,GAC9B,IAAIC,EAAMC,SAAS/P,EAAE,GAAG,IAAKgQ,EAAKzM,KAAKiF,MAAMoH,EAAOE,GAAMG,EAAO1M,KAAKsG,MAAMmG,EAAGF,GAC3EI,EAAOF,EAAKC,EAAKH,EAAMK,EAAML,EACjC,OAAOD,GAAiB,IAATI,EAAa,GAAK,GAAGA,GAAQ,KAAe,IAARC,EAAYnI,EAAK,IAAK/H,EAAE,GAAGmB,OAAS,EAAInB,EAAE,GAAGmB,QAAU+G,EAAKgI,EAAIlQ,EAAE,GAAGmB,QAAUnB,EAAE,GAAK,IAAMA,EAAE,GAAKgI,EAAKmI,EAAInQ,EAAE,GAAGmB,SAiDlIiP,CAAapQ,EAAG4P,EAAMC,GACxD,GAAG1C,EAAIyB,MAAM,UAAW,OAAOiB,EAAOtH,EAAMqH,EAAKzC,EAAIhM,OAASgM,EAAIf,QAAQ,MAC1E,GAAIpM,EAAImN,EAAIyB,MAAMZ,GAEjB,OADArO,EAAI6O,EAAIpB,EAAKpN,EAAE,GAAGmB,QAAQkL,QAAQ,aAAa,MAAM8B,EAAMnO,EAAE,KAAKqM,QAAQ,MAAM,IAAI8B,EAAMnO,EAAE,KAAKqM,QAAQ,YAAW,SAASiD,EAAIC,GAAM,MAAO,IAAMA,EAAKxH,EAAK,IAAKoG,EAAMnO,EAAE,IAAImB,OAAOoO,EAAGpO,YAC3J,IAAvBgM,EAAIf,QAAQ,MAAezM,EAAIA,EAAE0M,QAAQ,OAAO,KAGxD,GADAc,EAAMA,EAAId,QAAQ,YAAa,MAC3BrM,EAAImN,EAAIyB,MAAM,gBACjB,OAAOiB,EAAOrB,EAAIoB,EAAM5P,EAAE,GAAGmB,QAAQkL,QAAQ,kBAAkB,OAAOA,QAAQ,YAAY,OAAOA,QAAQ,OAAOrM,EAAE,GAAGmB,OAAO,KAAK,KAElI,GAAInB,EAAImN,EAAIyB,MAAM,qBAAuB,OAAOiB,EAAOpC,EAASlF,EAAMqH,EAAK,IAC3E,GAAI5P,EAAImN,EAAIyB,MAAM,qBACjB,OAAOxB,EAAM,EAAI,IAAMuB,EAAc1M,EAAMkL,GAAMC,GAAOK,EAAS,IAAIlK,KAAKsG,MAAMuD,GApClF,SAAeA,EAAK5N,GACnB,OAAIA,GAAK,GAAK+D,KAAKiF,OAAO4E,EAAI7J,KAAKsG,MAAMuD,IAAM7J,KAAK+E,IAAI,GAAG9I,KAAK2B,OACxD,EAED,EAgCiFkP,CAAMjD,EAAKpN,EAAE,GAAGmB,UAAY,IAAM6G,EAAK0G,EAAItB,EAAKpN,EAAE,GAAGmB,QAAQnB,EAAE,GAAGmB,QAE1J,GAAInB,EAAImN,EAAIyB,MAAM,YAAc,OAAOD,EAAc1M,EAAKkL,EAAId,QAAQ,SAAS,IAAIe,GACnF,GAAIpN,EAAImN,EAAIyB,MAAM,2BAGjB,OAFAjP,EAAIiI,EAAQ+G,EAAc1M,EAAMkL,EAAId,QAAQ,SAAS,IAAKe,IAC1DsC,EAAK,EACE9H,EAAQA,EAAQuF,EAAId,QAAQ,MAAM,KAAKA,QAAQ,SAAQ,SAASxE,GAAG,OAAO6H,EAAG/P,EAAEwB,OAAOxB,EAAEmI,OAAO4H,KAAU,MAAJ7H,EAAQ,IAAI,OAEzH,GAAGsF,EAAIyB,MAAMV,GAEZ,MAAO,KADPvO,EAAIgP,EAAc1M,EAAM,aAAcmL,IACvBP,OAAO,EAAE,GAAK,KAAOlN,EAAEkN,OAAO,EAAG,GAAK,IAAMlN,EAAEkN,OAAO,GAErE,IAAIyD,EAAK,GACT,GAAItQ,EAAImN,EAAIyB,MAAM,+BAUjB,OATAc,EAAKnM,KAAKC,IAAIxD,EAAE,GAAGmB,OAAO,GAC1BwO,EAAK1G,EAAK2G,EAAMrM,KAAK+E,IAAI,GAAGoH,GAAI,GAAG,GACnC/P,EAAI,GAAKkQ,EAEoB,MAD7BS,EAAKzC,EAAU,IAAK7N,EAAE,GAAI2P,EAAG,KACvB7H,OAAOwI,EAAGnP,OAAO,KAAWmP,EAAKA,EAAGzD,OAAO,EAAEyD,EAAGnP,OAAO,GAAK,KAClExB,GAAK2Q,EAAKtQ,EAAE,GAAK,IAAMA,EAAE,IACzBsQ,EAAKnI,EAAMwH,EAAG,GAAGD,IACXvO,OAASnB,EAAE,GAAGmB,SAAQmP,EAAKnC,EAAMnO,EAAE,GAAG6M,OAAO7M,EAAE,GAAGmB,OAAOmP,EAAGnP,SAAWmP,GAC7E3Q,GAAK2Q,EAGN,GAAItQ,EAAImN,EAAIyB,MAAM,iCAGjB,OAFAc,EAAKnM,KAAKC,IAAID,KAAKG,IAAI1D,EAAE,GAAGmB,OAAQnB,EAAE,GAAGmB,QAAQ,GAE1C0O,IADPF,EAAK1G,EAAK2G,EAAMrM,KAAK+E,IAAI,GAAGoH,GAAI,GAAG,IACjB,KAAKC,EAAG,GAAK,GAAK,MAAQ,KAAOA,EAAG,GAAKzH,EAAKyH,EAAG,GAAGD,GAAM1P,EAAE,GAAK,IAAMA,EAAE,GAAKmI,EAAMwH,EAAG,GAAGD,GAAK3H,EAAK,IAAK,EAAE2H,EAAG,EAAI1P,EAAE,GAAGmB,OAASnB,EAAE,GAAGmB,SAExJ,GAAInB,EAAImN,EAAIyB,MAAM,YAEjB,OADAjP,EAAI4I,EAAM6E,EAAK,GACZD,EAAIhM,QAAUxB,EAAEwB,OAAexB,EAC3BwO,EAAMhB,EAAIN,OAAO,EAAEM,EAAIhM,OAAOxB,EAAEwB,SAAWxB,EAEnD,GAAIK,EAAImN,EAAIyB,MAAM,uBAAyB,CAC1CjP,EAAI,GAAKyN,EAAIV,QAAQnJ,KAAKC,IAAIxD,EAAE,GAAGmB,OAAO,KAAKkL,QAAQ,YAAY,MACnEqD,EAAK/P,EAAEyM,QAAQ,KACf,IAAImE,EAAOpD,EAAIf,QAAQ,KAAOsD,EAAIc,EAAOrD,EAAIhM,OAASxB,EAAEwB,OAASoP,EACjE,OAAOpC,EAAMhB,EAAIN,OAAO,EAAE0D,GAAQ5Q,EAAIwN,EAAIN,OAAOM,EAAIhM,OAAOqP,IAE7D,GAAIxQ,EAAImN,EAAIyB,MAAM,sBAEjB,OADAc,EAAKhB,EAAItB,EAAKpN,EAAE,GAAGmB,QACZiM,EAAM,EAAI,IAAMuB,EAAc1M,EAAMkL,GAAMC,GAAOK,EAzE1D,SAAaL,GAAO,OAAGA,EAAM,YAAcA,GAAO,WAAmB,IAAIA,GAAO,EAAS,EAAJA,EAAUA,EAAI,EAAE,GAAY,GAAG7J,KAAKsG,MAAMuD,GAyE5DqD,CAAIrD,IAAMf,QAAQ,aAAa,OAAOA,QAAQ,SAAQ,SAASiD,GAAM,MAAO,OAASA,EAAGnO,OAAS,EAAI6G,EAAK,EAAE,EAAEsH,EAAGnO,QAAU,IAAMmO,KAAS,IAAMtH,EAAK0H,EAAG1P,EAAE,GAAGmB,QAE/N,OAAOgM,GACN,IAAK,aAAc,OAAOwB,EAAc1M,EAAM,WAAYmL,GAC1D,IAAK,UACL,IAAK,SACL,IAAK,QAAS,IAAIvF,EAAI4F,EAASlF,EAAMqH,EAAK,IAAK,MAAa,MAAN/H,EAAYgI,EAAOhI,EAAI,GAC7E,IAAK,aAAc,OAAO8G,EAAc1M,EAAM,aAAamL,GAAKf,QAAQ,OAAO,KAC/E,IAAK,WAAY,OAAOsC,EAAc1M,EAAM,WAAWmL,GAAKf,QAAQ,OAAO,KAG5E,MAAM,IAAIY,MAAM,uBAAyBE,EAAM,KAiChD,SAASuD,EAAczO,EAAMkL,EAAKC,GACjC,GAA0B,KAAvBnL,EAAK2G,WAAW,KAAcuE,EAAIyB,MAAMX,GAAa,CACvD,IAAIY,EAAO1B,EAAId,QAAQ,OAAO,IAAIA,QAAQ,MAAM,IAAIA,QAAQ,KAAK,IACjE,OAAGe,GAAO,EAAUsD,EAAc,IAAK7B,EAAMzB,GACtC,IAAMsD,EAAc,IAAK7B,GAAOzB,GAAO,IAE/C,GAAsC,KAAnCD,EAAIvE,WAAWuE,EAAIhM,OAAS,GAAW,OArC3C,SAAuBc,EAAMkL,EAAKC,GAEjC,IADA,IAAItH,EAAMqH,EAAIhM,OAAS,EACS,KAA1BgM,EAAIvE,WAAW9C,EAAI,MAAaA,EACtC,OAAO+H,EAAU5L,EAAMkL,EAAIN,OAAO,EAAE/G,GAAMsH,EAAM7J,KAAK+E,IAAI,GAAG,GAAG6E,EAAIhM,OAAO2E,KAkCzB6K,CAAc1O,EAAMkL,EAAKC,GAC1E,IAAyB,IAAtBD,EAAIf,QAAQ,KAAa,OAjC7B,SAAwBnK,EAAMkL,EAAKC,GAClC,IAAI2B,EAAO5B,EAAId,QAAQyB,EAAK,IAAKkB,EAAM7B,EAAIhM,OAAS4N,EAAK5N,OACzD,OAAO0M,EAAU5L,EAAM8M,EAAM3B,EAAM7J,KAAK+E,IAAI,GAAG,EAAE0G,IAAQjH,EAAK,IAAIiH,GA+B/B4B,CAAe3O,EAAMkL,EAAKC,GAC7D,IAAyB,IAAtBD,EAAIf,QAAQ,KAAa,OA9B7B,SAASyE,EAAe1D,EAAKC,GAC5B,IAAIzN,EACAmG,EAAMqH,EAAIf,QAAQ,KAAOe,EAAIf,QAAQ,KAAO,EAChD,GAAGe,EAAIyB,MAAM,eAAgB,CAC5B,GAAU,GAAPxB,EAAU,MAAO,SACf,GAAGA,EAAM,EAAG,MAAO,IAAMyD,EAAe1D,GAAMC,GACnD,IAAI+B,EAAShC,EAAIf,QAAQ,MAAqB,IAAZ+C,IAAeA,EAAOhC,EAAIf,QAAQ,MACpE,IAAIgD,EAAK7L,KAAKsG,MAAMtG,KAAKW,IAAIkJ,GAAK7J,KAAKgJ,QAAQ4C,EAG/C,GAFGC,EAAK,IAAGA,GAAMD,KACjBxP,GAAKyN,EAAI7J,KAAK+E,IAAI,GAAG8G,IAAK5C,YAAY1G,EAAI,GAAGqJ,EAAOC,GAAID,IAClDP,MAAM,QAAS,CACpB,IAAIS,EAAQ9L,KAAKsG,MAAMtG,KAAKW,IAAIkJ,GAAK7J,KAAKgJ,SACnB,IAApB5M,EAAEyM,QAAQ,KAAazM,EAAIA,EAAEmI,OAAO,GAAK,IAAMnI,EAAEkN,OAAO,GAAK,MAAQwC,EAAQ1P,EAAEwB,OAAOiO,GACpFzP,GAAK,MAAQ0P,EAAQD,GAC1BzP,EAAIA,EAAE0M,QAAQ,MAAM,KAErB1M,EAAIA,EAAE0M,QAAQ,4BAA2B,SAASiD,EAAGC,EAAGC,EAAGC,GAAM,OAAOF,EAAKC,EAAKC,EAAG5C,OAAO,GAAGsC,EAAOC,GAAID,GAAU,IAAMM,EAAG5C,OAAOuC,GAAM,YACpIzP,EAAIyN,EAAIT,cAAc7G,GAG7B,OAFGqH,EAAIyB,MAAM,WAAajP,EAAEiP,MAAM,cAAajP,EAAIA,EAAEkN,OAAO,EAAElN,EAAEwB,OAAO,GAAK,IAAMxB,EAAEmI,OAAOnI,EAAEwB,OAAO,IACjGgM,EAAIyB,MAAM,QAAUjP,EAAEiP,MAAM,SAAQjP,EAAIA,EAAE0M,QAAQ,MAAM,MACpD1M,EAAE0M,QAAQ,IAAI,KAUcwE,CAAe1D,EAAKC,GACvD,GAAyB,KAAtBD,EAAIvE,WAAW,GAAW,MAAO,IAAI8H,EAAczO,EAAKkL,EAAIN,OAAsB,KAAfM,EAAIrF,OAAO,GAAQ,EAAE,GAAGsF,GAC9F,IAAIzN,EACAK,EAAG0P,EAAIC,EAAIC,EAAOrM,KAAKsH,IAAIuC,GAAMyC,EAAOzC,EAAM,EAAI,IAAM,GAC5D,GAAGD,EAAIyB,MAAM,SAAU,OAAOiB,EAAO7H,EAAK4H,EAAKzC,EAAIhM,QACnD,GAAGgM,EAAIyB,MAAM,WAEZ,OADAjP,EAAK,GAAGyN,EAAiB,IAARA,IAAWzN,EAAI,IACzBA,EAAEwB,OAASgM,EAAIhM,OAASxB,EAAIwO,EAAMhB,EAAIN,OAAO,EAAEM,EAAIhM,OAAOxB,EAAEwB,SAAWxB,EAE/E,GAAIK,EAAImN,EAAIyB,MAAMb,GAAS,OAnK5B,SAAsB/N,EAAG4P,EAAMC,GAC9B,OAAOA,GAAiB,IAATD,EAAa,GAAK,GAAGA,GAAQ7H,EAAK,IAAK/H,EAAE,GAAGmB,OAAS,EAAInB,EAAE,GAAGmB,QAkK3C2P,CAAa9Q,EAAG4P,EAAMC,GACxD,GAAG1C,EAAIyB,MAAM,UAAW,OAAOiB,EAAO7H,EAAK4H,EAAKzC,EAAIhM,OAASgM,EAAIf,QAAQ,MACzE,GAAIpM,EAAImN,EAAIyB,MAAMZ,GAIjB,OAFArO,GADFA,GAAK,GAAGyN,GAAKf,QAAQ,aAAa,MAAM8B,EAAMnO,EAAE,KAAKqM,QAAQ,MAAM,IAAI8B,EAAMnO,EAAE,MACvEqM,QAAQ,YAAW,SAASiD,EAAIC,GACxC,MAAO,IAAMA,EAAKxH,EAAK,IAAKoG,EAAMnO,EAAE,IAAImB,OAAOoO,EAAGpO,YAClB,IAAvBgM,EAAIf,QAAQ,MAAezM,EAAIA,EAAE0M,QAAQ,OAAO,KAGxD,GADAc,EAAMA,EAAId,QAAQ,YAAa,MAC3BrM,EAAImN,EAAIyB,MAAM,gBACjB,OAAOiB,GAAQ,GAAGD,GAAMvD,QAAQ,kBAAkB,OAAOA,QAAQ,YAAY,OAAOA,QAAQ,OAAOrM,EAAE,GAAGmB,OAAO,KAAK,KAErH,GAAInB,EAAImN,EAAIyB,MAAM,qBAAuB,OAAOiB,EAAOpC,EAAU,GAAGmC,GACpE,GAAI5P,EAAImN,EAAIyB,MAAM,qBACjB,OAAOxB,EAAM,EAAI,IAAMsD,EAAczO,EAAMkL,GAAMC,GAAOK,EAAU,GAAGL,GAAQ,IAAMrF,EAAK,IAAI/H,EAAE,GAAGmB,QAElG,GAAInB,EAAImN,EAAIyB,MAAM,YAAc,OAAO8B,EAAczO,EAAKkL,EAAId,QAAQ,SAAS,IAAIe,GACnF,GAAIpN,EAAImN,EAAIyB,MAAM,2BAGjB,OAFAjP,EAAIiI,EAAQ8I,EAAczO,EAAMkL,EAAId,QAAQ,SAAS,IAAKe,IAC1DsC,EAAK,EACE9H,EAAQA,EAAQuF,EAAId,QAAQ,MAAM,KAAKA,QAAQ,SAAQ,SAASxE,GAAG,OAAO6H,EAAG/P,EAAEwB,OAAOxB,EAAEmI,OAAO4H,KAAU,MAAJ7H,EAAQ,IAAI,OAEzH,GAAGsF,EAAIyB,MAAMV,GAEZ,MAAO,KADPvO,EAAI+Q,EAAczO,EAAM,aAAcmL,IACvBP,OAAO,EAAE,GAAK,KAAOlN,EAAEkN,OAAO,EAAG,GAAK,IAAMlN,EAAEkN,OAAO,GAErE,IAAIyD,EAAK,GACT,GAAItQ,EAAImN,EAAIyB,MAAM,+BAUjB,OATAc,EAAKnM,KAAKC,IAAIxD,EAAE,GAAGmB,OAAO,GAC1BwO,EAAK1G,EAAK2G,EAAMrM,KAAK+E,IAAI,GAAGoH,GAAI,GAAG,GACnC/P,EAAI,GAAKkQ,EAEoB,MAD7BS,EAAKzC,EAAU,IAAK7N,EAAE,GAAI2P,EAAG,KACvB7H,OAAOwI,EAAGnP,OAAO,KAAWmP,EAAKA,EAAGzD,OAAO,EAAEyD,EAAGnP,OAAO,GAAK,KAClExB,GAAK2Q,EAAKtQ,EAAE,GAAK,IAAMA,EAAE,IACzBsQ,EAAKnI,EAAMwH,EAAG,GAAGD,IACXvO,OAASnB,EAAE,GAAGmB,SAAQmP,EAAKnC,EAAMnO,EAAE,GAAG6M,OAAO7M,EAAE,GAAGmB,OAAOmP,EAAGnP,SAAWmP,GAC7E3Q,GAAK2Q,EAGN,GAAItQ,EAAImN,EAAIyB,MAAM,iCAGjB,OAFAc,EAAKnM,KAAKC,IAAID,KAAKG,IAAI1D,EAAE,GAAGmB,OAAQnB,EAAE,GAAGmB,QAAQ,GAE1C0O,IADPF,EAAK1G,EAAK2G,EAAMrM,KAAK+E,IAAI,GAAGoH,GAAI,GAAG,IACjB,KAAKC,EAAG,GAAK,GAAK,MAAQ,KAAOA,EAAG,GAAKzH,EAAKyH,EAAG,GAAGD,GAAM1P,EAAE,GAAK,IAAMA,EAAE,GAAKmI,EAAMwH,EAAG,GAAGD,GAAK3H,EAAK,IAAK,EAAE2H,EAAG,EAAI1P,EAAE,GAAGmB,OAASnB,EAAE,GAAGmB,SAExJ,GAAInB,EAAImN,EAAIyB,MAAM,YAEjB,OADAjP,EAAI,GAAKyN,EACND,EAAIhM,QAAUxB,EAAEwB,OAAexB,EAC3BwO,EAAMhB,EAAIN,OAAO,EAAEM,EAAIhM,OAAOxB,EAAEwB,SAAWxB,EAEnD,GAAIK,EAAImN,EAAIyB,MAAM,sBAAwB,CACzCjP,EAAI,GAAKyN,EAAIV,QAAQnJ,KAAKC,IAAIxD,EAAE,GAAGmB,OAAO,KAAKkL,QAAQ,YAAY,MACnEqD,EAAK/P,EAAEyM,QAAQ,KACf,IAAImE,EAAOpD,EAAIf,QAAQ,KAAOsD,EAAIc,EAAOrD,EAAIhM,OAASxB,EAAEwB,OAASoP,EACjE,OAAOpC,EAAMhB,EAAIN,OAAO,EAAE0D,GAAQ5Q,EAAIwN,EAAIN,OAAOM,EAAIhM,OAAOqP,IAE7D,GAAIxQ,EAAImN,EAAIyB,MAAM,sBACjB,OAAOxB,EAAM,EAAI,IAAMsD,EAAczO,EAAMkL,GAAMC,GAAOK,EAAS,GAAGL,GAAKf,QAAQ,aAAa,OAAOA,QAAQ,SAAQ,SAASiD,GAAM,MAAO,OAASA,EAAGnO,OAAS,EAAI6G,EAAK,EAAE,EAAEsH,EAAGnO,QAAU,IAAMmO,KAAS,IAAMtH,EAAK,EAAEhI,EAAE,GAAGmB,QAE5N,OAAOgM,GACN,IAAK,UACL,IAAK,SACL,IAAK,QAAS,IAAItF,EAAI4F,EAAS,GAAGmC,GAAO,MAAa,MAAN/H,EAAYgI,EAAOhI,EAAI,GACvE,QACC,GAAGsF,EAAIyB,MAAM,aAAc,OAAO8B,EAAczO,EAAMkL,EAAI4D,MAAM,EAAE5D,EAAI6D,YAAY,MAAO5D,GAAOe,EAAMhB,EAAI4D,MAAM5D,EAAI6D,YAAY,OAElI,MAAM,IAAI/D,MAAM,uBAAyBE,EAAM,KAEhD,OAAO,SAAmBlL,EAAMkL,EAAKC,GACpC,OAAY,EAAJA,KAAWA,EAAMsD,EAAczO,EAAMkL,EAAKC,GAAOuB,EAAc1M,EAAMkL,EAAKC,IAlRnE,GAoRhB,SAAS6D,EAAU9D,GAGlB,IAFA,IAAI7C,EAAM,GACN4G,GAAS,EACLhS,EAAI,EAAGwO,EAAI,EAAGxO,EAAIiO,EAAIhM,SAAUjC,EAAG,OAAeiO,EAAIvE,WAAW1J,IACxE,KAAK,GACJgS,GAAUA,EAAQ,MACnB,KAAK,GAAI,KAAK,GAAI,KAAK,KACpBhS,EAAG,MACN,KAAK,GACJoL,EAAIA,EAAInJ,QAAUgM,EAAIN,OAAOa,EAAExO,EAAEwO,GACjCA,EAAIxO,EAAE,EAGR,GADAoL,EAAIA,EAAInJ,QAAUgM,EAAIN,OAAOa,IACf,IAAXwD,EAAiB,MAAM,IAAIjE,MAAM,WAAaE,EAAM,0BACvD,OAAO7C,EAERlF,EAAI+L,OAASF,EACb,IAAIG,EAAU,gBACd,SAASC,EAAYlE,GAEpB,IADA,IAAIjO,EAAI,EAAeK,EAAI,GAAII,EAAI,GAC7BT,EAAIiO,EAAIhM,QACb,OAAQ5B,EAAI4N,EAAIrF,OAAO5I,IACtB,IAAK,IAAQyJ,EAAUwE,EAAKjO,KAAIA,GAAI,GAAGA,IAAK,MAC5C,IAAK,IAAK,KAAsC,KAAzBiO,EAAIvE,aAAa1J,IAAcA,EAAIiO,EAAIhM,WAAsBjC,EAAG,MACvF,IAAK,KACL,IAAK,IAAKA,GAAG,EAAG,MAChB,IAAK,MAAOA,EAAG,MACf,IAAK,IAAK,IAAK,IACd,GAAuB,MAApBiO,EAAIrF,OAAO5I,EAAE,IAAkC,MAApBiO,EAAIrF,OAAO5I,EAAE,GAAY,OAAO,EAE/D,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAEvD,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAAO,EAC7E,IAAK,IAAK,IAAK,IACd,GAAsC,QAAnCiO,EAAIN,OAAO3N,EAAG,GAAGoS,cAAyB,OAAO,EACpD,GAAsC,UAAnCnE,EAAIN,OAAO3N,EAAG,GAAGoS,cAA2B,OAAO,IACpDpS,EAAG,MACN,IAAK,IAEJ,IADAS,EAAIJ,EACsB,MAApB4N,EAAIrF,OAAO5I,MAAgBA,EAAIiO,EAAIhM,QAAQxB,GAAKwN,EAAIrF,OAAO5I,GACjE,GAAGS,EAAEiP,MAAMwC,GAAU,OAAO,EAC5B,MACD,IAAK,IAEL,IAAK,IAAK,IAAK,IACd,KAAMlS,EAAIiO,EAAIhM,SAAW,YAAYiL,QAAQ7M,EAAE4N,EAAIrF,SAAS5I,KAAO,GAAS,MAAHK,GAA8B,KAAnB4N,EAAIrF,OAAO5I,EAAE,IAAa,KAAKkN,QAAQe,EAAIrF,OAAO5I,EAAE,KAAK,KAC7I,MACD,IAAK,IAAK,KAAMiO,EAAIrF,SAAS5I,KAAOK,IAAgB,MACpD,IAAK,MAAOL,EAAuB,KAAjBiO,EAAIrF,OAAO5I,IAA8B,KAAjBiO,EAAIrF,OAAO5I,MAAaA,EAAG,MACrE,IAAK,IAAK,IAAK,MAAOA,EAAG,MACzB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpF,KAAMA,EAAIiO,EAAIhM,QAAU,aAAaiL,QAAQe,EAAIrF,SAAS5I,KAAO,IAAgB,MAClF,IAAK,IACL,UAAWA,EAGb,OAAO,EAGR,SAASqS,EAASpE,EAAKlF,EAAG+B,EAAMwH,GAI/B,IAHA,IAA8CC,EAAI/D,EAAGW,EAAjD/D,EAAM,GAAI3K,EAAI,GAAIT,EAAI,EAAGK,EAAI,GAAImS,EAAI,IACrCC,EAAG,IAEDzS,EAAIiO,EAAIhM,QACb,OAAQ5B,EAAI4N,EAAIrF,OAAO5I,IACtB,IAAK,IACJ,IAAIyJ,EAAUwE,EAAKjO,GAAI,MAAM,IAAI+N,MAAM,0BAA4B1N,EAAI,OAAQ4N,GAC/E7C,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAE,WAAY/I,GAAG,EAAG,MAC/C,IAAK,IACJ,IAAIS,EAAE,GAAgC,MAA5B0O,EAAGlB,EAAIvE,aAAa1J,KAAcA,EAAIiO,EAAIhM,QAASxB,GAAK2O,OAAOC,aAAaF,GACtF/D,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAEtI,KAAMT,EAAG,MACtC,IAAK,KAAM,IAAIuN,EAAIU,EAAIrF,SAAS5I,GAAIkB,EAAW,MAANqM,GAAmB,MAANA,EAAaA,EAAI,IACtEnC,EAAIA,EAAInJ,QAAU,CAACf,EAAEA,EAAG6H,EAAEwE,KAAMvN,EAAG,MACpC,IAAK,IAAKoL,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAE,KAAM/I,GAAG,EAAG,MAClD,IAAK,IACJoL,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAEA,KAAM/I,EAAG,MACtC,IAAK,IAAK,IAAK,IACd,GAAuB,MAApBiO,EAAIrF,OAAO5I,EAAE,IAAkC,MAApBiO,EAAIrF,OAAO5I,EAAE,GAAY,CACtD,GAAO,MAAJuS,GAAyE,OAA7DA,EAAG1H,EAAgB9B,EAAG+B,EAA0B,MAApBmD,EAAIrF,OAAO5I,EAAE,KAA0B,MAAO,GACzFoL,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAEkF,EAAIN,OAAO3N,EAAE,IAAKwS,EAAMnS,EAAGL,GAAG,EAAG,MAG/D,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtDK,EAAIA,EAAEqS,cAEP,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAChE,GAAG3J,EAAI,EAAG,MAAO,GACjB,GAAO,MAAJwJ,GAAgD,OAApCA,EAAG1H,EAAgB9B,EAAG+B,IAAoB,MAAO,GACzD,IAAPrK,EAAIJ,IAAWL,EAAIiO,EAAIhM,QAAUgM,EAAIrF,OAAO5I,GAAG0S,gBAAkBrS,GAAGI,GAAGJ,EAC9D,MAANA,GAAmC,MAAtBmS,EAAIE,gBAAuBrS,EAAI,KACtC,MAANA,IAAWA,EAAIoS,GAClBrH,EAAIA,EAAInJ,QAAU,CAACf,EAAEb,EAAG0I,EAAEtI,GAAI+R,EAAMnS,EAAG,MACxC,IAAK,IAAK,IAAK,IACd,IAAIuK,EAAE,CAAC1J,EAAEb,EAAG0I,EAAE1I,GAKd,GAJO,MAAJkS,IAAUA,EAAG1H,EAAgB9B,EAAG+B,IACG,QAAnCmD,EAAIN,OAAO3N,EAAG,GAAGoS,eAAkC,MAAJG,IAAU3H,EAAE7B,EAAIwJ,EAAG/G,GAAK,GAAK,IAAM,KAAKZ,EAAE1J,EAAI,IAAKuR,EAAG,IAAIzS,GAAG,GACrE,UAAlCiO,EAAIN,OAAO3N,EAAE,GAAGoS,eAAoC,MAAJG,IAAU3H,EAAE7B,EAAIwJ,EAAG/G,GAAK,GAAK,KAAO,MAAMZ,EAAE1J,EAAI,IAAKlB,GAAG,EAAGyS,EAAG,MAC/G7H,EAAE1J,EAAI,MAAOlB,GACb,MAAJuS,GAAoB,MAAR3H,EAAE1J,EAAW,MAAO,GACnCkK,EAAIA,EAAInJ,QAAU2I,EAAG4H,EAAMnS,EAAG,MAC/B,IAAK,IAEJ,IADAI,EAAIJ,EACsB,MAApB4N,EAAIrF,OAAO5I,MAAgBA,EAAIiO,EAAIhM,QAAQxB,GAAKwN,EAAIrF,OAAO5I,GACjE,GAAmB,MAAhBS,EAAEoR,OAAO,GAAY,KAAM,4BAA8BpR,EAAI,IAChE,GAAGA,EAAEiP,MAAMwC,GAAU,CACpB,GAAO,MAAJK,GAAgD,OAApCA,EAAG1H,EAAgB9B,EAAG+B,IAAoB,MAAO,GAChEM,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAEtI,EAAEiS,eAC9BF,EAAM/R,EAAEmI,OAAO,QACNnI,EAAEyM,QAAQ,MAAQ,IAC3BzM,GAAKA,EAAEiP,MAAM,kBAAkB,IAAI,IAAI,IACnCyC,EAAYlE,KAAM7C,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAI6H,EAAEtI,KAElD,MAED,IAAK,IACJ,GAAS,MAAN8R,EAAY,CACP,IAAP9R,EAAIJ,IAAWL,EAAIiO,EAAIhM,QAAgC,OAArB5B,EAAE4N,EAAIrF,OAAO5I,KAAaS,GAAKJ,EACjE+K,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAEtI,GAAI,MAGlC,IAAK,IAAK,IAAK,IACP,IAAPA,EAAIJ,IAAWL,EAAIiO,EAAIhM,QAAU,YAAYiL,QAAQ7M,EAAE4N,EAAIrF,OAAO5I,KAAO,GAAGS,GAAKJ,EACjF+K,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAEtI,GAAI,MACjC,IAAK,IACG,IAAPA,EAAIJ,EAAS4N,EAAIrF,SAAS5I,KAAOK,GAAGI,GAAGJ,EACvC+K,EAAIA,EAAInJ,QAAU,CAACf,EAAEb,EAAG0I,EAAEtI,GAAI+R,EAAMnS,EAAG,MACxC,IAAK,MAAOL,EAAuB,KAAjBiO,EAAIrF,OAAO5I,IAA8B,KAAjBiO,EAAIrF,OAAO5I,MAAaA,EAAG,MACrE,IAAK,IAAK,IAAK,IAAKoL,EAAIA,EAAInJ,QAAU,CAACf,EAAU,IAAPoR,EAAS,IAAIjS,EAAI0I,EAAE1I,KAAML,EAAG,MACtE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7E,IAAPS,EAAIJ,EAASL,EAAIiO,EAAIhM,QAAU,aAAaiL,QAAQe,EAAIrF,SAAS5I,KAAO,GAAGS,GAAGwN,EAAIrF,OAAO5I,GACzFoL,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAEtI,GAAI,MACjC,IAAK,IAAK2K,EAAIA,EAAInJ,QAAU,CAACf,EAAEb,EAAG0I,EAAE1I,KAAML,EAAG,MAC7C,IAAK,IAAKoL,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAE,OAAQ/I,EAAG,MACjD,QACC,IAA2D,IAAxD,wCAAwCkN,QAAQ7M,GAAW,MAAM,IAAI0N,MAAM,0BAA4B1N,EAAI,OAAS4N,GACvH7C,EAAIA,EAAInJ,QAAU,CAACf,EAAE,IAAK6H,EAAE1I,KAAML,EAGrC,IAAqB2S,EAAjBC,EAAK,EAAGzE,EAAM,EAClB,IAAInO,EAAEoL,EAAInJ,OAAO,EAAGuQ,EAAI,IAAKxS,GAAK,IAAKA,EACtC,OAAOoL,EAAIpL,GAAGkB,GACb,IAAK,IAAK,IAAK,IAAKkK,EAAIpL,GAAGkB,EAAIuR,EAAID,EAAI,IAAQI,EAAK,IAAGA,EAAK,GAAG,MAC/D,IAAK,KACAD,EAAIvH,EAAIpL,GAAG+I,EAAE2G,MAAM,YAAWvB,EAAI9J,KAAKG,IAAI2J,EAAIwE,EAAI,GAAG1Q,OAAO,IAC9D2Q,EAAK,IAAGA,EAAK,GAEjB,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKJ,EAAIpH,EAAIpL,GAAGkB,EAAG,MACtD,IAAK,IAAgB,MAARsR,IAAepH,EAAIpL,GAAGkB,EAAI,IAAQ0R,EAAK,IAAGA,EAAK,IAAK,MACjE,IAAK,IACJ,MACD,IAAK,IACDA,EAAK,GAAKxH,EAAIpL,GAAG+I,EAAE2G,MAAM,UAASkD,EAAK,GACvCA,EAAK,GAAKxH,EAAIpL,GAAG+I,EAAE2G,MAAM,UAASkD,EAAK,GACvCA,EAAK,GAAKxH,EAAIpL,GAAG+I,EAAE2G,MAAM,UAASkD,EAAK,GAG7C,OAAOA,GACN,KAAK,EAAG,MACR,KAAK,EACJL,EAAGjH,GAAK,KAAOiH,EAAGjH,EAAI,IAAKiH,EAAG7G,GAC3B6G,EAAG7G,GAAM,KAAM6G,EAAG7G,EAAI,IAAK6G,EAAG9G,GAC9B8G,EAAG9G,GAAM,KAAM8G,EAAG9G,EAAI,IAAK8G,EAAG/G,GACjC,MACD,KAAK,EACJ+G,EAAGjH,GAAK,KAAOiH,EAAGjH,EAAI,IAAKiH,EAAG7G,GAC3B6G,EAAG7G,GAAM,KAAM6G,EAAG7G,EAAI,IAAK6G,EAAG9G,GAInC,IAAeoH,EAAXC,EAAO,GACX,IAAI9S,EAAE,EAAGA,EAAIoL,EAAInJ,SAAUjC,EAC1B,OAAOoL,EAAIpL,GAAGkB,GACb,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACxC,IAAK,IAAKkK,EAAIpL,GAAG+I,EAAI,GAAIqC,EAAIpL,GAAGkB,EAAI,IAAK,MACzC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClGkK,EAAIpL,GAAG+I,EAAIiF,EAAW5C,EAAIpL,GAAGkB,EAAEwI,WAAW,GAAI0B,EAAIpL,GAAG+I,EAAGwJ,EAAIpE,GACxD/C,EAAIpL,GAAGkB,EAAI,IAAK,MACjB,IAAK,IAAK,IAAK,IAEd,IADA2R,EAAK7S,EAAE,EACU,MAAXoL,EAAIyH,KACS,OAAjBxS,EAAE+K,EAAIyH,GAAI3R,IAAoB,MAANb,IACjB,MAANA,GAAmB,MAANA,IAA2B,MAAb+K,EAAIyH,EAAG,KAA+B,MAAhBzH,EAAIyH,EAAG,GAAG3R,GAA6B,MAAhBkK,EAAIyH,EAAG,GAAG3R,GAA6B,MAAhBkK,EAAIyH,EAAG,GAAG9J,IAC7F,MAAbqC,EAAIpL,GAAGkB,IAAoB,MAANb,GAAmB,MAANA,GAAmB,MAANA,IACzC,MAANA,IAA4B,MAAd+K,EAAIyH,GAAI9J,GAA2B,MAAdqC,EAAIyH,GAAI9J,GAA0B,MAAbqC,EAAIyH,EAAG,IAA6B,KAAfzH,EAAIyH,EAAG,GAAG3R,KAExFkK,EAAIpL,GAAG+I,GAAKqC,EAAIyH,GAAI9J,EACpBqC,EAAIyH,GAAM,CAAC9J,EAAE,GAAI7H,EAAE,OAAQ2R,EAE5BC,GAAQ1H,EAAIpL,GAAG+I,EACf/I,EAAI6S,EAAG,EAAG,MACX,IAAK,IAAKzH,EAAIpL,GAAGkB,EAAI,IAAKkK,EAAIpL,GAAG+I,EAAI+E,EAAY/E,EAAE+B,GAGrD,IAAaiI,EAAKC,EAAdC,EAAK,GACT,GAAGH,EAAK7Q,OAAS,EAAG,CACM,IAAtB6Q,EAAKpJ,WAAW,IAClBqJ,EAAOhK,EAAE,GAA0B,KAAvB+J,EAAKpJ,WAAW,IAAaX,EAAIA,EAC7CiK,EAAOrE,EAAU,IAAKmE,EAAMC,KAG5BC,EAAOrE,EAAU,IAAKmE,EADtBC,EAAOhK,EAAE,GAAKuJ,EAAO,GAAKvJ,EAAIA,GAE3BgK,EAAM,GAAK3H,EAAI,IAAkB,KAAZA,EAAI,GAAGlK,IAC9B8R,EAAOA,EAAKrF,OAAO,GACnBvC,EAAI,GAAGrC,EAAI,IAAMqC,EAAI,GAAGrC,IAG1B8J,EAAGG,EAAK/Q,OAAO,EACf,IAAIiR,EAAQ9H,EAAInJ,OAChB,IAAIjC,EAAE,EAAGA,EAAIoL,EAAInJ,SAAUjC,EAAG,GAAa,MAAVoL,EAAIpL,IAA0B,KAAZoL,EAAIpL,GAAGkB,GAAYkK,EAAIpL,GAAG+I,EAAEmE,QAAQ,MAAQ,EAAG,CAAEgG,EAAQlT,EAAG,MAC/G,IAAImT,EAAM/H,EAAInJ,OACd,GAAGiR,IAAU9H,EAAInJ,SAAiC,IAAvB+Q,EAAK9F,QAAQ,KAAa,CACpD,IAAIlN,EAAEoL,EAAInJ,OAAO,EAAGjC,GAAI,IAAIA,EACd,MAAVoL,EAAIpL,KAA0C,IAA5B,KAAKkN,QAAQ9B,EAAIpL,GAAGkB,KACtC2R,GAAIzH,EAAIpL,GAAG+I,EAAE9G,OAAO,GAAK4Q,GAAMzH,EAAIpL,GAAG+I,EAAE9G,OAAQmJ,EAAIpL,GAAG+I,EAAIiK,EAAKrF,OAAOkF,EAAG,EAAGzH,EAAIpL,GAAG+I,EAAE9G,SACjF4Q,EAAK,EAAGzH,EAAIpL,GAAG+I,EAAI,IACpBqC,EAAIpL,GAAG+I,EAAIiK,EAAKrF,OAAO,EAAGkF,EAAG,GAAIA,GAAM,GAC9CzH,EAAIpL,GAAGkB,EAAI,IACXiS,EAAQnT,GAEN6S,GAAI,GAAKM,EAAM/H,EAAInJ,SAAQmJ,EAAI+H,GAAOpK,EAAIiK,EAAKrF,OAAO,EAAEkF,EAAG,GAAKzH,EAAI+H,GAAOpK,QAE1E,GAAGmK,IAAU9H,EAAInJ,SAAiC,IAAvB+Q,EAAK9F,QAAQ,KAAa,CAEzD,IADA2F,EAAKG,EAAK9F,QAAQ,KAAK,EACnBlN,EAAEkT,EAAOlT,GAAI,IAAKA,EACrB,GAAa,MAAVoL,EAAIpL,KAA0C,IAA5B,KAAKkN,QAAQ9B,EAAIpL,GAAGkB,GAAzC,CAGA,IAFAsN,EAAEpD,EAAIpL,GAAG+I,EAAEmE,QAAQ,MAAM,GAAGlN,IAAIkT,EAAM9H,EAAIpL,GAAG+I,EAAEmE,QAAQ,KAAK,EAAE9B,EAAIpL,GAAG+I,EAAE9G,OAAO,EAC9EgR,EAAK7H,EAAIpL,GAAG+I,EAAE4E,OAAOa,EAAE,GACjBA,GAAG,IAAKA,EACVqE,GAAI,IAA6B,MAAvBzH,EAAIpL,GAAG+I,EAAEH,OAAO4F,IAAqC,MAAvBpD,EAAIpL,GAAG+I,EAAEH,OAAO4F,MAAayE,EAAKD,EAAKpK,OAAOiK,KAAQI,GAElG7H,EAAIpL,GAAG+I,EAAIkK,EACX7H,EAAIpL,GAAGkB,EAAI,IACXiS,EAAQnT,EAIT,IAFG6S,GAAI,GAAKM,EAAM/H,EAAInJ,SAAQmJ,EAAI+H,GAAOpK,EAAIiK,EAAKrF,OAAO,EAAEkF,EAAG,GAAKzH,EAAI+H,GAAOpK,GAC9E8J,EAAKG,EAAK9F,QAAQ,KAAK,EACnBlN,EAAEkT,EAAOlT,EAAEoL,EAAInJ,SAAUjC,EAC5B,GAAa,MAAVoL,EAAIpL,MAA4C,IAA7B,MAAMkN,QAAQ9B,EAAIpL,GAAGkB,IAAalB,IAAMkT,GAA9D,CAGA,IAFA1E,EAAEpD,EAAIpL,GAAG+I,EAAEmE,QAAQ,MAAM,GAAGlN,IAAIkT,EAAM9H,EAAIpL,GAAG+I,EAAEmE,QAAQ,KAAK,EAAE,EAC9D+F,EAAK7H,EAAIpL,GAAG+I,EAAE4E,OAAO,EAAEa,GACjBA,EAAEpD,EAAIpL,GAAG+I,EAAE9G,SAAUuM,EACvBqE,EAAGG,EAAK/Q,SAAQgR,GAAMD,EAAKpK,OAAOiK,MAEtCzH,EAAIpL,GAAG+I,EAAIkK,EACX7H,EAAIpL,GAAGkB,EAAI,IACXiS,EAAQnT,IAIX,IAAIA,EAAE,EAAGA,EAAEoL,EAAInJ,SAAUjC,EAAgB,MAAVoL,EAAIpL,IAAc,KAAKkN,QAAQ9B,EAAIpL,GAAGkB,IAAI,IACxE6R,EAAOT,EAAM,GAAKvJ,EAAI,GAAK/I,EAAE,GAAoB,MAAfoL,EAAIpL,EAAE,GAAG+I,GAAaA,EAAEA,EAC1DqC,EAAIpL,GAAG+I,EAAI4F,EAAUvD,EAAIpL,GAAGkB,EAAGkK,EAAIpL,GAAG+I,EAAGgK,GACzC3H,EAAIpL,GAAGkB,EAAI,KAEZ,IAAIkS,EAAS,GACb,IAAIpT,EAAE,EAAGA,IAAMoL,EAAInJ,SAAUjC,EAAgB,MAAVoL,EAAIpL,KAAYoT,GAAUhI,EAAIpL,GAAG+I,GACpE,OAAOqK,EAtMRlN,EAAImN,QAAUlB,EAwMdjM,EAAIoN,MAAQjB,EACZ,IAAIkB,EAAU,UACVC,EAAW,wCACf,SAASC,EAAQ1K,EAAG+H,GACnB,GAAS,MAANA,EAAY,OAAO,EACtB,IAAI4C,EAASC,WAAW7C,EAAG,IAC3B,OAAOA,EAAG,IACT,IAAK,IAAM,GAAG/H,GAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,IAAM,GAAG3K,EAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,IAAM,GAAG3K,EAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,KAAM,GAAG3K,GAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,KAAM,GAAG3K,GAAK2K,EAAQ,OAAO,EAAM,MACxC,IAAK,KAAM,GAAG3K,GAAK2K,EAAQ,OAAO,EAEnC,OAAO,EAuBR,SAASvN,EAAO8H,EAAIlF,EAAEtI,GACb,MAALA,IAAWA,EAAI,IAClB,IAAIoP,EAAO,GACX,cAAc5B,GACb,IAAK,SAC4B4B,EAAtB,UAAP5B,GAAmBxN,EAAEmT,OAAenT,EAAEmT,OAC7B3F,EACZ,MACD,IAAK,SACsB4B,EAAhB,IAAP5B,GAAaxN,EAAEmT,OAAenT,EAAEmT,QACX,MAAXnT,EAAEoT,MAAiBpT,EAAO,MAAIqJ,GAAWmE,GAGxD,GAAGxE,EAAUoG,EAAK,GAAI,OAAO/B,EAAY/E,EAAGtI,GACzCsI,aAAa8C,OAAM9C,EAAIwD,EAAcxD,EAAGtI,EAAEmL,WAC7C,IAAIkI,EApCL,SAAoBA,EAAG/K,GACtB,IAAIkF,EAAM8D,EAAU+B,GAChB7T,EAAIgO,EAAIhM,OAAQ8R,EAAM9F,EAAIhO,EAAE,GAAGiN,QAAQ,KAE3C,GADGjN,EAAE,GAAK8T,GAAK,KAAK9T,EACjBgO,EAAIhM,OAAS,EAAG,MAAM,IAAI8L,MAAM,iCAAmCE,EAAInG,KAAK,KAAO,KACtF,GAAgB,iBAANiB,EAAgB,MAAO,CAAC,EAAkB,IAAfkF,EAAIhM,QAAgB8R,GAAK,EAAE9F,EAAIA,EAAIhM,OAAO,GAAG,KAClF,OAAOgM,EAAIhM,QACV,KAAK,EAAGgM,EAAM8F,GAAK,EAAI,CAAC,UAAW,UAAW,UAAW9F,EAAI,IAAM,CAACA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,KAAM,MAClG,KAAK,EAAGA,EAAM8F,GAAK,EAAI,CAAC9F,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAAM,CAACA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,KAAM,MACzF,KAAK,EAAGA,EAAM8F,GAAK,EAAI,CAAC9F,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAAM,CAACA,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAI,KAGpF,IAAIwC,EAAK1H,EAAI,EAAIkF,EAAI,GAAKlF,EAAI,EAAIkF,EAAI,GAAKA,EAAI,GAC/C,IAA4B,IAAzBA,EAAI,GAAGf,QAAQ,OAAwC,IAAzBe,EAAI,GAAGf,QAAQ,KAAa,MAAO,CAACjN,EAAGwQ,GACxE,GAA4B,MAAzBxC,EAAI,GAAGyB,MAAM6D,IAA6C,MAAzBtF,EAAI,GAAGyB,MAAM6D,GAAkB,CAClE,IAAIS,EAAK/F,EAAI,GAAGyB,MAAM8D,GAClBS,EAAKhG,EAAI,GAAGyB,MAAM8D,GACtB,OAAOC,EAAQ1K,EAAGiL,GAAM,CAAC/T,EAAGgO,EAAI,IAAMwF,EAAQ1K,EAAGkL,GAAM,CAAChU,EAAGgO,EAAI,IAAM,CAAChO,EAAGgO,EAAU,MAAN+F,GAAoB,MAANC,EAAa,EAAI,IAE7G,MAAO,CAAChU,EAAGwQ,GAiBHyD,CAAWrE,EAAM9G,GACzB,GAAGU,EAAUqK,EAAE,IAAK,OAAOhG,EAAY/E,EAAGtI,GAC1C,IAAS,IAANsI,EAAYA,EAAI,YAAa,IAAS,IAANA,EAAaA,EAAI,aAC/C,GAAS,KAANA,GAAiB,MAALA,EAAW,MAAO,GACtC,OAAOsJ,EAASyB,EAAE,GAAI/K,EAAGtI,EAAGqT,EAAE,IAE/B,SAASK,EAAWlG,EAAKrH,GACxB,GAAiB,iBAAPA,EAAiB,CAC1BA,GAAOA,IAAQ,EACjB,IAAI,IAAI5G,EAAI,EAAGA,EAAI,MAAUA,EAC7B,GAAmBoU,MAAhBtK,EAAU9J,IACV,GAAG8J,EAAU9J,IAAMiO,EAAK,CAAErH,EAAM5G,EAAG,YADH4G,EAAM,IAAGA,EAAM5G,GAG/C4G,EAAM,IAAGA,EAAM,KAGjB,OADDkD,EAAUlD,GAAOqH,EACTrH,EAERV,EAAImO,KAAOF,EACXjO,EAAIoO,OAASxK,EACb5D,EAAIqO,UAAY,WAAuB,OAAOzK,GAC9C5D,EAAIsO,WAAa,SAAoBC,GACpC,IAAI,IAAIzU,EAAE,EAAM,KAAHA,IAAaA,OACXoU,IAAXK,EAAIzU,IAAkBmU,EAAWM,EAAIzU,GAAIA,IAE9CkG,EAAI2D,WAAaA,EACjB3D,EAAIC,OAASA,EAEbuO,CAASxO,GAEwD,oBAAtByO,oBAAmC5U,EAAOD,QAAUoG,I,6BCl2B/F,kCAIA,MAAM0O,EAAwB,CAC5BC,MAAO,CACLC,QAAS,QACT/R,KAAM,SACNgS,QAAS,SACTrS,MAAO,QACPsB,OAAQ,CACN,CAAE,YAAe,eACjB,CAAE,OAAU,UACZ,CAAE,aAAgB,gBAClB,CAAE,mBAAoB,WAExBgR,QAAS,cACTC,MAAO,GAETC,YAAa,CACXJ,QAAS,QACT/R,KAAM,SACNL,MAAO,wBACPsS,QAAS,GACTC,MAAO,GAETE,OAAQ,CACNL,QAAS,QACT/R,KAAM,SACNgS,QAAS,SACTrS,MAAO,SACPsB,OAAQ,CACN,CAAE,KAAQ,SACV,CAAE,KAAQ,SAEZgR,QAAS,QACTC,MAAO,GAETG,YAAa,GACbC,aAAc,CACZP,QAAS,QACT/R,KAAM,UACNL,MAAO,gBACP4S,aAAc,OACdN,SAAS,EACTC,MAAO,GAETM,aAAc,CACZT,QAAS,QACT/R,KAAM,UACNL,MAAO,gBACP4S,aAAc,OACdN,SAAS,EACTC,MAAO,GAETO,SAAU,CACRV,QAAS,QACT/R,KAAM,UACNL,MAAO,aACP4S,aAAc,OACdN,SAAS,EACTC,MAAO,GAETQ,SAAU,CACRX,QAAS,QACT/R,KAAM,UACNL,MAAO,gBACP4S,aAAc,OACdN,SAAS,EACTC,MAAO,GAETS,cAAe,CACbZ,QAAS,QACT/R,KAAM,SACNgS,QAAS,SACTrS,MAAO,kBACPsB,OAAQ,CACN,CAAE,OAAU,mBACZ,CAAE,SAAY,sBAEhBgR,QAAS,kBACTC,MAAO,GAETpN,YAAa,CACXiN,QAAS,QACT/R,KAAM,UACNL,MAAO,oBACPsS,SAAS,EACTC,MAAO,GAEThN,YAAa,CACX6M,QAAS,QACT/R,KAAM,UACNL,MAAO,iCACPsS,SAAS,EACTC,MAAO,GAETtN,aAAc,CACZmN,QAAS,QACT/R,KAAM,UACNL,MAAO,8BACPsS,SAAS,EACTC,MAAO,GAETU,qBAAsB,CACpBb,QAAS,QACT/R,KAAM,UACNL,MAAO,sCACPsS,SAAS,EACTC,MAAO,IAETW,YAAa,CACXd,QAAS,aACT/R,KAAM,UACNL,MAAO,sBACPsS,SAAS,EACTC,MAAO,GAETY,eAAgB,CACdf,QAAS,QACT/R,KAAM,UACNL,MAAO,YACPsS,SAAS,EACTC,MAAO,MA20DXnV,QAAQgW,oBAp0DR,MAqCE,YAAYC,EAAYC,EAAe5S,GACrCb,KAAKmF,MAAQ,eACbnF,KAAKa,OAASA,EAEdb,KAAKiG,QAAU,GACfjG,KAAK0T,WAAa,GAClB1T,KAAK2T,SAAW,GAChB3T,KAAK4T,QAAU,GACf5T,KAAKkE,KAAO,GACZlE,KAAK6T,eAAiB,GAEtB7T,KAAK8T,mBAAqB,GAC1B9T,KAAK+T,gBAAkB,GAEvB/T,KAAKgU,aAAe,GACpBhU,KAAKiU,OAAS,GACdjU,KAAKkU,aAAe,GACpBlU,KAAKmU,UAAY,GACjBnU,KAAKoU,cAAgB,GAErBpU,KAAK+E,eAAiB,GACtB/E,KAAKqU,gBAAkB,GACvBrU,KAAKsU,eAAiB,GAEtBtU,KAAKuU,eAAiB1T,EAAOwS,cAAe,EAC5CrT,KAAK0F,YAAc7E,EAAO6E,cAAe,EACzC1F,KAAKoF,aAAevE,EAAOuE,eAAgB,EAC3CpF,KAAKsF,YAAczE,EAAOyE,cAAe,EACzCtF,KAAKwU,gBAAkB3T,EAAOiS,eAAgB,EAC9C9S,KAAKyU,iBAAmBnG,SAASzN,EAAO6T,gBAAiB1U,KAAK0T,WAAWhU,OAAS,EAClFM,KAAKiT,SAAoBpS,EAAOoS,SAChCjT,KAAKkT,SAAoBrS,EAAOqS,SAChClT,KAAKyF,WAAa5E,EAAOsS,eAAiB,kBAE1CnT,KAAK2U,YAAa,EAClB3U,KAAK4U,eAAgB,EACrB5U,KAAK6U,eAAiBpB,EAAcoB,iBAAkB,EACtD7U,KAAKwF,YAAa,EAClBxF,KAAK8U,YAAa,EAElB9U,KAAKsT,eAAiBzS,EAAOyS,eAG7BtT,KAAK+U,4BAA4BtB,GACjCzT,KAAKgV,aACLhV,KAAKiV,cAAcxB,EAHL,GAIdzT,KAAKkV,YAAYzB,EAJH,GAKdzT,KAAKmV,4BACLnV,KAAKoV,iBAAiB3B,GACtBzT,KAAKqV,mBAAmB5B,GACxBzT,KAAKsV,UAAU9B,GACfxT,KAAKuV,kBACLvV,KAAKwV,YAAY/B,GACjBzT,KAAKyV,sBACDzV,KAAKa,OAAOiS,cAAgB9S,KAAK0V,eACjC1V,KAAKa,OAAOmS,cAA4C,GAA5BhT,KAAKgU,aAAatU,QAAeM,KAAK2V,qBACtE3V,KAAK4V,qBAEL5V,KAAK6V,cACL7V,KAAK8V,eACL9V,KAAK+V,cACL/V,KAAKgW,kBACDhW,KAAKsT,iBACPtT,KAAKiW,mBACLjW,KAAKkW,iBAEPlW,KAAKmW,iBAIP,8BACE,OAAO9D,EAST,mBACE,IAAI+D,EAAa/D,EAEbgE,EAAmB,GA0IvB,OAzIArW,KAAK0T,WAAWtS,QAAQ,CAACkV,EAAW7Y,KA0BlC,GAzBA2Y,EAAW,SAAWE,EAAUtY,MAAQ,CACtCuU,QAAS,aACT/R,KAAM,SACNL,MAAOmW,EAAUnW,MACjBsS,QAAS6D,EAAUnW,MACnBuS,MAAW,GAAJjV,EAAS,GAGlB2Y,EAAW,WAAaE,EAAUtY,MAAQ,CACxCuU,QAAS,aACT/R,KAAM,SACNL,MAAO,UACPsS,QAAS,GACTC,MAAW,GAAJjV,EAAS,GAGlB2Y,EAAW,QAAUE,EAAUtY,MAAQ,CACrCuU,QAAS,aACT/R,KAAM,UACNL,MAAO,OACP4S,aAAc,QACdN,SAAS,EACTC,MAAW,GAAJjV,EAAS,GAGdA,EAAIuC,KAAK0T,WAAWhU,OAAS,EAAG,CAClC,IAAI6W,EAAkB,GACtBA,EAAgBD,EAAUnW,QAAU1C,EAAI,GAAGiG,WAC3C2S,EAAiBzW,KAAK2W,MAI1BH,EAA0B,cAAI,CAC5B7D,QAAS,QACT/R,KAAM,SACNL,MAAO,kBACPqS,QAAS,SACT/Q,OAAQ4U,EACR5D,QAAS,IACTC,MAAO,GAGT1S,KAAK2T,SAASvS,QAAQ,CAACoV,EAAS/Y,KAC9B2Y,EAAW,SAAWI,EAAQxY,MAAQ,CACpCuU,QAAS,WACT/R,KAAM,SACNL,MAAOqW,EAAQrW,MACfsS,QAAS+D,EAAQrW,MACjBuS,MAAO,IAAU,GAAJjV,EAAS,GAGxB2Y,EAAW,WAAaI,EAAQxY,MAAQ,CACtCuU,QAAS,WACT/R,KAAM,SACNL,MAAO,eAAiBqW,EAAQrW,MAChCsS,QAAS,GACTC,MAAO,IAAU,GAAJjV,EAAS,GAGxB2Y,EAAW,SAAWI,EAAQxY,MAAQ,CACpCuU,QAAS,WACT/R,KAAM,SACNL,MAAO,QACPqS,QAAS,SACT/Q,OAAQ,CACN,CAAC,OAAU,UACX,CAAC,YAAa,aACd,CAAC,SAAY,YACb,CAAC,OAAU,SAEbiR,MAAO,IAAU,GAAJjV,EAAS,GAGxB,IAAIgZ,EAAoB,GAExB,GAAID,EAAQ1T,UAAW,CACrB,IAAI4T,EAAmB,GACvB1W,KAAKiU,OAAO7S,QAAQ,CAACuV,EAAOpX,KAC1B,GAA2B,IAAvBS,KAAKiU,OAAOvU,QAAsB,IAANH,GAAWS,KAAKa,OAAOmS,aAAe,CACpE,IAAI4D,EAAS,GACbA,EAAO,MAAQD,EAAMxW,OAASwW,EAAM3Y,KACpC0Y,EAAiB9W,KAAKgX,MAG1BH,EAAoBA,EAAkBI,OAAOH,GAI/C1W,KAAK2T,SAASvS,QAAQ,CAAC0V,EAAmB7K,KACxC,IAAI8K,EAAiBP,EAAQ1T,YAAcgU,EAAkBhU,WAEzC9C,KAAK6U,iBAAmBiC,EAAkB/T,qBAC9D,GAAItF,GAAKwO,GAAK8K,EAAgB,CAC5B,IAAIH,EAAS,GACbA,EAAO,OAASE,EAAkB3W,OAAS2W,EAAkB9Y,KAC7DyY,EAAkB7W,KAAKgX,MAG3BH,EAAkB3Q,QAAQ,CAAE,SAAU,gBAEtCsQ,EAAW,cAAgBI,EAAQxY,MAAQ,CACzCuU,QAAS,WACT/R,KAAM,SACNL,MAAO,aACPqS,QAAS,SACT/Q,OAAQgV,EACR/D,MAAO,IAAU,GAAJjV,EAAS,GAGxB2Y,EAAW,UAAYI,EAAQxY,MAAQ,CACrCuU,QAAS,WACT/R,KAAM,UACNL,MAAO,SACP4S,aAAc,QACdN,SAAS,EACTC,MAAO,IAAU,GAAJjV,EAAS,GAGxB2Y,EAAW,WAAaI,EAAQxY,MAAQ,CACtCuU,QAAS,WACT/R,KAAM,UACNL,MAAO,QACP4S,aAAc,QACdN,SAAS,EACTC,MAAO,IAAU,GAAJjV,EAAS,GAGxB2Y,EAAW,WAAaI,EAAQxY,MAAQ,CACtCuU,QAAS,WACT/R,KAAM,UACNL,MAAO,QACP4S,aAAc,QACdN,SAAS,EACTC,MAAO,IAAU,GAAJjV,EAAS,KAGnB2Y,EAWT,4BAA4B3C,GAC1BA,EAAcuD,OAAO/C,OAAO7S,QAAQ6V,IAClCjX,KAAKgU,aAAapU,KAAKqX,EAAYjZ,MACnCgC,KAAKiU,OAAOrU,KAAK,IAAI,aAAW,CAC9BG,mBAAoBkX,YAIY,IAAzBxD,EAAcQ,SACvBjU,KAAKkU,aAAeT,EAAcQ,OAClCjU,KAAKwF,YAAa,QAGkC,IAA3CiO,EAAcuD,OAAOE,oBAC9BlX,KAAK8U,YAAa,GAGpB9U,KAAKgF,iBAAmBhF,KAAKwF,WAAaxF,KAAKiU,OAAOvU,OAAS,EAAI,EAC/DM,KAAK0F,cAAgB1F,KAAKwF,YAC5BxF,KAAKgF,mBAIT,aACEhF,KAAKiU,OAAO7S,QAAQuV,IAClB3W,KAAKiG,QAAQrG,KAAK+W,KAGpB,IAAIQ,EAAgB,CAClBhX,MAAO,GACPnC,KAAM,UACNiC,KAAM,IASR,GANwB,oBAApBD,KAAKyF,WACPzF,KAAKiG,QAAQrG,KAAKuX,GAElBnX,KAAKiG,QAAQH,QAAQqR,GAGnBnX,KAAK0F,cAAgB1F,KAAKwF,WAAY,CAMxCxF,KAAKiG,QAAQH,QALO,CAClB3F,MAAO,GACPnC,KAAM,UACNiC,KAAM,MAgBZ,cAAcwT,EAAe2D,GAC3B3D,EAAcuD,OAAOK,eAAejW,QAAQkV,IAC1C,IAAIgB,EAAM,IAAI,iBAAe,CAC3BxX,IAAKE,KACLD,mBAAoBuW,IAEtBtW,KAAK0T,WAAW9T,KAAK0X,GAErB,IAAInU,EAAS,IAAI,SAAOmU,EAAItZ,KAAMgC,KAAMsX,GACxCnU,EAAOkB,IAAM+S,EACbjU,EAAOoB,OAAS,mBAASkP,EAAcuD,OAAO/C,OAAOvU,OAAQ,IAC7DyD,EAAOyB,uBAAyB,CAAC,EAAGwS,KAAY,mBAASpX,KAAKgU,aAAatU,OAAQ,IACnFyD,EAAO0B,qBAAuB,CAAC,KAAM,mBAAS7E,KAAKgU,aAAatU,OAAQ,GAAI0X,GAE5EpX,KAAK4T,QAAQhU,KAAKuD,GAClBiU,GAAW,KAcf,YAAY3D,EAAe2D,GACzB,IAAIvW,EAASb,KAAKa,OAElB4S,EAAcuD,OAAOO,aAAanW,QAAQoV,IACxC,IAAIgB,EAAa,IAAI,eAAa,CAChC1X,IAAKE,KACLD,mBAAoByW,EACpB1T,WAAW,IAEb9C,KAAK2T,SAAS/T,KAAK4X,KAIjBxX,KAAKwF,WACPxF,KAAKkU,aAAa9S,QAAQqW,IACxBzX,KAAK2T,SAASvS,QAAQ,CAACoV,EAAS3Y,KAQ9B,GANqB,qBAAnB4Z,EAAYzY,KAEO,qBAAnByY,EAAYzY,KACuB,GAAhCwX,EAAQzT,qBAGQ,CACnB,IAAI2U,EAAWD,EAAYzY,IAAM,IAAMwX,EAAQxY,KAE3CuG,EAAS,GACToT,EAAoB,GACxBlE,EAAcuD,OAAO/C,OAAO7S,QAAQ6V,IAClC1S,EAAO3E,KAAK6X,EAAkB,KAAER,EAAYjZ,OAC5C2Z,EAAkB/X,KAAK6X,EAAyB,YAAER,EAAYjZ,SAGhE,IAAIyF,EAAa+S,EACbrT,EAAS,IAAI,SAAOuU,EAAU1X,KAAMyD,GACxCN,EAAOkB,IAAM+S,EACbjU,EAAOoB,OAASA,EAChBpB,EAAOuB,SAAU,EACjBvB,EAAOqB,UAAYiT,EAAYzY,IAEP,sBAApByY,EAAYzY,KACdmE,EAAOyB,uBAAyB,CAAC,EAAG/G,KAAM8Z,GAC1CxU,EAAO0B,qBAAuB,CAAC,KAAM8S,EAAmBP,KAExDjU,EAAOR,OAAQ,EACfQ,EAAOyB,uBAAyB,CAAC,EAAG/G,KAAM,mBAASmC,KAAKgU,aAAatU,OAAQ,IAC7EyD,EAAO0B,qBAAuB,CAAC,KAAM,mBAAS7E,KAAKgU,aAAatU,OAAQ,GAAI0X,IAG9EpX,KAAK4T,QAAQhU,KAAKuD,GAClBiU,GAAW,QAMjBpX,KAAK2T,SAASvS,QAAQoV,IACpB,IAAIrT,EAAS,IAAI,SAAOqT,EAAQxY,KAAMgC,KAAMwW,GAC5CrT,EAAOkB,IAAM+S,EACb,SAC+C,IAAlCvW,EAAOgS,YAAY1P,EAAOa,IACnCb,EAAOmB,IAAMzD,EAAOgS,YAAY1P,EAAOa,IAEvCb,EAAOmB,IAAM8S,EAGjB,MACEjU,EAAOmB,IAAM8S,EAEfjU,EAAOyB,uBAAyB,CAAC,EAAGzB,EAAOmB,KAC3CnB,EAAO0B,qBAAuB,CAAC,EAAG1B,EAAOmB,KACzCtE,KAAK4T,QAAQhU,KAAKuD,GAElBiU,GAAW,UAKuC,IAA3C3D,EAAcuD,OAAOE,mBAC9BzD,EAAcuD,OAAOE,kBAAkB9V,QAAQwW,IAC7C,IAAIC,EAAO,IAAI,eAAa,CAC1B/X,IAAKE,KACLD,mBAAoB6X,EACpB9U,WAAW,IAEb9C,KAAK2T,SAAS/T,KAAKiY,GAEnB,IAAI1U,EAAS,IAAI,SAAO0U,EAAK7Z,KAAMgC,KAAM6X,GACzC1U,EAAOkB,IAAM+S,EACbjU,EAAOoB,OAAS,mBAASkP,EAAcuD,OAAO/C,OAAOvU,OAAQ,IAC7DyD,EAAOR,OAAQ,EACfQ,EAAOyB,uBAAyB,CAAC,EAAGwS,KAAY,mBAASpX,KAAKgU,aAAatU,OAAQ,IACnFyD,EAAO0B,qBAAuB,CAAC,KAAM,mBAAS7E,KAAKgU,aAAatU,OAAQ,GAAI0X,GAE5EpX,KAAK4T,QAAQhU,KAAKuD,GAClBiU,GAAW,KASjB,4BACEjZ,OAAOqD,KAAKxB,KAAKa,QAAQO,QAAQwV,IAC/B,GAAIA,EAAOkB,WAAW,cAAe,CACnC,IAAIC,EAAWnB,EAAOtV,MAAM,KAAK,GAE7B0W,GAAuB,EAO3B,GANAhY,KAAK2T,SAASvS,QAAQoV,IAChBuB,IAAavB,EAAQxY,OACvBga,GAAuB,KAIvBA,EAAsB,CACxB,GAAIhY,KAAKgU,aAAazT,SAASP,KAAKa,OAAO+V,IACzC,IAAIpW,EAAO,gBAEPA,EAAO,aAGb,QAAiD,IAAtCR,KAAKa,OAAO,UAAYkX,GACjC,GAAI/X,KAAKa,OAAO,UAAYkX,GAC1B,IAAIE,GAAU,OAEVA,GAAU,EAIlBjY,KAAKmU,UAAUvU,KAAK,CAClBmY,SAAUA,EACVG,WAAYlY,KAAKa,OAAO+V,GACxBpW,KAAMA,EACNyX,QAASA,QAWnB,mBACE,IAAIE,EAAe,IAAI,SAAO,gBAAiBnY,KAAMA,KAAK0T,WAAW1T,KAAK0T,WAAWhU,OAAS,IAE9FyY,EAAa5T,OAAS,mBAASvE,KAAKgF,iBAAkB,IACtDmT,EAAavT,uBAAyB,EAAE,EAAG,KAAM,mBAAS5E,KAAKgU,aAAatU,OAAQ,IACpFyY,EAAatT,qBAAuB,EAAE,KAAM,mBAAS7E,KAAKgU,aAAatU,OAAQ,GAAI,GAEnFM,KAAK4T,QAAQhU,KAAKuY,GAGpB,mBAAmB1E,QAC2B,IAAjCA,EAAcI,iBACvB7T,KAAK4U,eAAgB,OAE8C,IAAxDnB,EAAcI,eAAe7T,KAAKyU,mBAC3ChB,EAAcI,eAAe7T,KAAKyU,kBAAkBrT,QAAQgX,IAC1D,IAAIC,EAAc,IAAI,MAAI,YAE1BA,EAAgC,mBAAID,EAAmC,mBACvE,IAAIE,EAAS,CAAC,YACdD,EAAgC,mBAAEjX,QAAQmX,IACxCD,EAAO1Y,KAAKwY,EAAeG,GAAO7Z,SAEpC2Z,EAAYrU,GAAKsU,EAAO/S,KAAK,KAE7BvF,KAAK4T,QAAQxS,QAAQ+B,IACfA,EAAOuB,QACT2T,EAAYnU,KAAKf,EAAOa,IAAMoU,EAAejV,EAAOM,WAAWzF,MAAMmF,EAAOqB,WAE5E6T,EAAYnU,KAAKf,EAAOa,IAAMoU,EAAejV,EAAOa,SAGX,IAAhCqU,EAAYnU,KAAKf,EAAOa,WACqB,IAA3CqU,EAAYnU,KAAKf,EAAOa,IAAIwU,WACrCH,EAAYnU,KAAKf,EAAOa,IAAIwU,WAAa,CAAC,QAAS,YAEnDC,WAAWvU,KAAKf,EAAOa,IAAIwU,WAAW3B,OAAO,CAAC,QAAS,kBAElB,IAA5B1T,EAAOM,WAAW3C,QAC3BuX,EAAYnU,KAAKf,EAAOa,IAAIwU,WAAaH,EAAYnU,KAAKf,EAAOa,IAAIwU,WAAW3B,OAAO1T,EAAOM,WAAW3C,QAEjE,OAAtCuX,EAAYnU,KAAKf,EAAOa,IAAItF,QAC9B2Z,EAAYnU,KAAKf,EAAOa,IAAIT,SAAW,OAI7CvD,KAAK6T,eAAewE,EAAYrU,IAAMqU,KAU9C,UAAU7E,GACRA,EAAWpS,QAAQ,CAACsX,EAAWjb,KAC7B,IAAI2F,EAAM,IAAI,MAAI,aAGlBpD,KAAK4T,QAAQxS,QAAQ+B,IAQnB,GANIA,EAAOuB,QACTtB,EAAIc,KAAKf,EAAOa,IAAM0U,EAAUvV,EAAOM,WAAWzF,MAAMmF,EAAOqB,WAE/DpB,EAAIc,KAAKf,EAAOa,IAAM0U,EAAUvV,EAAOa,SAGN,IAAxBZ,EAAIc,KAAKf,EAAOa,WACqB,IAAnCZ,EAAIc,KAAKf,EAAOa,IAAIwU,aAC7BpV,EAAIc,KAAKf,EAAOa,IAAIwU,WAAa,SAEI,IAA5BrV,EAAOM,WAAW3C,QAC3BsC,EAAIc,KAAKf,EAAOa,IAAIwU,WAAapV,EAAIc,KAAKf,EAAOa,IAAIwU,WAAW3B,OAAO1T,EAAOM,WAAW3C,QAEzD,OAA9BsC,EAAIc,KAAKf,EAAOa,IAAItF,QACtB0E,EAAIc,KAAKf,EAAOa,IAAIT,SAAW,IAE7BJ,EAAOM,WAAWR,WAAW,CAC/B,IAAI0V,EAAc,IAAI,aAAW,CAC/BxV,OAAQA,EACRC,IAAKA,EACLC,WAAYD,EAAIc,KAAKf,EAAOa,IAAIX,WAChCC,OAAQ,CACN9B,KAAM4B,EAAIc,KAAKf,EAAOa,IAAI4U,QAAQpX,KAClCC,OAAQ2B,EAAIc,KAAKf,EAAOa,IAAI4U,QAAQnX,UAGxC2B,EAAIc,KAAKf,EAAOa,IAAItF,MAAQia,EAC5BvV,EAAIc,KAAKf,EAAOa,IAAIT,SAAWoV,EAAYE,eAMjD,IAAIC,EAAW,GACf9Y,KAAK0T,WAAWtS,QAAQkV,IACtBwC,EAASlZ,KAAKwD,EAAIc,KAAKoS,EAAUtY,MAAMU,SAEzC0E,EAAIY,GAAK8U,EAASvT,KAAK,KAGvB,IAAIwT,EAAW/Y,KAAK0T,WAAW1T,KAAK0T,WAAWhU,OAAS,GAAG1B,KAE3DoF,EAAIc,KAAoB,cAAI,CAC1BxF,MAAO0E,EAAIc,KAAK6U,GAAUra,MAC1B6E,SAAUvD,KAAKgZ,oBAAoB5V,EAAIc,KAAK6U,IAC5CE,KAAM7V,EAAIc,KAAK6U,GAAUE,KACzBT,WAAY,CAAC,WAGfpV,EAAIa,KAAO,CAAC,EAAG,EAAGxG,GAClBuC,KAAKkE,KAAKtE,KAAKwD,KAOnB,kBACEpD,KAAK4T,QAAQxS,QAAQ+B,IACnB,IAAI3B,EAAO,GACPC,EAAS,GACTC,EAAQ,GAEZ1B,KAAKkE,KAAK9C,QAAQgC,IAChB5B,EAAK5B,KAAKwD,EAAIY,IACdvC,EAAO7B,KAAKwD,EAAIc,KAAKf,EAAOa,IAAItF,OAChCgD,EAAM9B,KAAKwD,EAAI5C,QAGjB,IAAI0Y,EAAa,IAAI,eAAa,CAChC/V,OAAQA,EACR9C,WAAY8C,EAAOM,WAAWpD,WAC9BiD,OAAQ,CACN9B,KAAMA,EACNC,OAAQA,EACRC,MAAOA,KAIXyB,EAAOG,OAAS4V,EAChBlZ,KAAKoU,cAAcxU,KAAKsZ,KAI5B,YAAYzF,GACV,QAAyC,IAA9BA,EAAc0F,YAA6B,CACpD,QAAuC,IAA5B1F,EAAc2F,UACvB,IAAIC,GAAmB,OAEnBA,GAAmB,EAMzB,IAHA,IAAIC,EAAU7F,EAAc0F,YAExBI,EAAwBvZ,KAAK0T,WAAW,GAAG1V,KACtCP,EAAI,EAAGA,EAAIuC,KAAK0T,WAAWhU,OAAQjC,IAAK,CAC/C,IAAI6Y,EAAYtW,KAAK0T,WAAWjW,GAChC,IAAK6Y,EAAU1V,KAAM,CACnB2Y,EAAwBjD,EAAUtY,KAClC,OAIJ,IAAIwb,EAAa,IAAI,MAAI,SACrBC,EAAa,IAAI,MAAI,aAEzBzZ,KAAK4T,QAAQxS,QAAQ+B,IACnB,IAAIuW,EAAc,KAMlB,GALAF,EAAWxV,GAAK,QAChByV,EAAWzV,GAAK,SAChBwV,EAAWtV,KAAKf,EAAOa,IAAM,CAAEtF,MAAO,GAAI8Z,WAAY,CAAC,UACvDiB,EAAWvV,KAAKf,EAAOa,IAAM,CAAEtF,MAAO,GAAI8Z,WAAY,IAExB,WAA1BrV,EAAOM,WAAWjD,KAAmB,CACvC,GAAsB,GAAlB2C,EAAOuB,QACT,IAAIiV,EAAYL,EAAQnW,EAAOM,WAAWzF,MAAMmF,EAAOqB,gBAEnDmV,EAAYL,EAAQnW,EAAOa,IAoBjC,QAlBiC,IAAtB2V,EAAUpW,eAAqD,IAAnBoW,EAAUV,OAC/DU,EAAUpW,SAAWvD,KAAKgZ,oBAAoBW,IAE5CN,IACE,CAAC,MAAO,iBAAkB,SAAS9Y,SAAS4C,EAAOM,WAAWT,kBAChE0W,EAAcC,EAAUjb,MAAQyE,EAAOG,OAAOA,OAAOpB,IACL,YAAvCiB,EAAOM,WAAWT,mBAC3B0W,GAAeC,EAAUjb,MAAQyE,EAAOG,OAAOA,OAAOf,KAAO,IAGjEoX,EAAUnB,WAAa,CAAC,SACxBgB,EAAWtV,KAAKf,EAAOa,IAAM2V,OACmB,IAArCH,EAAWtV,KAAKf,EAAOa,IAAI4V,OACpCJ,EAAWtV,KAAKf,EAAOa,IAAI4V,MAAMxY,QAAQyY,IACvCA,EAAKrZ,KAAO,oBAIZ6Y,GAAoBK,EAAa,CACnC,IAAIlW,EAAqD,KAAnCL,EAAOM,WAAWhD,aAChCiZ,EAAYhW,WACZ,IAAIE,OAAOT,EAAOM,WAAWhD,aAAciZ,GAC7CD,EAAWvV,KAAKf,EAAOa,IAAM,CAAEtF,MAAOgb,EAAanW,SAAUC,OAKzEgW,EAAWtV,KAAoB,cAAExF,MAAQ,QACzC8a,EAAWtV,KAAKqV,GAAuB7a,MAAQ,QAC/C8a,EAAWvV,KAAO,CAAC,EAAG,EAAG,GAErBoV,IACFI,EAAWvV,KAAoB,cAAExF,MAAQ,SACzC+a,EAAWvV,KAAKqV,GAAuB7a,MAAQ,SAC/C+a,EAAWxV,KAAO,CAAC,GAAI,GAAI,IAG7BjE,KAAKkE,KAAKtE,KAAK4Z,GACfH,GAAoBrZ,KAAKkE,KAAKtE,KAAK6Z,GAEnCzZ,KAAK2U,YAAa,EAClB3U,KAAK8Z,YAQT,sBACE,IAAIC,EAAe,GACnB/Z,KAAK0T,WAAWtS,QAAQkV,IACtByD,EAAazD,EAAUtY,MAAQ,IAIjC,IAAK,IAAIO,EAAIyB,KAAKkE,KAAKxE,OAAS,EAAGnB,GAAK,EAAIA,IAAK,CAC/C,IAAI6E,EAAMpD,KAAKkE,KAAK3F,GAGpB,GAAiB,cAAb6E,EAAI5C,KAAR,CAQAR,KAAKsU,eAAelR,EAAIY,IAAM,GAC9B,IAAK,IAAIvG,EAAI,EAAGA,EAAIuC,KAAK0T,WAAWhU,OAAQjC,IAAK,CAC/C,IAAI6Y,EAAYtW,KAAK0T,WAAWjW,GAC5Buc,EAAkBha,KAAKkE,KAAK3F,GAAG2F,KAAKoS,EAAUtY,MAAMU,MACxD,GAAIH,EAAI,EACN,IAAI0b,EAAmBja,KAAKkE,KAAK3F,EAAI,GAAG2F,KAAKoS,EAAUtY,MAAMU,MAI/D,KAAIH,EAAI,GAAKyb,GAAmBC,GAGzB,CAEL,IAAK,IAAIC,EAAKzc,EAAGyc,EAAKla,KAAK0T,WAAWhU,OAAQwa,IAAM,CAClD,IAAIC,EAAOna,KAAK0T,WAAWwG,GAAIlc,KAC/BgC,KAAKsU,eAAelR,EAAIY,IAAImW,GAAQJ,EAAaI,GACjDJ,EAAaI,GAAQ,EAEvB,MATAna,KAAKsU,eAAelR,EAAIY,IAAIsS,EAAUtY,OAAS,EAC/C+b,EAAazD,EAAUtY,OAAS,QAlBlCgC,KAAK0T,WAAWtS,QAAQkV,IACtByD,EAAazD,EAAUtY,MAAQ,KAiDvC,eACE,IAAIoc,EAAQpa,KAAKyU,iBAGb4F,EAAiB,GACjBC,EAAe,GACnBta,KAAKkE,KAAK9C,QAAQ,CAACgC,EAAK3F,KACtB,GAAiB,UAAb2F,EAAI5C,KAAkB,CAExB,IADA,IAAI+X,EAAQ,GACHgC,EAAI,EAAGA,EAAIH,EAAOG,IAAK,CAC9B,IAAIjD,EAAMtX,KAAK0T,WAAW6G,GAAGvc,KAC7Bua,EAAM3Y,KAAKwD,EAAIc,KAAKoT,GAAK5Y,OAEvB6Z,EAAMhT,KAAK,OAAS+U,EAAa/U,KAAK,OACxC8U,EAAeza,KAAK2Y,GACpB+B,EAAe/B,GAEjBnV,EAAIa,KAAO,CAAC,EAAGoW,EAAe3a,OAAO,EAAGjC,MAK5C,IADA,IAAI8b,EAAwBvZ,KAAK0T,WAAW,GAAG1V,KACtCP,EAAI,EAAGA,EAAIuC,KAAK0T,WAAWhU,OAAQjC,IAAK,CAC/C,IAAI6Y,EAAYtW,KAAK0T,WAAWjW,GAChC,IAAK6Y,EAAU1V,KAAM,CACnB2Y,EAAwBjD,EAAUtY,KAClC,OAKJqc,EAAejZ,QAAQ,CAACoZ,EAAehb,KACrC,IAAImF,EAAW,IAAI,MAAI,YACvBA,EAASX,GAAK,YAAcwW,EAAcjV,KAAK,KAE/CvF,KAAK4T,QAAQxS,QAAQ+B,IAGnB,GAFAwB,EAAST,KAAKf,EAAOa,IAAM,CAAE,WAAc,CAAC,QAAS,aAEnC,kBAAdb,EAAOa,IAA0Bb,EAAOa,KAAOuV,EAAwB,CACzE,IAAIkB,EAAiBD,EAAcjV,KAAK,OACxCZ,EAAST,KAAKf,EAAOa,IAAItF,MAAQ+b,EAGnC,GAA8B,WAA1BtX,EAAOM,WAAWjD,KACpB,GAAIrC,OAAOuc,QAAQ1a,KAAK6T,gBAAgBnU,OAAS,EAC/CiF,EAAST,KAAKf,EAAOa,IAAM,IAAKW,EAAST,KAAKf,EAAOa,OAAQhE,KAAK6T,eAAelP,EAASX,IAAIE,KAAKf,EAAOa,SACrG,CACL,GAAIb,EAAOuB,QACT,IAAIiW,EAAU,CAACxX,EAAOqB,UAAWrB,EAAOM,WAAWzF,MAAMuH,KAAK,UAE1DoV,EAAUxX,EAAOa,GAGvB,IAAI4W,EAAiB,EACjBC,EAAiB,EACjBtX,EAAW,GACfvD,KAAKkE,KAAK9C,QAAQ0Z,IAChB,GAAqB,aAAjBA,EAASta,MAAuBsa,EAAS7W,KAAK,IAAMzE,EAAG,CACzD,IAAId,EAAQoc,EAAS5W,KAAKyW,GAASjc,MAC/Bqc,OAAOC,SAAStc,KAClBkc,GAAkBlc,EAClBmc,QAKqC,YAAvC1X,EAAOM,WAAWT,kBAAkC6X,EAAiB,IACvED,GAAkCC,GAEhCD,IACFrX,EAA8C,KAAnCJ,EAAOM,WAAWhD,aAAsBma,EAAelX,WAAa,IAAIE,OAAOT,EAAOM,WAAWhD,aAAcma,IAEjF,WAAvCzX,EAAOM,WAAWT,mBACpB4X,EAAiB,GACjBrX,EAAW,IAGb,IAAIoW,EAAY,CACdjb,MAAOkc,EACPrX,SAAUA,EACViV,WAAY,CAAC,WAAY,UAE3B7T,EAAST,KAAKyW,GAAWhB,KAI/BhV,EAASV,KAAO,CAAC,EAAGzE,EAAG,MACvBQ,KAAKkE,KAAKtE,KAAK+E,KAEjB3E,KAAK8Z,WACL9Z,KAAK4U,eAAgB,EAWvB,qBACE,IAAIqG,EAAiB,GACjBC,EAAiB,GACjBC,EAAY,GAEZlH,EAAS,GACTmH,EAAkBpb,KAAKgU,aAAa,GACxChU,KAAKkU,aAAa9S,QAAQqW,IACxB,IAAI4D,EAAU5D,EAAkB,KAAE2D,GAClB,OAAZC,GAAoBpH,EAAOrU,KAAKyb,MAEtCpH,EAAS,IAAI,IAAIqH,IAAIrH,KAGd7S,QAAQ,CAACuV,EAAOpX,KACrB,IAAIgc,EAAoB,CAAC,EAAG,IACxBC,EAAoB,KAExBxb,KAAK2T,SAASvS,QAAQ,CAACoV,EAAS3Y,KAC9B,GAAI2Y,EAAQ1T,UAAW,CACrB,IAAI2Y,EAAe,CACjBhY,WAAY+S,EACZG,MAAOA,EACP+E,YAAa7d,EACb8d,UAAWpc,EACXqU,QAAS,GACT5P,GAAI,CAAC,mBAAoB2S,EAAOH,EAAQxY,MAAMuH,KAAK,KACnDqW,MAAO,IAGT5b,KAAK4T,QAAQxS,QAAQ,CAAC+B,EAAQ1F,KACxB0F,EAAOuB,SAAWvB,EAAOoB,OAAO,IAAMoS,IACpCxT,EAAOM,WAAWzF,MAAQwY,EAAQxY,MACpCyd,EAAa7H,QAAQhU,KAAKuD,EAAOa,IAE/Bb,EAAOoB,OAAO,IAAMoS,GAClBlZ,EAAI8d,EAAkB,KACxBA,EAAoB,CAAC9d,EAAG0F,EAAOa,QAMnC2S,GAASsE,IACXC,EAAevE,GAAS4E,EAAkB,GAC1CC,EAAoB,MAGtBC,EAAaG,MAAQJ,GAAqBN,EAAevE,GACzDsE,EAAiBtE,EACjB6E,EAAoBC,EAAazX,GACjCmX,EAAUvb,KAAK6b,QAMrBN,EAAU/Z,QAAQ,CAACuD,EAAUnF,KAC3B,IAAIiE,EAAazD,KAAK2T,SAAShP,EAAS+W,aACpCvY,EAAS,IAAI,SAAOwB,EAASX,GAAIhE,KAAMyD,GAE3CN,EAAOoB,OAAS,CAACI,EAASgS,MAAO,YACjCxT,EAAOyB,uBAAyB,CAAC,EAAGD,EAAS+W,eAAgBvY,EAAOoB,QAEpE,IAAI2P,EAAe,IAAI/Q,EAAOoB,QACoB,iBAAvC2P,EAAaA,EAAaxU,OAAO,GAC1CwU,EAAaA,EAAaxU,OAAO,GAAK,OAEtCwU,EAAaA,EAAaxU,OAAO,GAAK,KAExCyD,EAAO0B,qBAAuB,CAAC,KAAMqP,EAAc,IAAQ1U,GAC3D2D,EAAOuB,SAAU,EACjBvB,EAAOwB,UAAW,EAClBxB,EAAOqB,UAAY,CAACG,EAASgS,MAAO,oBAAoBpR,KAAK,KAC7DvF,KAAK4T,QAAQhU,KAAKuD,KAEpBnD,KAAK6V,cAGL7V,KAAKkE,KAAK9C,QAAQgC,IAChB+X,EAAU/Z,QAAQuD,IAChB,IAAIiW,EAAiB,EACrBjW,EAASiP,QAAQxS,QAAQya,IACvBjB,GAAkBxX,EAAIc,KAAK2X,GAAOnd,QAEpC0E,EAAIc,KAAKS,EAASX,IAAM,CACtBtF,MAAOkc,EACPrX,SAA+C,KAArCoB,EAASlB,WAAWhD,aAAsBma,EAAelX,WAAa,IAAIE,OAAOe,EAASlB,WAAWhD,aAAcma,GAC7HhY,MAAO,QACP4V,WAAY,CAAC,aAEX,CAAC,WAAY,SAASjY,SAAS6C,EAAI5C,OAAS4C,EAAIc,KAAKS,EAASX,IAAIwU,WAAW5Y,KAAK,aAe5F,kBAAmBa,EAAcuD,EAAI8X,EAAM/D,EAAUG,GACnDlY,KAAKkE,KAAK9C,QAAQgC,IAChB,IAAI2Y,EAAiB3Y,EAAIc,KAAK6T,EAAS/T,IAAItF,MACvCsd,EAAmB5Y,EAAIc,KAAKgU,EAAWlU,IAAItF,MAC/C,GAAa,aAATod,EACF,IAAIG,EAAa,CACfvd,MAAOqd,EAAiBC,EACxBzY,SAA2B,KAAjB9C,GAAuBsb,EAAiBC,GAAkBtY,WAAa,IAAIE,OAAOnD,EAAesb,EAAiBC,GAC5HxD,WAAY,QAET,CACL,IAAI9Z,GAASqd,EAAiBC,GAAoBla,KAAKsH,IAAI4S,GAC3D,GAAKhB,SAAStc,GAORud,EAAa,CACfvd,MAAOA,EACP6E,SAAU,IAAIK,OAAO,SAAUlF,GAC/B8Z,WAAY,SATd,IAAIyD,EAAa,CACfvd,MAAO,KACP6E,SAAU,IACViV,WAAY,IAUF,SAAZpV,EAAI5C,MAA+B,YAAZ4C,EAAI5C,MAC7Byb,EAAWzD,WAAW5Y,KAAK,SAEZ,aAAbwD,EAAI5C,MACNyb,EAAWzD,WAAW5Y,KAAK,YAEzBqc,EAAWvd,MAAQ,GACrBud,EAAWzD,WAAW5Y,KAAK,OAE7BwD,EAAIc,KAAKF,GAAMiY,IAInB,qBAAsBC,GACpB,GAAKlc,KAAKa,OAAOmS,eAAgBkJ,EAAQC,SAASpE,SAASD,WAAW,oBAAtE,CAIA,IAAI9T,EAAK,CAAC,mBAAoBkY,EAAQJ,KAAMI,EAAQC,SAASpE,SAAUmE,EAAQC,SAASjE,YAAY3S,KAAK,KACrGwS,EAAW/X,KAAKoc,cAAcF,EAAQC,SAASpE,UAC/CG,EAAalY,KAAKoc,cAAcF,EAAQC,SAASjE,YACjD/U,EAAS,IAAI,SAAOa,EAAIhE,KAAM+X,EAAStU,YAEtB,aAAjByY,EAAQJ,MACV3Y,EAAOsB,cAAgB,WACvBtB,EAAOkB,IAAM0T,EAAS1T,IAAM,EAC5BlB,EAAOmB,IAAMyT,EAASzT,IAAM,EAC5BnB,EAAOyB,uBAAyBmT,EAASnT,uBAAuBiS,OAAO,GACvE1T,EAAO0B,qBAAuBkT,EAASlT,qBAAqBgS,OAAO,GACnE1T,EAAOvC,MAAQZ,KAAKa,OAAO,WAAakX,EAAStU,WAAWzF,QAE5DmF,EAAOsB,cAAgB,aACvBtB,EAAOkB,IAAM0T,EAAS1T,IAAM,EAC5BlB,EAAOmB,IAAMyT,EAASzT,IAAM,EAC5BnB,EAAOyB,uBAAyBmT,EAASnT,uBAAuBiS,OAAO,GACvE1T,EAAO0B,qBAAuBkT,EAASlT,qBAAqBgS,OAAO,GACnE1T,EAAOjC,KAAO,IACdiC,EAAOvC,MAAQZ,KAAKa,OAAO,WAAakX,EAAStU,WAAWzF,OAI1D+Z,EAASnT,uBAAuBlF,OAASyD,EAAOyB,uBAAuBlF,QACzEqY,EAASnT,uBAAuBhF,KAAK,GAEnCmY,EAASlT,qBAAqBnF,OAASyD,EAAO0B,qBAAqBnF,QACrEqY,EAASlT,qBAAqBjF,KAAK,QAGa,IAAvCI,KAAKa,OAAOgS,YAAY1P,EAAOa,MACxCb,EAAOmB,IAAMtE,KAAKa,OAAOgS,YAAY1P,EAAOa,KAG9Cb,EAAOuB,QAAUqT,EAASrT,QAC1BvB,EAAOR,MAAQoV,EAASpV,MACxBQ,EAAOqB,UAAY,GAEnBrB,EAAOoB,OAASwT,EAASxT,OACrBvE,KAAKa,OAAOuS,uBACoB,oBAA9BpT,KAAKa,OAAOsS,gBACdhQ,EAAO0B,qBAAqB,GAAK,KAEJ,IAA3BkT,EAASxT,OAAO7E,OAClByD,EAAOoB,OAAS,CAAC,YAEjBpB,EAAOoB,OAAS,CAAC,WAAYwT,EAASxT,OAAO,KAIjDvE,KAAK4T,QAAQhU,KAAKuD,GACd+Y,EAAQC,SAASlE,QACnBjY,KAAKqc,kBAAkBtE,EAAStU,WAAWhD,aAAcuD,EAAIkY,EAAQJ,KAAM5D,EAAYH,GAEvF/X,KAAKqc,kBAAkBtE,EAAStU,WAAWhD,aAAcuD,EAAIkY,EAAQJ,KAAM/D,EAAUG,QAzDrF1V,QAAQC,IAAI,wEAsEhB,qBACE,IAAI6Z,EAAoB,GACpBC,EAAQ,CAAC,WAAY,WAEzBpe,OAAOqD,KAAKxB,KAAKmU,WAAW/S,QAAQoF,IAClC,IAAI2V,EAAWnc,KAAKmU,UAAU3N,GAC9B,GAA4B,gBAAxB2V,EAASjE,WACX,GAAsB,eAAlBiE,EAAS3b,KACNR,KAAKwF,WAQRxF,KAAKkU,aAAa9S,QAAQqW,IACnBA,EAAY+E,UACfD,EAAMnb,QAAQ0a,IACZQ,EAAkB1c,KAAK,CACrBkc,KAAMA,EACNK,SAAU,CACRpE,SAAU,CAACN,EAAYzY,IAAKmd,EAASpE,UAAUxS,KAAK,KACpD2S,WAAY,CAACT,EAAYzY,IAAKmd,EAASjE,YAAY3S,KAAK,KACxD0S,QAASkE,EAASlE,QAClBzX,KAAM2b,EAAS3b,YAhBzB+b,EAAMnb,QAAQ0a,IACZQ,EAAkB1c,KAAK,CACrBuc,SAAUA,EACVL,KAAMA,WAoBP,GAAsB,aAAlBK,EAAS3b,KAClB,GAAiC,IAA7BR,KAAKgU,aAAatU,QAAgBM,KAAKgU,aAAa,KAAOmI,EAASjE,WACtElY,KAAKkU,aAAa5E,MAAM,GAAGlO,QAAQ,CAACqW,EAAagF,KAC/CF,EAAMnb,QAAQ0a,IACPrE,EAAY+E,UACfF,EAAkB1c,KAAK,CACrBkc,KAAMA,EACNK,SAAU,CACRpE,SAAU,CAACN,EAAYzY,IAAKmd,EAASpE,UAAUxS,KAAK,KACpD2S,WAAY,CAAClY,KAAKkU,aAAauI,GAAOzd,IAAKmd,EAASpE,UAAUxS,KAAK,KACnE0S,QAASkE,EAASlE,QAClBzX,KAAM2b,EAAS3b,gBAMpB,CACL,IAAIkc,EAAmB,GACvB1c,KAAKkU,aAAa9S,QAAQqW,IACxB,IAAKA,EAAY+E,SAAU,CACzB,IAAI9d,EAAQ+Y,EAAYvT,KAAKlE,KAAKgU,aAAa,IAC1C0I,EAAiBnc,SAAS7B,IAC7Bge,EAAiB9c,KAAKlB,MAI5Bge,EAAiBpN,MAAM,GAAGlO,QAAQ,CAACqW,EAAagF,KAC9CF,EAAMnb,QAAQ0a,IACZQ,EAAkB1c,KAAK,CACrBkc,KAAMA,EACNK,SAAU,CACRpE,SAAU,CAAC,mBAAoBN,EAAa0E,EAASpE,UAAUxS,KAAK,KACpE2S,WAAY,CAAC,mBAAoBwE,EAAiBD,GAAQN,EAASpE,UAAUxS,KAAK,KAClF0S,QAASkE,EAASlE,QAClBzX,KAAM2b,EAAS3b,eAU/B8b,EAAkBlb,QAAQ8a,IACxBlc,KAAK2c,qBAAqBT,KAqB9B,cAYE,GAFAlc,KAAK4T,QAAQ3P,KATc,CAAC7B,EAAGC,KAG7B,IAFA,IAAIua,EAAQ5c,KAAKyF,WACb2U,EAAQhY,EAAEwa,KAASld,OACfjC,EAAE,EAAGA,EAAE2c,EAAO3c,IAAK,CACvB,GAAI2E,EAAEwa,KAASnf,GAAK4E,EAAEua,KAASnf,GAAM,OAAO,EAC5C,GAAI2E,EAAEwa,KAASnf,GAAK4E,EAAEua,KAASnf,GAAM,OAAQ,EAEjD,OAAQ,IAINuC,KAAKuU,eACOvU,KAAK4T,QAAQiJ,OAAO/e,GAA0B,WAArBA,EAAE2F,WAAWjD,MAA8B,kBAAT1C,EAAEkG,IAAwB6Y,OAAO/e,IAAMA,EAAE8C,WAEnGZ,KAAK4T,QAAQiJ,OAAO/e,GAAc,kBAATA,EAAEkG,IAAwB6Y,OAAO/e,IAAMA,EAAE8C,MAYrF,eACE,IAAIkc,EAAS,GACTC,EAAQ/c,KAAKiG,QACb+W,EAAchd,KAAKqU,gBACnB0F,EAAe,GAMnB,GALAgD,EAAM3b,QAAQ6b,IACZlD,EAAakD,EAAKjf,MAAQ,IAIxBgC,KAAKuU,eACP,IAAIX,EAAU5T,KAAK4T,QACFiJ,OAAO/e,GAA2B,YAAtBA,EAAE2F,WAAWjD,MAA+B,kBAAT1C,EAAEkG,IACjD6Y,OAAO/e,IAAMA,EAAE8C,WAE5BgT,EAAU5T,KAAK4T,QACFiJ,OAAO/e,GAAc,kBAATA,EAAEkG,IACd6Y,OAAO/e,IAAMA,EAAE8C,MAGlCgT,EAAQxS,QAAQ+B,IACd,IAAI+Z,EAAO,CACTlZ,GAAIb,EAAOa,GACXE,KAAMf,EAAOga,iBAEfL,EAAOld,KAAKsd,KAGd1a,QAAQC,IAAI,2BAA4Bqa,GAGxC,IAAK,IAAIpf,EAAIof,EAAOpd,OAAS,EAAGhC,GAAK,EAAGA,IAAK,CAC3C,IAAIwf,EAAOJ,EAAOpf,GAClBsf,EAAYE,EAAKlZ,IAAM,GACvBxB,QAAQC,IAAI,mCAAoCya,GAKhD,IAAK,IAAIve,EAAI,EAAGA,EAAIoe,EAAMrd,OAAQf,IAAK,CACrC,IAAIse,EAAOF,EAAMpe,GACjB6D,QAAQC,IAAI,QAASwa,GACrB,IAAIG,EAAkBF,EAAKhZ,KAAK+Y,EAAKjf,MACrC,GAAIN,EAAI,EAAG,CACT,IAAI2f,EAAkBP,EAAOpf,EAAI,GAAGwG,KAAK+Y,EAAKjf,MAC9CwE,QAAQC,IAAI,kBAAmB2a,GAC/B5a,QAAQC,IAAI,kBAAmB4a,GAIjC,KAAI3f,EAAI,GAAK0f,IAAoBC,GAI1B,CAEL7a,QAAQC,IAAI,qBAAsB6a,KAAKC,UAAUxD,EAAc,KAAM,IACrE,IAAK,IAAIyD,EAAK7e,EAAG6e,EAAKT,EAAMrd,OAAQ8d,IAAM,CACxC,IAAIC,EAAQV,EAAMS,GAClBhb,QAAQC,IAAI,4BAA6Bya,EAAKlZ,GAAIyZ,EAAMzf,MACxDgf,EAAYE,EAAKlZ,IAAIyZ,EAAMzf,MAAQ+b,EAAa0D,EAAMzf,MACtD+b,EAAa0D,EAAMzf,MAAQ,EAE7B,MAZAwE,QAAQC,IAAI,4BAA6Bya,EAAKlZ,GAAIiZ,EAAKjf,MACvDgf,EAAYE,EAAKlZ,IAAIiZ,EAAKjf,OAAS,EACnC+b,EAAakD,EAAKjf,OAAS,IAoBnC,cACE,GAAIgC,KAAKuU,eACP,IAAIX,EAAU5T,KAAK4T,QACFiJ,OAAO/e,GAA2B,YAAtBA,EAAE2F,WAAWjD,MAA+B,kBAAT1C,EAAEkG,IACjD6Y,OAAO/e,IAAMA,EAAE8C,WAE5BgT,EAAU5T,KAAK4T,QACFiJ,OAAO/e,GAAc,kBAATA,EAAEkG,IACd6Y,OAAO/e,IAAMA,EAAE8C,MAQlC,IALA,IAAI+E,EAAgB,GAChBqX,EAAc,GACdjD,EAAe,GAGVjc,EAAI8V,EAAQlU,OAAS,EAAG5B,GAAK,EAAGA,IAAK,CAC5C,IAAIqF,EAASyQ,EAAQ9V,GACjBuG,EAAMuP,EAAQlU,OAAS,EAAI5B,EAE/B6H,EAActB,GAAOlB,EAAO6C,kBAE5BgX,EAAYlf,GAAK,mBAAS6H,EAActB,GAAK3E,OAAQ,GAIvD,GAFA8C,QAAQC,IAAI,kCAAmCkD,GAE3C3F,KAAKkT,SAAU,CACjB6G,EAAe,mBAASpU,EAAc,GAAGjG,OAAQ,GAGjD,IAAK,IAAIge,EAAI,EAAGA,EAAI/X,EAAcjG,OAAQge,IAOxC,IANA,IAIIC,EAJShY,EAAc+X,GAIVhe,OAAS,EAEjBhC,EAHG,EAGQA,EAAIigB,EAAKjgB,IAAK,CAChC,IAAIkgB,EAAajY,EAAc+X,GAAGhgB,GAClC,GAAIggB,EAAI/X,EAAcjG,OAAS,EAC7B,IAAIme,EAAclY,EAAc+X,EAAI,GAAGhgB,GAIzC,KAAIggB,EAAI/X,EAAcjG,OAAS,GAAKke,GAAcC,GAG3C,CAEL,IAAK,IAAIC,EAAKpgB,EAAGogB,EAAKH,EAAKG,IACzBd,EAAYU,GAAGI,GAAM/D,EAAa+D,GAClC/D,EAAa+D,GAAM,EAErB,MARAd,EAAYU,GAAGhgB,IAAM,EACrBqc,EAAarc,IAAM,EAYzB,GAAwB,oBAApBsC,KAAKyF,WACP,IAAIsY,EAAc/d,KAAKgU,aAAatU,OAAS,OAEzCqe,EAAc,EAIpB,IAASL,EAAI/X,EAAcjG,OAAS,EAAGge,GAAK,EAAGA,IAAK,CAC9CE,EAAajY,EAAc+X,GAAGK,GAElC,GAAIL,EAAI,EACN,IAAIM,EAAarY,EAAc+X,EAAI,GAAGK,GAGpCL,EAAI,GAAKE,GAAcI,GACzBhB,EAAYU,GAAGK,IAAgB,EAC/BhE,EAAagE,IAAgB,IAG7Bf,EAAYU,GAAGK,GAAehE,EAAagE,GAC3ChE,EAAagE,GAAe,GAGhCf,EAAY/E,UAGdrE,EAAQxS,QAAQ,CAAC+B,EAAQkB,KACvBlB,EAAO2B,SAAWkY,EAAY3Y,GAC9BrE,KAAK+E,eAAe5B,EAAOa,IAAMgZ,EAAY3Y,KAOjD,kBACErE,KAAK4T,QAAQxS,QAAQ+B,IACnB,IAAIkC,EAAiBrF,KAAKa,OAAO,SAAWsC,EAAOM,WAAWzF,MAC9D,QAA8B,IAAnBqH,EACT,OAAQA,GACN,IAAK,YACHrF,KAAKkE,KAAK9C,QAAQgC,IACZA,EAAIc,KAAKf,EAAOa,IAAItF,MAAQ,GAC9B0E,EAAIc,KAAKf,EAAOa,IAAIwU,WAAW5Y,KAAK,YAelD,mBACEI,KAAK8T,mBAAqB,GAC1B,IAAImK,EAAkB,mBAASje,KAAK0T,WAAWhU,OAAQ,GACnDwe,EAAe,CACjBtb,MAAO,OACPpC,KAAM,yBACNuC,sBAAsB,GAEpBob,EAAiB,CACnBvb,MAAO,QACPpC,KAAM,2BACNuC,sBAAsB,GAGpB/C,KAAK0F,cAAgB1F,KAAKwF,cACxB4Y,EAAoB,IAAI,SAAO,SAAUpe,KAAMke,IACjChZ,OAAS,CAAC,SAAU,GAAI,IAC1CkZ,EAAkBtZ,SAAWmZ,EAC7BG,EAAkB5d,KAAO,UACzBR,KAAK8T,mBAAmBlU,KAAKwe,IAGP,oBAApBpe,KAAKyF,YACPzF,KAAKiU,OAAO7S,QAAQuV,IAClB,IAAIyH,EAAoB,IAAI,SAAOzH,EAAM3Y,KAAMgC,KAAMke,GACrDE,EAAkBlZ,OAAS,CAACyR,EAAMvW,YAAa,GAAI,IACnDge,EAAkBtZ,SAAWmZ,EAC7BG,EAAkB5d,KAAO,YACzB4d,EAAkBxb,MAAQ,OAC1B5C,KAAK8T,mBAAmBlU,KAAKwe,MAG3BA,EAAoB,IAAI,SAAO,UAAWpe,KAAMke,IAClChZ,OAAS,CAAC,SAAU,GAAI,IAC1CkZ,EAAkBtZ,SAAWmZ,EAC7BG,EAAkB5d,KAAO,UACzB4d,EAAkBxb,MAAQ,OAC1B5C,KAAK8T,mBAAmBlU,KAAKwe,MAEzBA,EAAoB,IAAI,SAAO,UAAWpe,KAAMke,IAClChZ,OAAS,CAAC,SAAU,GAAI,IAC1CkZ,EAAkBtZ,SAAWmZ,EAC7BG,EAAkB5d,KAAO,UACzB4d,EAAkBxb,MAAQ,OAC1B5C,KAAK8T,mBAAmBlU,KAAKwe,GAE7Bpe,KAAKiU,OAAO7S,QAAQuV,IAClB,IAAIyH,EAAoB,IAAI,SAAOzH,EAAM3Y,KAAMgC,KAAMke,GACrDE,EAAkBlZ,OAAS,CAACyR,EAAMvW,YAAa,GAAI,IACnDge,EAAkBtZ,SAAWmZ,EAC7BG,EAAkB5d,KAAO,YACzB4d,EAAkBxb,MAAQ,OAC1B5C,KAAK8T,mBAAmBlU,KAAKwe,MAIjC,IAAK,IAAIV,EAAI,EAAGA,EAAI1d,KAAKkE,KAAKxE,OAAQge,IAAK,CACzC,IAoBIU,EApBAC,EAAYre,KAAKkE,KAAKwZ,GAC1B,GAAuB,cAAnBW,EAAU7d,KAAsB,CAClC,IAAI8d,EAAU,GACVpZ,EAAS,GACblF,KAAK0T,WAAWtS,QAAQkW,IAClBtX,KAAKiT,SACPqL,EAAQ1e,KAAKI,KAAKsU,eAAe+J,EAAUra,IAAIsT,EAAItZ,OAEnDsgB,EAAQ1e,KAAK,GAEfsF,EAAOtF,KAAKye,EAAUna,KAAKoT,EAAItZ,MAAMU,cAElC,GAAuB,aAAnB2f,EAAU7d,KACf8d,EAAUL,EACV/Y,EAAS,CAAC,YAAY2R,OAAO,mBAAS7W,KAAK0T,WAAWhU,OAAO,EAAG,UAC/D,GAAuB,UAAnB2e,EAAU7d,KACf8d,EAAUL,EACV/Y,EAAS,CAAC,SAAS2R,OAAO,mBAAS7W,KAAK0T,WAAWhU,OAAO,EAAG,MAG/D0e,EAAoB,IAAI,SAAOC,EAAUra,GAAIhE,KAAMme,IACrC/Z,YAAa,EAC/Bga,EAAkBtZ,SAAWwZ,EAC7BF,EAAkBlZ,OAASA,EAC3BkZ,EAAkBxb,MAAQ,QAC1B5C,KAAK8T,mBAAmBlU,KAAKwe,IAIjC,gBACEpe,KAAK4T,QAAQiJ,OAAO/e,GAA2B,YAAtBA,EAAE2F,WAAWjD,MAAoBY,QAAQ+B,IAChE,IAAI4Q,EAAkB,GACtB/T,KAAKkE,KAAK9C,QAAQgC,SACmB,IAAxBA,EAAIc,KAAKf,EAAOa,KACzB+P,EAAgB3Q,EAAIY,IAAMZ,EAAIc,KAAKf,EAAOa,IAC1C+P,EAAgB3Q,EAAIY,IAAW,MAAI,aACkB,IAA1C+P,EAAgB3Q,EAAIY,IAAgB,WAC7C+P,EAAgB3Q,EAAIY,IAAgB,WAAEpE,KAAK,cAE3CmU,EAAgB3Q,EAAIY,IAAgB,WAAI,CAAC,eAG3CxB,QAAQC,IAAI,8BAA+BU,EAAOa,MAKtD,IAAI6B,EAAiB1C,EAAOM,WAAWzC,QACnCqE,EAAiBrF,KAAKa,OAAO,WAAasC,EAAOM,WAAWzF,MAOhE,QAN8B,IAAnBqH,IACTQ,EAAiBR,GAAkCQ,GAErDkO,EAAgB7N,OAAS,CAAExH,MAAOmH,EAAgB2S,WAAY,IAC1DrV,EAAOwB,UAAYoP,EAAgB7N,OAAOsS,WAAW5Y,KAAK,YAEtC,oBAApBI,KAAKyF,WACP,IAAI8Y,EAAgBve,KAAKiU,OAAOvU,YAE5B6e,EAAgB,EAElBve,KAAK0F,cAAgB1F,KAAKwF,YAAc+Y,IAE5CxK,EAAgByC,QAAU,CAAE9X,MAAOyE,EAAOyC,SAAS2Y,GAAgB/F,WAAY,IAC3ErV,EAAOwB,UAAYoP,EAAgByC,QAAQgC,WAAW5Y,KAAK,YAC3DuD,EAAOM,WAAW3C,MAAMP,SAAS,aAAewT,EAAgByC,QAAQgC,WAAW5Y,KAAK,YAE5FI,KAAKgU,aAAa5S,QAAQ,CAAC6V,EAAa5S,KACtC0P,EAAgBkD,GAAe,CAAEvY,MAAOyE,EAAOoB,OAAOF,GAAMmU,WAAY,IACpErV,EAAOwB,UAAYoP,EAAgBkD,GAAauB,WAAW5Y,KAAK,cAGtE,IAAI4e,EAAiB,IAAI,MAAI,aAC7BA,EAAexa,GAAKb,EAAOa,GAC3Bwa,EAAe/a,WAAaN,EAAOM,WACnC+a,EAAe5d,KAAOuC,EAAOvC,KAC7B4d,EAAeC,SAAWtb,EAAO2B,SACjC0Z,EAAeta,KAAO6P,EAEtB/T,KAAK+T,gBAAgBnU,KAAK4e,KAI9B,iBACO,CAAC,cAAe,SAAU,eAAgB,UAAUje,SAASP,KAAKa,OAAOyR,SAC5EtS,KAAKa,OAAOyR,MAAQ,eAGjB,CAAC,QAAS,QAAQ/R,SAASP,KAAKa,OAAO+R,UAC1C5S,KAAKa,OAAO+R,OAAS,cAGmB,IAA/B5S,KAAKa,OAAOyS,iBACrBtT,KAAKa,OAAOyS,gBAAiB,GAG/BnV,OAAOuc,QAAQ1a,KAAKa,QAAQO,QAAQwV,IAOlC,GANkB,UAAdA,EAAO,GACTA,EAAO,IAAK,EACW,SAAdA,EAAO,KAChBA,EAAO,IAAK,GAGsB,IAAhCA,EAAO,GAAGtV,MAAM,KAAK5B,OAAc,CACrC,IAAKgf,EAAcC,GAAc/H,EAAO,GAAGtV,MAAM,KACjD,GAAI,CAAC,QAAS,UAAW,OAAQ,QAAS,SAAU,UAAW,UAAW,cAAcf,SAASme,GAAe,CAC9G,IAAIE,GAAc,EAClB5e,KAAK0T,WAAWtS,QAAQkV,IAClBA,EAAUtY,OAAS2gB,IAAcC,GAAc,KAErD5e,KAAK2T,SAASvS,QAAQoV,IAChBA,EAAQxY,OAAS2gB,IAAcC,GAAc,KAE9CA,UACI5e,KAAKa,OAAO+V,EAAO,QAWpC,cAAe5S,GACb,IAAIb,EAAS,GAMb,OALAnD,KAAK4T,QAAQxS,QAAQtD,IACfkG,IAAOlG,EAAEkG,KACXb,EAASrF,KAGNqF,EAGT,iBAAkBnF,GAChB,IAAIwY,EAAU,GAMd,OALAxW,KAAK2T,SAASvS,QAAQvD,IAChBG,IAASH,EAAEG,OACbwY,EAAU3Y,KAGP2Y,EAWT,WASExW,KAAKkE,KAAKD,KARiB,CAAC7B,EAAGC,KAE7B,IADA,IAAI+X,EAAQhY,EAAE6B,KAAKvE,OACXjC,EAAE,EAAGA,EAAE2c,EAAO3c,IAAK,CACvB,GAAI2E,EAAE6B,KAAKxG,GAAK4E,EAAE4B,KAAKxG,GAAM,OAAO,EACpC,GAAI2E,EAAE6B,KAAKxG,GAAK4E,EAAE4B,KAAKxG,GAAM,OAAQ,EAEzC,OAAQ,IAGVuC,KAAKyV,sBASP,oBAAqBkE,GACnB,IAAIkF,EAAS,IAAIC,UACjB,QAA8B,IAAnBnF,EAAUV,MAAyB,CAAC,YAAa,IAAI1Y,SAASoZ,EAAUV,MAS7E1V,EAAWoW,EAAUjb,WARzB,IACE,IACI6E,EADcsb,EAAOE,gBAAgBpF,EAAUV,KAAM,aAC9B+F,gBAAgBC,YAE7C,MAAMC,GACJ,IAAI3b,EAAWoW,EAAUV,KAM7B,OAAO1V,EAOT,YACE,IAAIgB,EAAS,GAmBb,OAlBKvE,KAAKsT,eAeR/O,EAASvE,KAAK0T,YAdV1T,KAAK0F,cAAgB1F,KAAKwF,YAAcjB,EAAO3E,KAAK,iBAEhC,oBAApBI,KAAKyF,YACPzF,KAAKiU,OAAO7S,QAAQuV,IAClBpS,EAAO3E,KAAK+W,EAAM3Y,QAEpBuG,EAAO3E,KAAK,oBAEZ2E,EAAO3E,KAAK,kBACZI,KAAKiU,OAAO7S,QAAQuV,IAClBpS,EAAO3E,KAAK+W,EAAM3Y,UAOjBuG,EAeT,uBACE,IAAI4a,EAAgB,GAChBC,EAAkB,GAClBC,EAAgB,GAEfrf,KAAKsT,eAaRtT,KAAK8T,mBAAmB1S,QAAQ+B,IACC,2BAA3BA,EAAOM,WAAWjD,KACpB2e,EAAcvf,KAAK,CAAEoE,GAAIb,EAAOa,KACI,6BAA3Bb,EAAOM,WAAWjD,MAAqD,UAAd2C,EAAOa,GACzEob,EAAgBxf,KAAK,CAAEoE,GAAIb,EAAOa,KACE,6BAA3Bb,EAAOM,WAAWjD,MAAqD,UAAd2C,EAAOa,IACzEqb,EAAczf,KAAK,CAAEoE,GAAIb,EAAOa,OAlBpChE,KAAK4T,QAAQxS,QAAQ+B,IACY,cAA3BA,EAAOM,WAAWjD,MAAyBR,KAAKuU,gBAAgC,kBAAdpR,EAAOa,IAA2Bb,EAAOvC,KAEzE,cAA3BuC,EAAOM,WAAWjD,MAAwBR,KAAKuU,gBAAgC,kBAAdpR,EAAOa,GACjFmb,EAAcvf,KAAK,CAAEoE,GAAIb,EAAOa,KACI,YAA3Bb,EAAOM,WAAWjD,MAAuB2C,EAAOR,OAAUQ,EAAOvC,KAEtC,YAA3BuC,EAAOM,WAAWjD,MAAsB2C,EAAOR,QAAUQ,EAAOvC,MACzEye,EAAczf,KAAK,CAAEoE,GAAIb,EAAOa,KAFhCob,EAAgBxf,KAAK,CAAEoE,GAAIb,EAAOa,KAJlCmb,EAAcvf,KAAK,CAAEoE,GAAIb,EAAOa,OA2BxC,gBAAiBvG,GACf,OAAKuC,KAAKsT,eAGDtT,KAAK8T,mBAAmB+I,OAAO/e,GAAKA,EAAEgH,SAASrH,GAAK,GAFpDuC,KAAK4T,QAAQiJ,OAAO/e,GAAKkC,KAAK+E,eAAejH,EAAEkG,IAAIvG,GAAK,GAMnE,cACE,OAAKuC,KAAKsT,eAGDtT,KAAK+T,gBACO8I,OAAOzZ,IAAQA,EAAIxC,MAH/BZ,KAAKkE,KAYhB,gBAAiBd,GACf,GAAKpD,KAAKsT,eAsBH,EACDgM,EAAQtf,KAAK8T,oBACX1S,QAAQ,CAACme,EAAMlb,KACnBkb,EAAKC,QAAU,EACc,2BAAzBD,EAAK9b,WAAWjD,WAAkE,IAAtB4C,EAAIqb,SAASpa,KAC3Ekb,EAAKC,QAAUxf,KAAK+E,eAAe3B,EAAIY,IAAIK,MAG/Cib,EAAQA,EAAMzC,OAAO0C,GAAQA,EAAKC,QAAU,OA9BpB,CAExB,GAAIxf,KAAKuU,eACP,IAAI+K,EAAQtf,KAAK4T,QAAQiJ,OAAO/e,GAA0B,WAArBA,EAAE2F,WAAWjD,MAA8B,kBAAT1C,EAAEkG,IAAwB6Y,OAAO/e,IAAMA,EAAE8C,WAEhH,IAAI0e,EAAStf,KAAK4T,QAAQiJ,OAAO/e,GAAc,kBAATA,EAAEkG,IAAwB6Y,OAAO/e,IAAMA,EAAE8C,OAI5EZ,KAAKuU,gBAAkBvU,KAAKiT,WAE/BqM,EAAMle,QAAQme,IACZA,EAAKC,QAAU,EACE,cAAbpc,EAAI5C,MAAwBR,KAAKsU,eAAelR,EAAIY,IAAIub,EAAKvb,IAAM,IACrEub,EAAKC,QAAUxf,KAAKsU,eAAelR,EAAIY,IAAIub,EAAKvb,OAInC,cAAbZ,EAAI5C,OACN8e,EAAQA,EAAMzC,OAAO/e,GAA0B,WAArBA,EAAE2F,WAAWjD,MAAqBR,KAAKsU,eAAelR,EAAIY,IAAIlG,EAAEkG,IAAM,KAatG,OAAOsb,EAWT,YAAYG,EAAMC,EAAIC,GACpB,IAAI9e,EAASb,KAAKa,OAClB,GAAI4e,GAAQC,EAAI,CACd,IAAIE,EAAQF,EAAKD,EACbI,EAAYhf,EAAOgS,YACvB7S,KAAK4T,QAAQxS,QAAQ0e,IACQ,WAAvBA,EAAIrc,WAAWjD,MAAsBsf,EAAInd,QACvCmd,EAAIxb,KAAOmb,GAAQK,EAAIxb,IAAMmb,EAAO,GAEtCK,EAAIxb,KAAOsb,EACFE,EAAIxb,KAAOob,GAAMI,EAAIxb,IAAMmb,EAEpCK,EAAIxb,KAAO,GACFwb,EAAIxb,KAAOmb,EAAO,IAAMK,EAAIxb,IAAMob,EAAK,KAEhDI,EAAIxb,KAAO,IAEbub,EAAUC,EAAI9b,IAAM8b,EAAIxb,OAG5Bqb,EAAkBE,IAUtB,gBACE,IAAIE,EAAa,GAUjB,OATA/f,KAAKkE,KAAK9C,QAAQ7C,IAChB,GAAe,cAAXA,EAAEiC,KAAsB,CAC1B,IAAI4C,EAAM,GACVpD,KAAK4T,QAAQxS,QAAQtD,IACnBsF,EAAItF,EAAEkG,IAAMzF,EAAE2F,KAAKpG,EAAEkG,IAAItF,QAE3BqhB,EAAWngB,KAAKwD,MAGb2c","file":"vis_table_plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = queryResponseField.is_numeric\n    this.is_array = ['list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = ''\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style = style_setting\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'style':\n              this.style = tags[2] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' && queryResponseField.is_table_calculation\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = queryResponseField.is_turtle\n    this.can_pivot = can_pivot\n  }\n}\n\nclass PivotField {\n  constructor({ queryResponseField }) {\n    this.name = queryResponseField.name,\n    this.label = queryResponseField.label_short || queryResponseField.label,\n    this.view = queryResponseField.view_label || ''\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(with_subtotals)\n      this.max_for_display = Math.max(with_subtotals)\n      this.min = Math.min(line_items_only)\n      this.max = Math.max(line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  to_string() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    this.modelField = null\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.variance_type = '' // empty | absolute | percentage\n    this.pivoted = false\n    this.subtotal = false\n    this.super = false\n\n    this.series = null\n    \n    this.sort_by_measure_values = [] // [index -1|dimension 0|measure 1|row totals & supermeasures 2, column number, [measure values]  ]\n    this.sort_by_pivot_values = []   // [index -1|dimension 0|measure 1|row totals & supermeasures 2, [pivot values], column number    ]\n\n    this.colspans = []\n    this.vis.colspan_values[this.id] = newArray(this.vis.number_of_levels, -1)\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getLabel (level) {\n    if (this.transposed) {\n      return this.labels[level]\n    }\n\n    if (typeof this.vis.visId !== 'undefined' && this.vis.visId === 'report_table') {\n      switch (this.variance_type) {\n        case 'absolute':\n          var label = 'Var #'\n          break;\n        case 'percentage':\n          var label = 'Var %'\n          break;\n        default:\n          var label = this.vis.useShortName ? this.modelField.short_name || this.modelField.label : this.modelField.label\n      }\n    } else {\n      var label = this.modelField.label\n    }\n    \n    var config_setting = this.vis.config['label|' + this.modelField.name]\n    if (typeof config_setting !== 'undefined' && config_setting !== this.modelField.label) {\n      label = config_setting ? config_setting : label\n    }\n\n    if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n      label = [this.modelField.view, label].join(' ') \n    }\n    \n    if (typeof this.vis.has_pivots !== 'undefined') {\n      if (this.vis.has_pivots) { \n        if (this.vis.sortColsBy === 'getSortByPivots') {\n          if (level < this.levels.length) {\n            label = this.levels[level]\n          } else {\n            // label already set\n          }\n        } else { // params.config.sortColumnsBy === 'getSortByMeasures'\n          if (level >= 1) {\n            label = this.levels[level - 1]\n          } else {\n            // label already set\n          }\n        } \n      } else { // flat table\n        if (this.vis.useHeadings && level === 0) {\n          var config_setting = this.vis.config['heading|' + this.modelField.name]\n          if (typeof config_setting !== 'undefined') {\n            label = config_setting ? config_setting : this.modelField.heading\n          } else {\n            label = this.modelField.heading\n          }\n        } else {\n          // label already set\n        }\n      }\n    }\n    return label\n  }\n\n  /***\n   * Returns array of all header fields per column\n   * 1. Combine pivot values with measure label, in order set by sortColsBy option\n   * 2. Add headings if used (option chosen, flat tables only)\n   */\n  getHeaderLevels () {\n    if (this.modelField.vis.sortColsBy === 'getSortByPivots') {\n      var header_levels = [...this.levels, this.getLabel(this.levels.length)]\n    } else {\n      var header_levels = [this.getLabel(0), ...this.levels]\n    }\n\n    if (this.modelField.vis.useHeadings && !this.modelField.vis.has_pivots) {\n      var column_heading = this.modelField.heading\n      var config_setting = this.modelField.vis.config['heading|' + this.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        column_heading = config_setting ? config_setting : column_heading\n      } \n      header_levels.unshift(column_heading)\n    }\n\n    return header_levels\n  }\n\n  getHeaderData () {\n    var headerData = {}\n    var levels = this.getHeaderLevels()\n    this.modelField.vis.headers.forEach((header, i) => {\n      headerData[header.name] = levels[i]\n    })\n\n    return headerData\n  }\n\n  updateSortByMeasures (idx) {\n    if (this.sort_by_measure_values[0] == 1) {\n      if (!this.pivoted && !this.subtotal) {\n        this.sort_by_measure_values = [1, idx]\n      }\n    }\n  }\n\n  getSortByMeasures () {\n    return this.sort_by_measure_values\n  }\n\n  getSortByPivots () {\n    return this.sort_by_pivot_values\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.PivotField = PivotField\nexports.Row = Row\nexports.Column = Column\n","/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nvar make_ssf = function make_ssf(SSF){\nSSF.version = '0.11.0';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\tt[65535]= 'General';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\nfunction general_fmt_int(v) { return v.toString(10); }\nSSF._general_int = general_fmt_int;\nvar general_fmt_num = (function make_general_fmt_num() {\nvar gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/, gnr6 = /(E[+-])(\\d)$/;\nfunction gfn2(v) {\n\tvar w = (v<0?12:11);\n\tvar o = gfn5(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\nfunction gfn3(v) {\n\tvar o = v.toFixed(11).replace(gnr1,\".$1\");\n\tif(o.length > (v<0?12:11)) o = v.toPrecision(6);\n\treturn o;\n}\nfunction gfn4(o) {\n\tfor(var i = 0; i != o.length; ++i) if((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4,\".$1\").replace(gnr5,\"E\").replace(\"e\",\"E\").replace(gnr6,\"$10$2\");\n\treturn o;\n}\nfunction gfn5(o) {\n\treturn o.indexOf(\".\") > -1 ? o.replace(gnr2,\"\").replace(gnr1,\".$1\") : o;\n}\nreturn function general_fmt_num(v) {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = gfn2(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = gfn3(v);\n\treturn gfn5(gfn4(o));\n};})();\nSSF._general_num = general_fmt_num;\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri() { return 0; }\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1;\n\t}\n\tif(outl > 0) return pad0(out, outl); else return \"\";\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 0;\n\t}\n\treturn Math.round((val-Math.floor(val))*Math.pow(10,d));\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) { if(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0)); return \"\"+Math.floor(val); }\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase \"$\": out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\n};\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n","import SSF from \"ssf\"\n\nimport { newArray, ModelDimension, ModelMeasure, PivotField, CellSeries, ColumnSeries, Row, Column } from './vis_primitives'\n\nconst tableModelCoreOptions = {\n  theme: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Theme\",\n    values: [\n      { 'Traditional': 'traditional' },\n      { 'Looker': 'looker' },\n      { 'Contemporary': 'contemporary' },\n      { 'Use custom theme': 'custom'}\n    ],\n    default: \"traditional\",\n    order: 1,\n  },\n  customTheme: {\n    section: \"Theme\",\n    type: \"string\",\n    label: \"Load custom CSS from:\",\n    default: \"\",\n    order: 2,\n  },\n  layout: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Layout\",\n    values: [\n      { 'Even': 'fixed' },\n      { 'Auto': 'auto' }\n    ],\n    default: \"fixed\",\n    order: 3,\n  },\n  columnOrder: {},\n  rowSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Row Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 1,\n  },\n  colSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Col Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 2,\n  },\n  spanRows: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Dims\",\n    display_size: 'half',\n    default: true,\n    order: 3,\n  },\n  spanCols: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Headers\",\n    display_size: 'half',\n    default: true,\n    order: 4,\n  },\n  sortColumnsBy: {\n    section: \"Table\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Sort Columns By\",\n    values: [\n      { 'Pivots': 'getSortByPivots' },\n      { 'Measures': 'getSortByMeasures' }\n    ],\n    default: \"getSortByPivots\",\n    order: 6,\n  },\n  useViewName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Include View Name\",\n    default: false,\n    order: 7,\n  },\n  useHeadings: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Headings (non-pivots only)\",\n    default: false,\n    order: 8,\n  },\n  useShortName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Short Name (from model)\",\n    default: false,\n    order: 9,\n  },\n  groupVarianceColumns: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Group Variance Columns After Pivots\",\n    default: false,\n    order: 10,\n  },\n  indexColumn: {\n    section: \"Dimensions\",\n    type: \"boolean\",\n    label: \"Use Last Field Only\",\n    default: false,\n    order: 0,\n  },\n  transposeTable: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Transpose\",\n    default: false,\n    order: 100,\n  },\n}\n/**\n * Represents an \"enriched data object\" with additional methods and properties for data vis\n * Takes the data, config and queryResponse objects as inputs to the constructor\n */\nclass VisPluginTableModel {\n  /**\n   * Build the LookerData object\n   * @constructor\n   * \n   * - Check for pivots and supermeasures\n   * - Check for variance calculations\n   * - Add dimensions\n   * - Add measures\n   * - Build index column\n   *   - Index all original columns to preserve order later\n   *   - Add dimensions, list of ids, list of full objects\n   *   - Add measures, list of ids, list of full objects\n   * - TODO: CHECK FOR SUBTOTALS\n   *   – SET this.has_row_totals\n   *   - IF this.has_pivots, FLATTEN SUBTOTALS DATA\n   *   – SET this.subtotals\n   * - Build rows\n   * - Add column series\n   * - Build totals\n   * - Build row spans\n   * - If configured: Add row subtotals\n   * - If configured and 2 pivots: Add column subtotals\n   * - Add variances\n   * - TODO: add new column series\n   * - Sort columns\n   * - Apply formatting\n   * - If configured: transpose table\n   *   - add transposed_columns\n   *   - add transposed_rows\n   * - Validate config\n   * - TODO: Get table column groups\n   * \n   * @param {*} lookerData \n   * @param {*} queryResponse \n   * @param {*} config \n   */\n  constructor(lookerData, queryResponse, config) {\n    this.visId = 'report_table'\n    this.config = config\n\n    this.headers = []\n    this.dimensions = []\n    this.measures = []\n    this.columns = []\n    this.data = []\n    this.subtotals_data = {}\n\n    this.transposed_columns = []\n    this.transposed_data = []\n\n    this.pivot_fields = []\n    this.pivots = []\n    this.pivot_values = []\n    this.variances = []\n    this.column_series = []\n\n    this.colspan_values = {}\n    this.colspan_values_ = {}\n    this.rowspan_values = {}\n\n    this.useIndexColumn = config.indexColumn || false\n    this.useHeadings = config.useHeadings || false\n    this.useShortName = config.useShortName || false\n    this.useViewName = config.useViewName || false\n    this.addRowSubtotals = config.rowSubtotals || false\n    this.addSubtotalDepth = parseInt(config.subtotalDepth)|| this.dimensions.length - 1\n    this.spanRows = false || config.spanRows\n    this.spanCols = false || config.spanCols\n    this.sortColsBy = config.sortColumnsBy || 'getSortByPivots'\n\n    this.has_totals = false\n    this.has_subtotals = false\n    this.has_row_totals = queryResponse.has_row_totals || false\n    this.has_pivots = false\n    this.has_supers = false\n\n    this.transposeTable = config.transposeTable\n\n    var col_idx = 0\n    this.checkPivotsAndSupermeasures(queryResponse)\n    this.addHeaders()\n    this.addDimensions(queryResponse, col_idx)\n    this.addMeasures(queryResponse, col_idx)\n    this.checkVarianceCalculations()\n    this.buildIndexColumn(queryResponse)\n    this.checkSubtotalsData(queryResponse)\n    this.buildRows(lookerData)\n    this.addColumnSeries()\n    this.buildTotals(queryResponse)\n    this.updateRowSpanValues()\n    if (this.config.rowSubtotals) { this.addSubTotals() }\n    if (this.config.colSubtotals && this.pivot_fields.length == 2) { this.addColumnSubTotals() }\n    this.addVarianceColumns()\n    // this.addColumnSeries()    // TODO: add column series for generated columns (eg column subtotals)\n    this.sortColumns()\n    this.setColSpans_()\n    this.setColSpans()\n    this.applyFormatting()\n    if (this.transposeTable) { \n      this.transposeColumns() \n      this.transposeRows()\n    }\n    this.validateConfig()\n    // this.getTableColumnGroups() \n  }\n\n  static getCoreConfigOptions() {\n    return tableModelCoreOptions\n  }\n\n  /**\n   * Hook to be called by a Looker custom vis, for example:\n   *    this.trigger('registerOptions', VisPluginTableModel.getConfigOptions())\n   * \n   * Returns a new config object, combining the core options with dynamic options based on available dimensions and measures\n   */\n  getConfigOptions() {\n    var newOptions = tableModelCoreOptions\n\n    var subtotal_options = []\n    this.dimensions.forEach((dimension, i) => {\n      newOptions['label|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: dimension.label,\n        default: dimension.label,\n        order: i * 10 + 1,\n      }\n\n      newOptions['heading|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: 'Heading',\n        default: '',\n        order: i * 10 + 2,\n      }\n\n      newOptions['hide|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'boolean',\n        label: 'Hide',\n        display_size: 'third',\n        default: false,\n        order: i * 10 + 3,\n      }\n\n      if (i < this.dimensions.length - 1) {\n        var subtotal_option = {}\n        subtotal_option[dimension.label] = (i + 1).toString()\n        subtotal_options.push(subtotal_option)\n      }\n    })\n\n    newOptions['subtotalDepth'] = {\n      section: \"Table\",\n      type: \"string\",\n      label: \"Sub Total Depth\",\n      display: 'select',\n      values: subtotal_options,\n      default: \"1\",\n      order: 5,\n    }\n\n    this.measures.forEach((measure, i) => {\n      newOptions['label|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: measure.label,\n        default: measure.label,\n        order: 100 + i * 10 + 1,\n      }\n\n      newOptions['heading|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Heading for ' + measure.label,\n        default: '',\n        order: 100 + i * 10 + 2,\n      }\n\n      newOptions['style|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Style',\n        display: 'select',\n        values: [\n          {'Normal': 'normal'},\n          {'Black/Red': 'black_red'},\n          {'Subtotal': 'subtotal'},\n          {'Hidden': 'hide'}\n        ],\n        order: 100 + i * 10 + 3\n      }\n\n      var comparisonOptions = []\n      \n      if (measure.can_pivot) {\n        var pivotComparisons = []\n        this.pivots.forEach((pivot, p) => {\n          if (this.pivots.length === 1 || p === 1 || this.config.colSubtotals ) {\n            var option = {}\n            option['By ' + pivot.label] = pivot.name\n            pivotComparisons.push(option)\n          }\n        })\n        comparisonOptions = comparisonOptions.concat(pivotComparisons)\n      }\n\n      // measures, row totals and supermeasures\n      this.measures.forEach((comparisonMeasure, j) => {\n        var includeMeasure = measure.can_pivot === comparisonMeasure.can_pivot\n                              || \n                            this.has_row_totals && !comparisonMeasure.is_table_calculation         \n        if (i != j && includeMeasure) {\n          var option = {}\n          option['Vs. ' + comparisonMeasure.label] = comparisonMeasure.name\n          comparisonOptions.push(option)\n        }\n      })\n      comparisonOptions.unshift({ '(none)': 'no_variance'})\n\n      newOptions['comparison|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Comparison',\n        display: 'select',\n        values: comparisonOptions,\n        order: 100 + i * 10 + 5\n      }\n\n      newOptions['switch|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Switch',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 6,\n      }\n\n      newOptions['var_num|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var #',\n        display_size: 'third',\n        default: true,\n        order: 100 + i * 10 + 7,\n      }\n\n      newOptions['var_pct|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var %',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 8,\n      }\n    })\n    return newOptions\n  }\n\n  /**\n   * Update the VisPluginTableModel instance\n   * - this.pivots\n   * - this.pivot_fields\n   * - this.has_pivots\n   * - this.has_supers\n   * @param {*} queryResponse \n   */\n  checkPivotsAndSupermeasures(queryResponse) {\n    queryResponse.fields.pivots.forEach(pivot_field => { \n      this.pivot_fields.push(pivot_field.name) \n      this.pivots.push(new PivotField({\n        queryResponseField: pivot_field\n      }))\n    })\n\n    if (typeof queryResponse.pivots !== 'undefined') {\n      this.pivot_values = queryResponse.pivots\n      this.has_pivots = true\n    }\n\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      this.has_supers = true\n    }\n\n    this.number_of_levels = this.has_pivots ? this.pivots.length + 1 : 1\n    if (this.useHeadings && !this.has_pivots) {\n      this.number_of_levels++\n    }\n  }\n\n  addHeaders() {\n    this.pivots.forEach(pivot => {\n      this.headers.push(pivot)\n    })\n\n    var measureHeader = {\n      label: '',\n      name: 'measure',\n      view: ''\n    }\n\n    if (this.sortColsBy === 'getSortByPivots') {\n      this.headers.push(measureHeader)\n    } else {\n      this.headers.unshift(measureHeader)\n    }\n\n    if (this.useHeadings && !this.has_pivots) {\n      var headingHeader = {\n        label: '',\n        name: 'heading',\n        view: ''\n      }\n      this.headers.unshift(headingHeader)\n    }\n  }\n\n  /**\n   * Registers dimensions with the VisPluginTableModel\n   * - this.dimensions\n   * - this.columns\n   * \n   * Uses this.applyVisToolsTags() to enrich column information\n   * \n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addDimensions(queryResponse, col_idx) {\n    queryResponse.fields.dimension_like.forEach(dimension => {\n      var dim = new ModelDimension({\n        vis: this,\n        queryResponseField: dimension\n      })\n      this.dimensions.push(dim)\n\n      var column = new Column(dim.name, this, dim) \n      column.idx = col_idx\n      column.levels = newArray(queryResponse.fields.pivots.length, '')\n      column.sort_by_measure_values = [0, col_idx, ...newArray(this.pivot_fields.length, 0)]\n      column.sort_by_pivot_values = [0, ...newArray(this.pivot_fields.length, 0), col_idx]\n\n      this.columns.push(column)\n      col_idx += 10\n    })\n  }\n\n  /**\n   * Registers measures with the VisPluginTableModel\n   * - this.measures\n   * - this.columns\n   * \n   * Uses this.applyVisToolsTags() to enrich column information\n   * \n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addMeasures(queryResponse, col_idx) {\n    var config = this.config\n    // add measures, list of ids\n    queryResponse.fields.measure_like.forEach(measure => {\n      var newMeasure = new ModelMeasure({\n        vis: this,\n        queryResponseField: measure,\n        can_pivot: true\n      })\n      this.measures.push(newMeasure) \n    })\n    \n    // add measures, list of full objects\n    if (this.has_pivots) {\n      this.pivot_values.forEach(pivot_value => {\n        this.measures.forEach((measure, m) => {\n          var include_measure = (                         // for pivoted measures, skip table calcs for row totals\n            pivot_value.key != '$$$_row_total_$$$'        // if user wants a row total for table calc, must define separately\n          ) || (\n            pivot_value.key == '$$$_row_total_$$$' \n            && measure.is_table_calculation == false\n          )\n\n          if (include_measure) {\n            var columnId = pivot_value.key + '.' + measure.name\n\n            var levels = [] // will contain a list of all the pivot values for this column\n            var level_sort_values = []\n            queryResponse.fields.pivots.forEach(pivot_field => { \n              levels.push(pivot_value['data'][pivot_field.name])\n              level_sort_values.push(pivot_value['sort_values'][pivot_field.name]) \n            })\n\n            var modelField = measure\n            var column = new Column(columnId, this, modelField)\n            column.idx = col_idx\n            column.levels = levels\n            column.pivoted = true\n            column.pivot_key = pivot_value.key\n\n            if (pivot_value.key !== '$$$_row_total_$$$') {\n              column.sort_by_measure_values = [1, m, ...level_sort_values]\n              column.sort_by_pivot_values = [1, ...level_sort_values, col_idx]\n            } else {\n              column.super = true\n              column.sort_by_measure_values = [2, m, ...newArray(this.pivot_fields.length, 0)]\n              column.sort_by_pivot_values = [2, ...newArray(this.pivot_fields.length, 0), col_idx]\n            }\n\n            this.columns.push(column)\n            col_idx += 10\n          }\n        })\n      })\n    } else {\n      // noticeably simpler for flat tables!\n      this.measures.forEach(measure => {\n        var column = new Column(measure.name, this, measure)\n        column.idx = col_idx\n        try {\n          if (typeof config.columnOrder[column.id] !== 'undefined') {\n            column.pos = config.columnOrder[column.id]\n          } else {\n            column.pos = col_idx\n          }\n        }\n        catch {\n          column.pos = col_idx\n        }\n        column.sort_by_measure_values = [1, column.pos]\n        column.sort_by_pivot_values = [1, column.pos]\n        this.columns.push(column)\n\n        col_idx += 10\n      })\n    }\n    \n    // add supermeasures, if present\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      queryResponse.fields.supermeasure_like.forEach(supermeasure => {\n        var meas = new ModelMeasure({\n          vis: this,\n          queryResponseField: supermeasure,\n          can_pivot: false,\n        })\n        this.measures.push(meas) \n\n        var column = new Column(meas.name, this, meas)\n        column.idx = col_idx\n        column.levels = newArray(queryResponse.fields.pivots.length, '')\n        column.super = true\n        column.sort_by_measure_values = [2, col_idx, ...newArray(this.pivot_fields.length, 1)]\n        column.sort_by_pivot_values = [2, ...newArray(this.pivot_fields.length, 1), col_idx]\n\n        this.columns.push(column)\n        col_idx += 10\n      })\n    }\n  }\n\n   /**\n   * Update the VisPluginTableModel instace\n   * - this.variances\n   */\n  checkVarianceCalculations() {\n    Object.keys(this.config).forEach(option => {\n      if (option.startsWith('comparison')) {\n        var baseline = option.split('|')[1]\n\n        var baseline_in_measures = false\n        this.measures.forEach(measure => {\n          if (baseline === measure.name) {\n            baseline_in_measures = true\n          }\n        })\n\n        if (baseline_in_measures) {\n          if (this.pivot_fields.includes(this.config[option])) {\n            var type = 'by_pivot'\n          } else {\n            var type = 'vs_measure'\n          }\n  \n          if (typeof this.config['switch|' + baseline] !== 'undefined') {\n            if (this.config['switch|' + baseline]) {\n              var reverse = true\n            } else {\n              var reverse = false\n            }\n          }\n  \n          this.variances.push({\n            baseline: baseline,\n            comparison: this.config[option],\n            type: type,\n            reverse: reverse\n          })\n        }\n      }\n    })\n  }\n\n  /**\n   * Creates the index column, a \"for display only\" column when the set of dimensions is reduced to\n   * a single column for reporting purposes.\n   */\n  buildIndexColumn() {\n    var index_column = new Column('$$$_index_$$$', this, this.dimensions[this.dimensions.length - 1])\n\n    index_column.levels = newArray(this.number_of_levels, '')\n    index_column.sort_by_measure_values = [-1, 0, ...newArray(this.pivot_fields.length, 0)]\n    index_column.sort_by_pivot_values = [-1, ...newArray(this.pivot_fields.length, 0), 0]\n    \n    this.columns.push(index_column)\n  }\n\n  checkSubtotalsData(queryResponse) {\n    if (typeof queryResponse.subtotals_data !== 'undefined') {\n      this.has_subtotals = true\n\n      if (typeof queryResponse.subtotals_data[this.addSubtotalDepth] !== 'undefined') {\n        queryResponse.subtotals_data[this.addSubtotalDepth].forEach(lookerSubtotal => {\n          var visSubtotal = new Row('subtotal')\n  \n          visSubtotal['$$$__grouping__$$$'] = lookerSubtotal['$$$__grouping__$$$']\n          var groups = ['Subtotal']\n          visSubtotal['$$$__grouping__$$$'].forEach(group => {\n            groups.push(lookerSubtotal[group].value)\n          })\n          visSubtotal.id = groups.join('|')\n  \n          this.columns.forEach(column => {\n            if (column.pivoted) {\n              visSubtotal.data[column.id] = lookerSubtotal[column.modelField.name][column.pivot_key]\n            } else {\n              visSubtotal.data[column.id] = lookerSubtotal[column.id]\n            }\n  \n            if (typeof visSubtotal.data[column.id] !== 'undefined') {\n              if (typeof visSubtotal.data[column.id].cell_style === 'undefined') {\n                visSubtotal.data[column.id].cell_style = ['total', 'subtotal']\n              } else {\n                isSubtotal.data[column.id].cell_style.concat(['total', 'subtotal'])\n              }\n              if (typeof column.modelField.style !== 'undefined') {\n                visSubtotal.data[column.id].cell_style = visSubtotal.data[column.id].cell_style.concat(column.modelField.style)\n              }\n              if (visSubtotal.data[column.id].value === null) {\n                visSubtotal.data[column.id].rendered = ''\n              }\n            }            \n          })\n          this.subtotals_data[visSubtotal.id] = visSubtotal\n        })\n      }\n    }\n  }\n\n  /**\n   * Populates this.data with Rows of data\n   * @param {*} lookerData \n   */\n  buildRows(lookerData) {\n    lookerData.forEach((lookerRow, i) => {\n      var row = new Row('line_item') // TODO: consider creating the row object once all required field values identified\n      \n      // flatten data, if pivoted. Looker's data structure is nested for pivots (to a single level, no matter how many pivots)\n      this.columns.forEach(column => {\n        \n        if (column.pivoted) {\n          row.data[column.id] = lookerRow[column.modelField.name][column.pivot_key]\n        } else {\n          row.data[column.id] = lookerRow[column.id]\n        }\n\n        if (typeof row.data[column.id] !== 'undefined') {\n          if (typeof row.data[column.id].cell_style === 'undefined') {\n            row.data[column.id].cell_style = []\n          }\n          if (typeof column.modelField.style !== 'undefined') {\n            row.data[column.id].cell_style = row.data[column.id].cell_style.concat(column.modelField.style)\n          }\n          if (row.data[column.id].value === null) {\n            row.data[column.id].rendered = ''\n          }\n          if (column.modelField.is_turtle) {\n            var cell_series = new CellSeries({\n              column: column,\n              row: row,\n              sort_value: row.data[column.id].sort_value,\n              series: {\n                keys: row.data[column.id]._parsed.keys,\n                values: row.data[column.id]._parsed.values\n              }\n            })\n            row.data[column.id].value = cell_series\n            row.data[column.id].rendered = cell_series.to_string()\n          }\n        }\n      })\n\n      // set a unique id for the row\n      var all_dims = []\n      this.dimensions.forEach(dimension => {\n        all_dims.push(row.data[dimension.name].value)\n      })\n      row.id = all_dims.join('|')\n\n      // set an index value (note: this is an index purely for display purposes; row.id remains the unique reference value)\n      var last_dim = this.dimensions[this.dimensions.length - 1].name\n\n      row.data['$$$_index_$$$'] = {\n        value: row.data[last_dim].value,\n        rendered: this.getRenderedFromHtml(row.data[last_dim]),\n        html: row.data[last_dim].html,\n        cell_style: ['indent']\n      }\n\n      row.sort = [0, 0, i]\n      this.data.push(row)\n    })\n  }\n\n  /**\n   * Generate data series to support transposition\n   */\n  addColumnSeries() {\n    this.columns.forEach(column => {\n      var keys = []\n      var values = []\n      var types = []\n\n      this.data.forEach(row => {\n        keys.push(row.id)\n        values.push(row.data[column.id].value)\n        types.push(row.type)\n      })\n\n      var new_series = new ColumnSeries({\n        column: column,\n        is_numeric: column.modelField.is_numeric,\n        series: {\n          keys: keys,\n          values: values,\n          types: types\n        }\n      })\n      \n      column.series = new_series\n      this.column_series.push(new_series)\n    })\n  }\n\n  buildTotals(queryResponse) {\n    if (typeof queryResponse.totals_data !== 'undefined') {\n      if (typeof queryResponse.truncated !== 'undefined') {\n        var calculate_others = true\n      } else {\n        var calculate_others = false\n      }\n\n      var totals_ = queryResponse.totals_data\n\n      var firstVisibleDimension = this.dimensions[0].name\n      for (var i = 0; i > this.dimensions.length; i++) {\n        var dimension = this.dimensions[i]\n        if (!dimension.hide) {\n          firstVisibleDimension = dimension.name\n          break\n        }\n      }\n\n      var totals_row = new Row('total')\n      var others_row = new Row('line_item')\n\n      this.columns.forEach(column => {\n        var other_value = null\n        totals_row.id = 'Total'\n        others_row.id = 'Others'\n        totals_row.data[column.id] = { value: '', cell_style: ['total'] } // set a default on all columns\n        others_row.data[column.id] = { value: '', cell_style: [] } // set a default on all columns\n        \n        if (column.modelField.type == 'measure') {\n          if (column.pivoted == true) {\n            var cellValue = totals_[column.modelField.name][column.pivot_key]       \n          } else {\n            var cellValue = totals_[column.id]  \n          }\n          if (typeof cellValue.rendered == 'undefined' && typeof cellValue.html !== 'undefined' ){ // totals data may include html but not rendered value\n            cellValue.rendered = this.getRenderedFromHtml(cellValue)\n          }\n          if (calculate_others) {\n            if (['sum', 'count_distinct', 'count'].includes(column.modelField.calculation_type)) {\n              other_value = cellValue.value - column.series.series.sum\n            } else if (column.modelField.calculation_type === 'average') {\n              other_value = (cellValue.value + column.series.series.avg) / 2\n            }  \n          }\n          cellValue.cell_style = ['total']\n          totals_row.data[column.id] = cellValue\n          if (typeof totals_row.data[column.id].links !== 'undefined') {\n            totals_row.data[column.id].links.forEach(link => {\n              link.type = \"measure_default\"\n            })\n          }\n\n          if (calculate_others && other_value) {\n            var formatted_value = column.modelField.value_format === '' \n                  ? other_value.toString() \n                  : SSF.format(column.modelField.value_format, other_value)\n                  others_row.data[column.id] = { value: other_value, rendered: formatted_value } \n          }\n                    \n        }\n      })\n      totals_row.data['$$$_index_$$$'].value = 'TOTAL'\n      totals_row.data[firstVisibleDimension].value = 'TOTAL' \n      totals_row.sort = [1, 0, 0]\n\n      if (calculate_others) {\n        others_row.data['$$$_index_$$$'].value = 'Others'\n        others_row.data[firstVisibleDimension].value = 'Others'\n        others_row.sort = [1, -1, -1] \n      }\n      \n      this.data.push(totals_row)\n      calculate_others && this.data.push(others_row)\n\n      this.has_totals = true\n      this.sortData()\n    }\n  }\n\n  /**\n   * Performs vertical cell merge, by calculating required rowspan values\n   * Works backwards through the data rows.\n   */\n  updateRowSpanValues () {\n    var span_tracker = {}\n    this.dimensions.forEach(dimension => {\n      span_tracker[dimension.name] = 1\n    })\n\n    // Loop backwards through data rows\n    for (var r = this.data.length - 1; r >= 0 ; r--) {\n      var row = this.data[r]\n\n      // Totals/subtotals rows: full reset and continue\n      if (row.type !== 'line_item' ) {\n        this.dimensions.forEach(dimension => {\n          span_tracker[dimension.name] = 1\n        })\n        continue;\n      }\n\n      // Loop fowards through the dimensions\n      this.rowspan_values[row.id] = {}\n      for (var i = 0; i < this.dimensions.length; i++) {\n        var dimension = this.dimensions[i]\n        var this_cell_value = this.data[r].data[dimension.name].value\n        if (r > 0) {\n          var cell_above_value = this.data[r - 1].data[dimension.name].value\n        }\n\n        // Match: mark invisible (span_value = -1). Increment the span_tracker.\n        if (r > 0 && this_cell_value == cell_above_value) {\n          this.rowspan_values[row.id][dimension.name] = -1;\n          span_tracker[dimension.name] += 1;\n        } else {\n        // Different: set span_value from span_tracker. Partial reset and continue\n          for (var d_ = i; d_ < this.dimensions.length; d_++) {\n            var dim_ = this.dimensions[d_].name\n            this.rowspan_values[row.id][dim_] = span_tracker[dim_];\n            span_tracker[dim_] = 1\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates subtotals values\n   * \n   * 1. Build array of subtotal groups\n   *    - Based on the joined values of each row's dimensions (up to the configured subtotal depth)\n   *    - Update each row's sort value with its subtotal group number\n   * 2. Generate data rows\n   *    - For each subtotal group, create a new Row\n   *      - For each Column\n   *        - Set the style\n   *        - In the index dimension and the firstVisibleDimension, put the subtotal label\n   *        - If it's a measure \n   *          - Count & total all rows of type 'line_item'\n   *          - Use total or average value based on calculation type\n   *          - Set as blank if it's a string type\n   *            // This is a gap in functionality. Ideally subtotal would replicate the logic that generated\n   *            // the string values in the line items.\n   */\n  addSubTotals () { \n    var depth = this.addSubtotalDepth\n\n    // BUILD GROUPINGS / SORT VALUES\n    var subTotalGroups = []\n    var latest_group = []\n    this.data.forEach((row, i) => {    \n      if (row.type !== 'total') {\n        var group = []\n        for (var g = 0; g < depth; g++) {\n          var dim = this.dimensions[g].name\n          group.push(row.data[dim].value)\n        }\n        if (group.join('|') !== latest_group.join('|')) {\n          subTotalGroups.push(group)\n          latest_group = group\n        }\n        row.sort = [0, subTotalGroups.length-1, i]\n      }\n    })\n\n    var firstVisibleDimension = this.dimensions[0].name\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dimension = this.dimensions[i]\n      if (!dimension.hide) {\n        firstVisibleDimension = dimension.name\n        break\n      }\n    }\n\n    // GENERATE DATA ROWS FOR SUBTOTALS\n    subTotalGroups.forEach((subTotalGroup, s) => {\n      var subtotal = new Row('subtotal')\n      subtotal.id = 'Subtotal|' + subTotalGroup.join('|')\n\n      this.columns.forEach(column => {\n        subtotal.data[column.id] = { 'cell_style': ['total', 'subtotal'] } // set default\n\n        if (column.id === '$$$_index_$$$' || column.id === firstVisibleDimension ) {\n          var subtotal_label = subTotalGroup.join(' | ')\n          subtotal.data[column.id].value = subtotal_label\n        } \n\n        if (column.modelField.type == 'measure') {\n          if (Object.entries(this.subtotals_data).length > 0) {\n            subtotal.data[column.id] = { ...subtotal.data[column.id], ...this.subtotals_data[subtotal.id].data[column.id] }\n          } else {\n            if (column.pivoted) {\n              var cellKey = [column.pivot_key, column.modelField.name].join('.') \n            } else {\n              var cellKey = column.id\n            }\n\n            var subtotal_value = 0\n            var subtotal_items = 0\n            var rendered = ''\n            this.data.forEach(data_row => {\n              if (data_row.type == 'line_item' && data_row.sort[1] == s) { // data_row.sort[1] == s checks whether its part of the subtotal group\n                var value = data_row.data[cellKey].value\n                if (Number.isFinite(value)) {\n                  subtotal_value += value\n                  subtotal_items++\n                }\n              } \n            })\n            \n            if (column.modelField.calculation_type === 'average' && subtotal_items > 0) {\n              subtotal_value = subtotal_value / subtotal_items\n            }\n            if (subtotal_value) {\n              rendered = column.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(column.modelField.value_format, subtotal_value)\n            }\n            if (column.modelField.calculation_type === 'string') {\n              subtotal_value = ''\n              rendered = ''\n            } \n\n            var cellValue = {\n              value: subtotal_value,\n              rendered: rendered,\n              cell_style: ['subtotal', 'total']\n            }\n            subtotal.data[cellKey] = cellValue\n          }\n        }\n      })\n      subtotal.sort = [0, s, 9999]\n      this.data.push(subtotal)\n    })\n    this.sortData()\n    this.has_subtotals = true\n  }\n\n  /**\n   * Generates new column subtotals, where 2 pivot levels have been used\n   * // TODO: Could also have subtotals for 1 pivot tables sorted by measure\n   * \n   * 1. Derive the new column definitions\n   * 2. Use the new definitions to add subtotal columns to table.columns\n   * 3. Calculate the column subtotal values\n   */\n  addColumnSubTotals () {\n    var last_pivot_key = ''\n    var last_pivot_col = {}\n    var subtotals = []\n\n    var pivots = []\n    var pivot_dimension = this.pivot_fields[0]\n    this.pivot_values.forEach(pivot_value => {\n      var p_value = pivot_value['data'][pivot_dimension]\n      if (p_value !== null) { pivots.push(p_value) }\n    })\n    pivots = [...new Set(pivots)]\n\n    // DERIVE THE NEW COLUMN DEFINITIONS\n    pivots.forEach((pivot, p) => {\n      var highest_pivot_col = [0, '']\n      var previous_subtotal = null\n\n      this.measures.forEach((measure, m) => {\n        if (measure.can_pivot) {\n          var subtotal_col = {\n            modelField: measure,\n            pivot: pivot,\n            measure_idx: m,\n            pivot_idx: p,\n            columns: [],\n            id: ['$$$_subtotal_$$$', pivot, measure.name].join('.'),\n            after: ''\n          }\n  \n          this.columns.forEach((column, i) => {  \n            if (column.pivoted && column.levels[0] == pivot) {\n              if (column.modelField.name == measure.name) {\n                subtotal_col.columns.push(column.id)\n              }\n              if (column.levels[0] == pivot) {\n                if (i > highest_pivot_col[0]) {\n                  highest_pivot_col = [i, column.id]\n                }\n              }\n            }\n          })\n  \n          if (pivot != last_pivot_key) {\n            last_pivot_col[pivot] = highest_pivot_col[1]\n            previous_subtotal = null\n          }\n  \n          subtotal_col.after = previous_subtotal || last_pivot_col[pivot]\n          last_pivot_key = pivot\n          previous_subtotal = subtotal_col.id\n          subtotals.push(subtotal_col)\n        }\n      })\n    })\n\n    // USE THE NEW DEFINITIONS TO ADD SUBTOTAL COLUMNS TO TABLE.COLUMNS\n    subtotals.forEach((subtotal, s) => {\n      var modelField = this.measures[subtotal.measure_idx]\n      var column = new Column(subtotal.id, this, modelField)\n\n      column.levels = [subtotal.pivot, 'Subtotal']\n      column.sort_by_measure_values = [1, subtotal.measure_idx, ...column.levels]\n\n      var pivot_values = [...column.levels]\n      if (typeof pivot_values[pivot_values.length-1] == 'string') {\n        pivot_values[pivot_values.length-1] = 'ZZZZ'\n      } else {\n        pivot_values[pivot_values.length-1] = 9999\n      }\n      column.sort_by_pivot_values = [1, ...pivot_values, 10000 + s]\n      column.pivoted = true\n      column.subtotal = true\n      column.pivot_key = [subtotal.pivot, '$$$_subtotal_$$$'].join('|')\n      this.columns.push(column)\n    })\n    this.sortColumns()\n\n    // CALCULATE COLUMN SUB TOTAL VALUES\n    this.data.forEach(row => {\n      subtotals.forEach(subtotal => {\n        var subtotal_value = 0\n        subtotal.columns.forEach(field => {\n          subtotal_value += row.data[field].value\n        })\n        row.data[subtotal.id] = {\n          value: subtotal_value,\n          rendered: subtotal.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(subtotal.modelField.value_format, subtotal_value),\n          align: 'right',\n          cell_style: ['subtotal']\n        }\n        if (['subtotal', 'total'].includes(row.type)) { row.data[subtotal.id].cell_style.push('total') }\n      })\n    })\n\n    // return subtotals\n  }\n\n  /**\n   * Variance calculation function to enable addVariance()\n   * @param {*} value_format \n   * @param {*} id \n   * @param {*} calc \n   * @param {*} baseline \n   * @param {*} comparison \n   */\n  calculateVariance (value_format, id, calc, baseline, comparison) {\n    this.data.forEach(row => {\n      var baseline_value = row.data[baseline.id].value\n      var comparison_value = row.data[comparison.id].value\n      if (calc === 'absolute') {\n        var cell_value = {\n          value: baseline_value - comparison_value,\n          rendered: value_format === '' ? (baseline_value - comparison_value).toString() : SSF.format(value_format, (baseline_value - comparison_value)),\n          cell_style: []\n        }\n      } else {\n        var value = (baseline_value - comparison_value) / Math.abs(comparison_value)\n        if (!isFinite(value)) {\n          var cell_value = {\n            value: null,\n            rendered: '∞',\n            cell_style: []\n          }\n        } else {\n          var cell_value = {\n            value: value,\n            rendered: SSF.format('#0.00%', value),\n            cell_style: []\n          }\n        }\n      }\n      if (row.type == 'total' || row.type == 'subtotal') {\n        cell_value.cell_style.push('total')\n      }\n      if (row.type === 'subtotal') {\n        cell_value.cell_style.push('subtotal')\n      }\n      if (cell_value.value < 0) {\n        cell_value.cell_style.push('red')\n      }\n      row.data[id] = cell_value\n    })\n  }\n\n  createVarianceColumn (colpair) {\n    if (!this.config.colSubtotals && colpair.variance.baseline.startsWith('$$$_subtotal_$$$')) {\n      console.log('Cannot calculate variance of column subtotals if subtotals disabled.')\n      return\n    }\n    var id = ['$$$_variance_$$$', colpair.calc, colpair.variance.baseline, colpair.variance.comparison].join('|')\n    var baseline = this.getColumnById(colpair.variance.baseline)\n    var comparison = this.getColumnById(colpair.variance.comparison)\n    var column = new Column(id, this, baseline.modelField)\n\n    if (colpair.calc === 'absolute') {\n      column.variance_type = 'absolute'\n      column.idx = baseline.idx + 1\n      column.pos = baseline.pos + 1\n      column.sort_by_measure_values = baseline.sort_by_measure_values.concat(1)\n      column.sort_by_pivot_values = baseline.sort_by_pivot_values.concat(1)\n      column.hide = !this.config['var_num|' + baseline.modelField.name]\n    } else {\n      column.variance_type = 'percentage'\n      column.idx = baseline.idx + 2\n      column.pos = baseline.pos + 2\n      column.sort_by_measure_values = baseline.sort_by_measure_values.concat(2)\n      column.sort_by_pivot_values = baseline.sort_by_pivot_values.concat(2)\n      column.unit = '%'\n      column.hide = !this.config['var_pct|' + baseline.modelField.name]\n    }\n\n    // TODO: Review sort values / algorithms\n    if (baseline.sort_by_measure_values.length < column.sort_by_measure_values.length) {\n      baseline.sort_by_measure_values.push(0)\n    }\n    if (baseline.sort_by_pivot_values.length < column.sort_by_pivot_values.length) {\n      baseline.sort_by_pivot_values.push(0)\n    }\n\n    if (typeof this.config.columnOrder[column.id] !== 'undefined') {\n      column.pos = this.config.columnOrder[column.id]\n    } \n\n    column.pivoted = baseline.pivoted\n    column.super = baseline.super\n    column.pivot_key = ''\n\n    column.levels = baseline.levels\n    if (this.config.groupVarianceColumns) {\n      if (this.config.sortColumnsBy === 'getSortByPivots') {\n        column.sort_by_pivot_values[0] = 1.5\n      }\n      if (baseline.levels.length === 1) {\n        column.levels = ['Variance']\n      } else {\n        column.levels = ['Variance', baseline.levels[1]]\n      }\n    }\n\n    this.columns.push(column)\n    if (colpair.variance.reverse) {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, comparison, baseline)\n    } else {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, baseline, comparison)\n    }\n  }\n\n  /**\n   * Function to add variance columns directly within table vis rather than requiring a table calc\n   * \n   * Takes list of variances configured by the user, and generates a list of column-pairs necessary\n   * to calculate those variances. There is at least one baseline-comparison pair per variance.\n   * Comparing different measures in a pivoted table will calculate a variance pair per pivot value.\n   * Comparing the same measure across pivots will calculate one pair less than there are pivots e.g.\n   * if comparing this year to last year, there are two \"Reporting Period\" values but only one variance.\n   */\n  addVarianceColumns () {\n    var variance_colpairs = []\n    var calcs = ['absolute', 'percent']\n    \n    Object.keys(this.variances).forEach(v => {\n      var variance = this.variances[v]\n      if (variance.comparison !== 'no_variance') {          \n        if (variance.type === 'vs_measure') {\n          if (!this.has_pivots) {\n            calcs.forEach(calc => {\n              variance_colpairs.push({\n                variance: variance,\n                calc: calc\n              })\n            })\n          } else {\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                calcs.forEach(calc => {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [pivot_value.key, variance.comparison].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                })\n              }\n            })\n          }\n        } else if (variance.type === 'by_pivot') { \n          if (this.pivot_fields.length === 1 || this.pivot_fields[1] === variance.comparison) {\n            this.pivot_values.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                if (!pivot_value.is_total) {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [this.pivot_values[index].key, variance.baseline].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                }\n              })\n            })\n          } else { // top pivot value - variance by subtotal\n            var top_level_pivots = []\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                var value = pivot_value.data[this.pivot_fields[0]]\n                if (!top_level_pivots.includes(value)) {\n                  top_level_pivots.push(value)\n                }\n              }\n            })\n            top_level_pivots.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                variance_colpairs.push({\n                  calc: calc,\n                  variance: {\n                    baseline: ['$$$_subtotal_$$$', pivot_value, variance.baseline].join('.'),\n                    comparison: ['$$$_subtotal_$$$', top_level_pivots[index], variance.baseline].join('.'),\n                    reverse: variance.reverse,\n                    type: variance.type\n                  }\n                })\n              })\n            })\n          } \n        }\n      }\n    })\n\n    variance_colpairs.forEach(colpair => {\n      this.createVarianceColumn(colpair)\n    })\n  }\n\n  /**\n   * Sorts columns by config option\n   * \n   * Depending on the colsSortBy option, columns are sorted by either:\n   * \n   * Sort by Pivots (default)\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Pivot sort values\n   * 3. Original column number for the Looker data obect [last item in sort value array]\n   * \n   * Sort by Measures\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Original Column Number\n   * 3. Measure sort values [remainder of sort value array]\n   * \n   * Note that column sort values can be over-riden by manual drag'n'drop \n   */\n  sortColumns () {\n    var compareColSortValues = (a, b) => {\n      var param = this.sortColsBy\n      var depth = a[param]().length\n      for(var i=0; i<depth; i++) {\n          if (a[param]()[i] > b[param]()[i]) { return 1 }\n          if (a[param]()[i] < b[param]()[i]) { return -1 }\n      }\n      return -1\n    }\n    this.columns.sort(compareColSortValues)\n\n    if (this.useIndexColumn) {\n      var columns = this.columns.filter(c => c.modelField.type == 'measure' || c.id === '$$$_index_$$$').filter(c => !c.hide)\n    } else {\n      var columns =  this.columns.filter(c => c.id !== '$$$_index_$$$').filter(c => !c.hide)\n    }\n  }\n\n  /**\n   * 1. build rows\n   * 2. backwards <--- rows\n   *    3. Check for resets (totals, subtotals .. what's column equivalent, change of top pivot?)\n   *    4. Forwards ---> thru columns\n   *        5. Match: mark invisible (span_value = -1). Increment the span_tracker.\n   *        6. Diff: set span_value from span_tracker. Partial reset and continue.\n   */\n  setColSpans_ () {\n    var leaves = []\n    var tiers = this.headers\n    var span_values = this.colspan_values_\n    var span_tracker = {}\n    tiers.forEach(tier => {\n      span_tracker[tier.name] = 1\n    })\n\n    // 1)\n    if (this.useIndexColumn) {\n      var columns = this.columns\n                      .filter(c => c.modelField.type === 'measure' || c.id === '$$$_index_$$$')\n                      .filter(c => !c.hide)\n    } else {\n      var columns = this.columns\n                      .filter(c => c.id !== '$$$_index_$$$')\n                      .filter(c => !c.hide)\n    }\n\n    columns.forEach(column => {\n      var leaf = {\n        id: column.id,\n        data: column.getHeaderData()\n      }\n      leaves.push(leaf)\n    })\n\n    console.log('new setColSpans() leaves', leaves)\n\n    // 2)\n    for (var l = leaves.length - 1; l >= 0; l--) {\n      var leaf = leaves[l]\n      span_values[leaf.id] = {}\n      console.log('leaf:---------------------------', leaf)\n\n      // 3) - reset need not yet identified?\n\n      // 4)\n      for (var t = 0; t < tiers.length; t++) {\n        var tier = tiers[t]\n        console.log('tier:', tier)\n        var this_tier_value = leaf.data[tier.name]\n        if (l > 0) {\n          var neighbour_value = leaves[l - 1].data[tier.name]\n          console.log('this_tier_value', this_tier_value)\n          console.log('neighbour_value', neighbour_value)\n        }\n\n        // 5) \n        if (l > 0 && this_tier_value === neighbour_value) {\n          console.log('MATCH: leaf.id, tier.name', leaf.id, tier.name)\n          span_values[leaf.id][tier.name] = -1;\n          span_tracker[tier.name] += 1;\n        } else {\n        // 6) \n          console.log('DIFF: span_tracker', JSON.stringify(span_tracker, null, 2))\n          for (var t_ = t; t_ < tiers.length; t_++) {\n            var tier_ = tiers[t_]\n            console.log('DIFF: leaf.id, tier_.name', leaf.id, tier_.name)\n            span_values[leaf.id][tier_.name] = span_tracker[tier_.name];\n            span_tracker[tier_.name] = 1\n          }\n          break;\n        }\n      }\n    }\n  }\n\n    /**\n   * Performs horizontal cell merge of header values by calculating required colspan values\n   * @param {*} columns \n   */\n  setColSpans () {\n    if (this.useIndexColumn) {\n      var columns = this.columns\n                      .filter(c => c.modelField.type === 'measure' || c.id === '$$$_index_$$$')\n                      .filter(c => !c.hide)\n    } else {\n      var columns = this.columns\n                      .filter(c => c.id !== '$$$_index_$$$')\n                      .filter(c => !c.hide)\n    }\n\n    var header_levels = []\n    var span_values = []\n    var span_tracker = []\n    \n    // init header_levels and span_values arrays\n    for (var c = columns.length - 1; c >= 0; c--) {\n      var column = columns[c]\n      var idx = columns.length - 1 - c\n\n      header_levels[idx] = column.getHeaderLevels()\n\n      span_values[c] = newArray(header_levels[idx].length, 1)\n    }\n    console.log('old setColSpans() header_levels', header_levels)\n\n    if (this.spanCols) {\n      span_tracker = newArray(header_levels[0].length, 1)\n\n      // FIRST PASS: loop through the pivot headers\n      for (var h = 0; h < header_levels.length; h++) {\n        var header = header_levels[h]\n        \n        // loop through the levels for the pivot headers\n        var start = 0\n        var end = header.length - 1\n\n        for (var l = start; l < end; l++) {\n          var this_value = header_levels[h][l]\n          if (h < header_levels.length - 1) {\n            var above_value = header_levels[h + 1][l]\n          }\n\n          // Match: mark invisible (span_value = -1). Increment the span_tracker.\n          if (h < header_levels.length - 1 && this_value == above_value) {\n            span_values[h][l] = -1;\n            span_tracker[l] += 1;\n          } else {\n          // Different: set span_value from span_tracker. Partial reset and continue\n            for (var l_ = l; l_ < end; l_++) {\n              span_values[h][l_] = span_tracker[l_];\n              span_tracker[l_] = 1\n            }\n            break;\n          }\n        }\n      }\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        var label_level = this.pivot_fields.length + 1\n      } else {\n        var label_level = 0\n      }\n\n      // SECOND PASS: loop backwards through the levels for the column labels\n      for (var h = header_levels.length - 1; h >= 0; h--) {\n        var this_value = header_levels[h][label_level]\n        \n        if (h > 0) {\n          var next_value = header_levels[h - 1][label_level] \n        }\n        // increment the span_tracker if dimensions match\n        if (h > 0 && this_value == next_value) {\n          span_values[h][label_level] = -1;\n          span_tracker[label_level] += 1;\n        } else {\n        // partial reset and continue if dimensions different\n          span_values[h][label_level] = span_tracker[label_level];\n          span_tracker[label_level] = 1\n        }\n      }\n      span_values.reverse()\n    }\n    \n    columns.forEach((column, idx) => {\n      column.colspans = span_values[idx]\n      this.colspan_values[column.id] = span_values[idx]\n    })\n  }\n\n  /**\n   * Applies conditional formatting (red if negative) to all measure columns set to use it \n   */\n  applyFormatting() {\n    this.columns.forEach(column => {\n      var config_setting = this.config['style|' + column.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        switch (config_setting) {\n          case 'black_red':\n            this.data.forEach(row => {\n              if (row.data[column.id].value < 0) {\n                row.data[column.id].cell_style.push('red')\n              }\n            })\n            break\n        }\n      }\n    })\n  }\n\n  /**\n   * For rendering a transposed table i.e. with the list of measures on the left hand side\n   * 1. If used, add the 'header' column\n   * 2. Depending on column sort order, add pivot fields then a measure column (or vice versa) \n   * 3. Add a transposed column for every data row\n   */\n  transposeColumns () {\n    this.transposed_columns = []\n    var default_colspan = newArray(this.dimensions.length, 1)\n    var index_parent = {\n      align: 'left',\n      type: 'transposed_table_index',\n      is_table_calculation: false\n    }\n    var measure_parent = {\n      align: 'right',\n      type: 'transposed_table_measure',\n      is_table_calculation: false\n    }\n\n    if (this.useHeadings && !this.has_pivots) {\n      var transposed_column = new Column('header', this, index_parent)\n      transposed_column.labels = ['Header', '', '']\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'measure'\n      this.transposed_columns.push(transposed_column)\n    }\n\n    if (this.sortColsBy === 'getSortByPivots') {\n      this.pivots.forEach(pivot => {\n        var transposed_column = new Column(pivot.name, this, index_parent)\n        transposed_column.labels = [pivot.label_short, '', '']\n        transposed_column.colspans = default_colspan\n        transposed_column.type = 'dimension'\n        transposed_column.align = 'left'\n        this.transposed_columns.push(transposed_column)\n      })\n\n      var transposed_column = new Column('measure', this, index_parent)\n      transposed_column.labels = ['Meaure', '', '']\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'measure'\n      transposed_column.align = 'left'\n      this.transposed_columns.push(transposed_column)\n    } else {\n      var transposed_column = new Column('measure', this, index_parent)\n      transposed_column.labels = ['Meaure', '', '']\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'measure'\n      transposed_column.align = 'left'\n      this.transposed_columns.push(transposed_column)\n\n      this.pivots.forEach(pivot => {\n        var transposed_column = new Column(pivot.name, this, index_parent)\n        transposed_column.labels = [pivot.label_short, '', '']\n        transposed_column.colspans = default_colspan\n        transposed_column.type = 'dimension'\n        transposed_column.align = 'left'\n        this.transposed_columns.push(transposed_column)\n      })\n    }\n    \n    for (var h = 0; h < this.data.length; h++) {\n      var sourceRow = this.data[h]\n      if (sourceRow.type === 'line_item') {\n        var colspan = []\n        var labels = []\n        this.dimensions.forEach(dim => {\n          if (this.spanRows) {\n            colspan.push(this.rowspan_values[sourceRow.id][dim.name])\n          } else {\n            colspan.push(1)\n          }\n          labels.push(sourceRow.data[dim.name].value)\n        })\n      } else if (sourceRow.type === 'subtotal') {\n        var colspan = default_colspan\n        var labels = ['Subtotal'].concat(newArray(this.dimensions.length-1, ''))\n      } else if (sourceRow.type === 'total') {\n        var colspan = default_colspan\n        var labels = ['TOTAL'].concat(newArray(this.dimensions.length-1, ''))\n      }\n\n      var transposed_column = new Column(sourceRow.id, this, measure_parent)\n      transposed_column.transposed = true\n      transposed_column.colspans = colspan\n      transposed_column.labels = labels\n      transposed_column.align = 'right'\n      this.transposed_columns.push(transposed_column)\n    }\n  }\n\n  transposeRows () {\n    this.columns.filter(c => c.modelField.type === 'measure').forEach(column => {\n      var transposed_data = {}\n      this.data.forEach(row => {\n        if (typeof row.data[column.id] !== 'undefined') {\n          transposed_data[row.id] = row.data[column.id]\n          transposed_data[row.id]['align'] = 'right'\n          if (typeof transposed_data[row.id]['cell_style'] !== 'undefined') {\n            transposed_data[row.id]['cell_style'].push('transposed')\n          } else {\n            transposed_data[row.id]['cell_style'] = ['transposed']\n          }\n        } else {\n          console.log('row data does not exist for', column.id)\n        }\n      })\n\n      // INDEX FIELDS (header, pivot values, measure name)\n      var column_heading = column.modelField.heading\n      var config_setting = this.config['heading|' + column.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        column_heading = config_setting ? config_setting : column_heading\n      } \n      transposed_data.header = { value: column_heading, cell_style: [] }\n      if (column.subtotal) { transposed_data.header.cell_style.push('subtotal') }\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        var measure_level = this.pivots.length\n      } else {\n        var measure_level = 0\n      }\n      if (this.useHeadings && !this.has_pivots) { measure_level++ } // should this.useHeadings be combined with !has_pivots?\n\n      transposed_data.measure = { value: column.getLabel(measure_level), cell_style: [] }\n      if (column.subtotal) { transposed_data.measure.cell_style.push('subtotal') }\n      if (column.modelField.style.includes('subtotal')) { transposed_data.measure.cell_style.push('subtotal') }\n      \n      this.pivot_fields.forEach((pivot_field, idx) => {\n        transposed_data[pivot_field] = { value: column.levels[idx], cell_style: [] }\n        if (column.subtotal) { transposed_data[pivot_field].cell_style.push('subtotal') }\n      })\n\n      var transposed_row = new Row('line_item')\n      transposed_row.id = column.id\n      transposed_row.modelField = column.modelField\n      transposed_row.hide = column.hide\n      transposed_row.rowspans = column.colspans                  // does this need to be filtered, as per get headings?\n      transposed_row.data = transposed_data\n\n      this.transposed_data.push(transposed_row)\n    })\n  }\n\n  validateConfig() {\n    if (!['traditional', 'looker', 'contemporary', 'custom'].includes(this.config.theme)) {\n      this.config.theme = 'traditional'\n    }\n\n    if (!['fixed', 'auto'].includes(this.config.layout)) {\n      this.config.layout = 'fixed'\n    }\n\n    if (typeof this.config.transposeTable === 'undefined') {\n      this.config.transposeTable = false\n    }\n\n    Object.entries(this.config).forEach(option => {\n      if (option[1] === 'false') {\n        option[1] = false\n      } else if (option[1] === 'true') {\n        option[1] = true\n      }\n\n      if (option[0].split('|').length === 2) {\n        var [field_option, field_name] = option[0].split('|')\n        if (['label', 'heading', 'hide', 'style', 'switch', 'var_num', 'var_pct', 'comparison'].includes(field_option)) {\n          var keep_option = false\n          this.dimensions.forEach(dimension => {\n            if (dimension.name === field_name) { keep_option = true }\n          })\n          this.measures.forEach(measure => {\n            if (measure.name === field_name) { keep_option = true }\n          })\n          if (!keep_option) {\n            delete this.config[option[0]]\n          } \n        }\n      }\n    })\n  }\n\n  /**\n   * Returns column that matches ID provided\n   * @param {*} id \n   */\n  getColumnById (id) {\n    var column = {}\n    this.columns.forEach(c => {\n      if (id === c.id) { \n        column = c \n      }\n    })\n    return column\n  }\n\n  getMeasureByName (name) {\n    var measure = ''\n    this.measures.forEach(m => {\n      if (name === m.name) { \n        measure = m\n      }\n    })\n    return measure\n  }\n\n  /**\n   * Sorts the rows of data, then updates vertical cell merge \n   * \n   * Rows are sorted by three values:\n   * 1. Section\n   * 2. Subtotal Group\n   * 3. Row Value (currently based only on original row index from the Looker data object)\n   */\n  sortData () {\n    var compareRowSortValues = (a, b) => {\n      var depth = a.sort.length\n      for(var i=0; i<depth; i++) {\n          if (a.sort[i] > b.sort[i]) { return 1 }\n          if (a.sort[i] < b.sort[i]) { return -1 }\n      }\n      return -1\n    }\n    this.data.sort(compareRowSortValues)\n    this.updateRowSpanValues()\n  }\n\n\n  /**\n   * Extracts the formatted value of the field from the html: value\n   * There are cases (totals data) where the formatted value isn't available as usual rendered_value\n   * @param {*} cellValue \n   */\n  getRenderedFromHtml (cellValue) {\n    var parser = new DOMParser()\n    if (typeof cellValue.html !== 'undefined' && !['undefined', ''].includes(cellValue.html)) {\n      try {\n        var parsed_html = parser.parseFromString(cellValue.html, 'text/html')\n        var rendered = parsed_html.documentElement.textContent\n      }\n      catch(TypeError) {\n        var rendered = cellValue.html\n      }\n    } else {\n      var rendered = cellValue.value\n    }\n\n    return rendered\n  }\n\n  /**\n   * Used to support rendering of table as vis. \n   * Returns an array of 0s, of length to match the required number of header rows\n   */\n  getLevels () {\n    var levels = []\n    if (!this.transposeTable) {\n      if (this.useHeadings && !this.has_pivots) { levels.push('headers level') }\n\n      if (this.sortColsBy === 'getSortByPivots') {\n        this.pivots.forEach(pivot => {\n          levels.push(pivot.name)\n        })\n        levels.push('measures level')\n      } else {\n        levels.push('measures level')\n        this.pivots.forEach(pivot => {\n          levels.push(pivot.name)\n        })\n      }\n    } else {\n      levels = this.dimensions\n    }\n\n    return levels\n  }\n\n  /**\n   * Builds array of arrays, used at by table vis to build column groups\n   * Three column groups: \n   * - index (dimensions)\n   * - measures (standard measures)\n   * - totals (supermeasures: row totals and some table calcs)\n   * \n   * For transposed tables:\n   * - index (headers, pivot value, measures)\n   * - measures (Includes subtotals. Cells contain measure values, header rows contain dimension values)\n   * - totals (totals)\n   */\n  getTableColumnGroups () {\n    var index_columns = []\n    var measure_columns = []\n    var total_columns = []\n\n    if (!this.transposeTable) {\n      this.columns.forEach(column => {\n        if (column.modelField.type === 'dimension' && !this.useIndexColumn && column.id !== '$$$_index_$$$' && !column.hide) {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'dimension' && this.useIndexColumn && column.id === '$$$_index_$$$') {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && !column.super && !column.hide) {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && column.super && !column.hide) {\n          total_columns.push({ id: column.id })\n        }\n      })\n    } else {\n      this.transposed_columns.forEach(column => {\n        if (column.modelField.type === 'transposed_table_index') {\n          index_columns.push({ id: column.id})\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id !== 'Total') {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id === 'Total') {\n          total_columns.push({ id: column.id })\n        }\n      })\n    }\n  }\n\n  /**\n   * Used to support rendering of data table as vis. \n   * Builds list of columns out of data set that should be displayed\n   * @param {*} i \n   */\n  getTableHeaders (i) {\n    if (!this.transposeTable) {\n      return this.columns.filter(c => this.colspan_values[c.id][i] > 0)\n    } else {\n      return this.transposed_columns.filter(c => c.colspans[i] > 0)\n    }\n  }\n\n  getDataRows () {\n    if (!this.transposeTable) {\n      return this.data\n    } else {\n      return this.transposed_data\n                        .filter(row => !row.hide)\n    }\n  }\n\n  /**\n   * Used to support rendering of data table as vis.\n   * For a given row of data, returns filtered array of cells – only those cells that are to be displayed.\n   * @param {*} row \n   */\n  getTableColumns (row) {\n    if (!this.transposeTable) {\n      // filter out unwanted dimensions based on index_column setting\n      if (this.useIndexColumn) {\n        var cells = this.columns.filter(c => c.modelField.type == 'measure' || c.id === '$$$_index_$$$').filter(c => !c.hide)\n      } else {\n        var cells =  this.columns.filter(c => c.id !== '$$$_index_$$$').filter(c => !c.hide)\n      }\n\n      // if we're using all dimensions, and we've got span_rows on, need to update the row\n      if (!this.useIndexColumn && this.spanRows) {\n      // set row spans, for dimension cells that should appear\n        cells.forEach(cell => {\n          cell.rowspan = 1 // set default\n          if (row.type === 'line_item' && this.rowspan_values[row.id][cell.id] > 0) {\n            cell.rowspan = this.rowspan_values[row.id][cell.id]\n          } \n        })\n        // filter out dimension cells that a hidden / merged into a cell above\n        if (row.type === 'line_item') {\n          cells = cells.filter(c => c.modelField.type == 'measure' || this.rowspan_values[row.id][c.id] > 0)\n        }\n      }\n    } else {\n      var cells = this.transposed_columns\n      cells.forEach((cell, idx) => {\n        cell.rowspan = 1\n        if (cell.modelField.type === 'transposed_table_index' && typeof row.rowspans[idx] !== 'undefined') {\n          cell.rowspan = this.colspan_values[row.id][idx]\n        }\n      })\n      cells = cells.filter(cell => cell.rowspan > 0)\n    }\n    return cells    \n  }\n\n  /**\n   * Used to support column drag'n'drop when rendering data table as vis.\n   * Updates the table.config with the new pos values.\n   * Accepts a callback function for interaction with the vis.\n   * @param {*} from \n   * @param {*} to \n   * @param {*} callback \n   */\n  moveColumns(from, to, updateColumnOrder) {\n    var config = this.config\n    if (from != to) {\n      var shift = to - from\n      var col_order = config.columnOrder\n      this.columns.forEach(col => {\n        if (col.modelField.type == 'measure' && !col.super) {\n          if (col.pos >= from && col.pos < from + 10) {\n            // console.log('MOVING COLUMN', col.id, col.pos, '->', col.pos + shift)\n            col.pos += shift\n          } else if (col.pos >= to && col.pos < from) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos + 10)\n            col.pos += 10\n          } else if (col.pos >= from + 10 && col.pos < to + 10) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos - 10)\n            col.pos -= 10\n          }\n          col_order[col.id] = col.pos\n        } \n      })\n      updateColumnOrder(col_order)\n    }\n  }\n\n  /**\n   * Returns dataset as a simple json object\n   * Includes line_items only (e.g. no row subtotals)\n   * \n   * Convenience function when using LookerData as an object to support e.g. Vega Lite visualisations\n   */\n  getSimpleJson() {\n    var raw_values = []\n    this.data.forEach(r => {\n      if (r.type === 'line_item') {\n        var row = {}\n        this.columns.forEach(c => {\n          row[c.id] = r.data[c.id].value\n        })\n        raw_values.push(row)\n      }\n    })\n    return raw_values\n  }\n}\n\nexports.VisPluginTableModel = VisPluginTableModel\n\n// MUST\n// TODO: update validateConfig to enforce ALL defaults (OR: while dimensions and measures are created, set defaults in config)\n// TODO: fix bug where Series extents be calculated as NaNs\n\n// SHOULD\n// TODO: tooltip for data cells\n// TODO: tooltip for index cells\n\n// NICE TO HAVE\n// TODO: row & cell highlight on mouseover\n// TODO: Investigate replacing all this.pivot_fields references with this.pivots\n// TODO: option for reporting in 000s or 000000s\n// TODO: more formatting options\n// TODO: addSpacerColumns\n// TODO: addUnitHeaders\n// TODO: addRowNumbers // to Index Column only?\n// TODO: build an explore URL (eg new table calcs) so user can save their variances as a query?\n//        - users would want to preserve column order, could that be done in vis_config?\n\n// FRs\n//\n// Ability to \"expand rows\" for print\n// Config widget to provide checklist display for arrays (e.g. apply multiple styles)\n// Additional info in queryResponse\n//  - filters set on the query\n//  - context (are we in a dashboard or an explore e.g. so that additional info & warnings can be shown in explore)\n// Additional info in details\n//  - Is this the \"final\" updateAsync call?\n// Pass through custom theme information\n// Ability to not just update filters, but also\n//  - Send table_calc expressions back to the explore (eg for variance analysis)\n//  - Send custom field definitions back to the explore\n//  - Request new fields be added to the explore (e.g. add \"hierarchies\" based on drill_fields:)\n// Ability to add horizontal lines to a config section (to split apart field-based options)"],"sourceRoot":""}
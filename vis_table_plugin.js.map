{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js","webpack:///./node_modules/ssf/ssf.js","webpack:///./src/vis_table_plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelField","vis","queryResponseField","this","view","view_label","label","field_group_variant","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","heading","short_name","unit","tags","forEach","tag","split","Series","keys","values","types","length","line_items_only","with_subtotals","push","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelDimension","super","align","ModelPivot","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","HeaderField","pivotData","Row","id","sort","data","Column","transposed","idx","pos","levels","pivot_key","variance_type","pivoted","subtotal","sort_by_measure_values","sort_by_pivot_values","colspans","colspan_values","headers","header","level","headerField","header_setting","label_setting","visId","useShortName","useViewName","join","sortColsBy","header_levels","getLabel","useHeadings","has_pivots","column_heading","config_setting","unshift","headerData","_strrev","x","charAt","fill","pad0","v","pad_","rpad_","version","p2_32","pow","pad0r","round","pad0r1","pad0r2","isgeneral","charCodeAt","days","months","init_table","table_fmt","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","basedate","dnthresh","getTime","base1904","datenum_local","epoch","getTimezoneOffset","_general_int","general_fmt_num","gnr1","gnr2","gnr4","gnr5","gnr6","gfn5","indexOf","replace","V","LOG10E","toPrecision","w","toFixed","toExponential","gfn2","substr","gfn3","gfn4","general_fmt","Error","write_date","fmt","val","ss0","ss","tt","outl","commaify","j","_general_num","_general","write_num","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","String","fromCharCode","rnd","dd","dec","write_num_flt","match","ffmt","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","slice","lastIndexOf","split_fmt","in_str","_split","abstime","fmt_is_date","toUpperCase","eval_fmt","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","is_date","_eval","cfregex","cfregex2","chkcond","thresh","parseFloat","dateNF","table","f","lat","m1","m2","choose_fmt","load_entry","undefined","load","_table","get_table","load_table","tbl","make_ssf","DO_NOT_EXPORT_SSF","tableModelCoreOptions","theme","section","display","default","order","customTheme","layout","columnOrder","rowSubtotals","display_size","colSubtotals","spanRows","spanCols","sortColumnsBy","groupVarianceColumns","indexColumn","transposeTable","VisPluginTableModel","lookerData","queryResponse","dimensions","measures","columns","subtotals_data","transposed_headers","transposed_columns","transposed_data","pivot_fields","pivot_values","pivots","variances","column_series","rowspan_values","useIndexColumn","addRowSubtotals","addSubtotalDepth","subtotalDepth","addColSubtotals","hasTotals","totals_data","calculateOthers","truncated","hasSubtotals","hasRowTotals","has_row_totals","hasPivots","hasSupers","fields","supermeasure_like","Boolean","addPivotsAndHeaders","addDimensions","addMeasures","checkVarianceCalculations","addIndexColumn","checkSubtotalsData","addRows","newOptions","subtotal_options","dimension","subtotal_option","measure","comparisonOptions","pivotComparisons","pivot_field","option","concat","comparisonMeasure","includeMeasure","pivot","measureHeaders","col_idx","dimension_like","newDimension","measure_like","newMeasure","pivot_value","level_sort_values","supermeasure","meas","startsWith","baseline","baseline_in_measures","map","reverse","comparison","index_column","dim_config_setting","lookerSubtotal","visSubtotal","groups","group","cell_style","lookerRow","cell","rowspan","rowid","colid","cell_series","_parsed","last_dim","getRenderedFromHtml","html","new_series","totals_","firstVisibleDimension","totals_row","others_row","other_value","cellValue","links","link","sortData","leaves","tiers","span_values","span_tracker","filter","tier","leaf","this_tier_value","neighbour_value","t_","tier_","depth","subTotalGroups","latest_group","g","dim","subTotalGroup","subtotal_label","entries","cellKey","subtotal_value","subtotal_items","data_row","Number","isFinite","last_pivot_key","last_pivot_col","subtotals","pivot_dimension","p_value","Set","highest_pivot_col","previous_subtotal","subtotal_col","measure_idx","pivot_idx","after","sortColumns","field","calc","baseline_value","comparison_value","cell_value","colpair","variance","getColumnById","calculateVariance","variance_colpairs","calcs","is_total","index","top_level_pivots","createVarianceColumn","param","getHeaderData","default_colspan","index_parent","measure_parent","transposed_column","h","sourceRow","measure_level","transposed_row","field_option","field_name","keep_option","setRowSpans","parser","DOMParser","parseFromString","documentElement","textContent","TypeError","index_columns","measure_columns","total_columns","cells","from","to","updateColumnOrder","shift","col_order","col","raw_values"],"mappings":"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","file":"vis_table_plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.field_group_variant || queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = typeof queryResponseField.is_numeric !== 'undefined' ? queryResponseField.is_numeric : false\n    this.is_array = ['list', 'number_list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = ''\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style = style_setting\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'style':\n              this.style = tags[2] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelPivot extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'pivot'    \n    this.align = 'center'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' ? queryResponseField.is_table_calculation : false\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = typeof queryResponseField.is_turtle !== 'undefined' ? queryResponseField.is_turtle : false\n    this.can_pivot = can_pivot\n  }\n}\n\nclass HeaderField {\n  constructor({ vis, type, modelField = { name: '', label: '', view: '' }, pivotData = {} } = { vis, type, modelField, pivotData }) {\n    this.vis = vis\n    this.type = type\n    \n    this.modelField = modelField\n    // this.name = modelField.name\n    // this.view = modelField.view\n\n    this.pivotData = pivotData\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(with_subtotals)\n      this.max_for_display = Math.max(with_subtotals)\n      this.min = Math.min(line_items_only)\n      this.max = Math.max(line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  toString() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    this.modelField = null\n    this.hide = false\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.variance_type = '' // empty | absolute | percentage\n    this.pivoted = false\n    this.subtotal = false\n    this.super = false\n\n    this.series = null\n    \n    this.sort_by_measure_values = [] // [index -1|dimension 0|measure 1|row totals & supermeasures 2, column number, [measure values]  ]\n    this.sort_by_pivot_values = []   // [index -1|dimension 0|measure 1|row totals & supermeasures 2, [pivot values], column number    ]\n\n    this.colspans = []\n\n    var colspan_values = {}\n    this.vis.headers.forEach(header => {\n      colspan_values[header.type] = 1\n    })\n    this.vis.colspan_values[this.id] = colspan_values\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getLabel (level) {\n    var headerField = this.levels[level]\n\n    var label = headerField.modelField.label\n\n    var header_setting = this.vis.config['heading|' + headerField.modelField.name]\n    var label_setting = this.vis.config['label|' + headerField.modelField.name]\n\n    if (headerField.type === 'heading') {\n      if (typeof header_setting !== 'undefined') {\n        label = header_setting ? header_setting : headerField.modelField.heading\n      } else {\n        label = headerField.modelField.heading\n      }\n      return label\n    }\n\n    if (headerField.type === 'field') {\n      if (typeof this.vis.visId !== 'undefined' && this.vis.visId === 'report_table') {\n        switch (this.variance_type) {\n          case 'absolute':\n            label = 'Var #'\n            break;\n          case 'percentage':\n            label = 'Var %'\n            break;\n          default:\n            label = this.vis.useShortName\n             ? headerField.modelField.short_name || headerField.modelField.label \n             : headerField.modelField.label\n        }\n      } \n      \n      if (typeof label_setting !== 'undefined' && label_setting !== this.modelField.label) {\n        label = label_setting ? label_setting : label\n      }\n  \n      if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n        label = [this.modelField.view, label].join(' ') \n      }\n    }\n    \n    return label\n  }\n\n  /***\n   * Returns array of all header fields per column\n   * 1. Combine pivot values with measure label, in order set by sortColsBy option\n   * 2. Add headings if used (option chosen, flat tables only)\n   */\n  getHeaderLevels () {\n    if (this.modelField.vis.sortColsBy === 'getSortByPivots') {\n      var header_levels = [...this.levels, this.getLabel(this.levels.length)]\n    } else {\n      var header_levels = [this.getLabel(0), ...this.levels]\n    }\n\n    if (this.modelField.vis.useHeadings && !this.modelField.vis.has_pivots) {\n      var column_heading = this.modelField.heading\n      var config_setting = this.modelField.vis.config['heading|' + this.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        column_heading = config_setting ? config_setting : column_heading\n      } \n      header_levels.unshift(column_heading)\n    }\n\n    return header_levels\n  }\n\n  getHeaderData () {\n    var headerData = {}\n    this.modelField.vis.headers.forEach((header, i) => {\n      headerData[header.type] = this.levels[i]\n    })\n\n    return headerData\n  }\n\n  updateSortByMeasures (idx) {\n    if (this.sort_by_measure_values[0] == 1) {\n      if (!this.pivoted && !this.subtotal) {\n        this.sort_by_measure_values = [1, idx]\n      }\n    }\n  }\n\n  getSortByMeasures () {\n    return this.sort_by_measure_values\n  }\n\n  getSortByPivots () {\n    return this.sort_by_pivot_values\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelPivot = ModelPivot\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.HeaderField = HeaderField\nexports.Row = Row\nexports.Column = Column\n","/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nvar make_ssf = function make_ssf(SSF){\nSSF.version = '0.11.0';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\tt[65535]= 'General';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\nfunction general_fmt_int(v) { return v.toString(10); }\nSSF._general_int = general_fmt_int;\nvar general_fmt_num = (function make_general_fmt_num() {\nvar gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/, gnr6 = /(E[+-])(\\d)$/;\nfunction gfn2(v) {\n\tvar w = (v<0?12:11);\n\tvar o = gfn5(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\nfunction gfn3(v) {\n\tvar o = v.toFixed(11).replace(gnr1,\".$1\");\n\tif(o.length > (v<0?12:11)) o = v.toPrecision(6);\n\treturn o;\n}\nfunction gfn4(o) {\n\tfor(var i = 0; i != o.length; ++i) if((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4,\".$1\").replace(gnr5,\"E\").replace(\"e\",\"E\").replace(gnr6,\"$10$2\");\n\treturn o;\n}\nfunction gfn5(o) {\n\treturn o.indexOf(\".\") > -1 ? o.replace(gnr2,\"\").replace(gnr1,\".$1\") : o;\n}\nreturn function general_fmt_num(v) {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = gfn2(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = gfn3(v);\n\treturn gfn5(gfn4(o));\n};})();\nSSF._general_num = general_fmt_num;\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri() { return 0; }\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1;\n\t}\n\tif(outl > 0) return pad0(out, outl); else return \"\";\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 0;\n\t}\n\treturn Math.round((val-Math.floor(val))*Math.pow(10,d));\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) { if(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0)); return \"\"+Math.floor(val); }\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase \"$\": out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\n};\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n","import SSF from \"ssf\"\n\nimport { newArray, ModelDimension, ModelPivot, ModelMeasure, HeaderField, CellSeries, ColumnSeries, Row, Column } from './vis_primitives'\n\nconst tableModelCoreOptions = {\n  theme: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Theme\",\n    values: [\n      { 'Traditional': 'traditional' },\n      { 'Looker': 'looker' },\n      { 'Contemporary': 'contemporary' },\n      { 'Use custom theme': 'custom'}\n    ],\n    default: \"traditional\",\n    order: 1,\n  },\n  customTheme: {\n    section: \"Theme\",\n    type: \"string\",\n    label: \"Load custom CSS from:\",\n    default: \"\",\n    order: 2,\n  },\n  layout: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Layout\",\n    values: [\n      { 'Even': 'fixed' },\n      { 'Auto': 'auto' }\n    ],\n    default: \"fixed\",\n    order: 3,\n  },\n  columnOrder: {},\n  rowSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Row Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 1,\n  },\n  colSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Col Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 2,\n  },\n  spanRows: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Dims\",\n    display_size: 'half',\n    default: true,\n    order: 3,\n  },\n  spanCols: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Headers\",\n    display_size: 'half',\n    default: true,\n    order: 4,\n  },\n  sortColumnsBy: {\n    section: \"Table\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Sort Columns By\",\n    values: [\n      { 'Pivots': 'pivots' },\n      { 'Measures': 'measures' }\n    ],\n    default: \"pivots\",\n    order: 6,\n  },\n  useViewName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Include View Name\",\n    default: false,\n    order: 7,\n  },\n  useHeadings: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Headings\",\n    default: false,\n    order: 8,\n  },\n  useShortName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Short Name (from model tags)\",\n    default: false,\n    order: 9,\n  },\n  groupVarianceColumns: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Group Variance Columns After Pivots\",\n    default: false,\n    order: 10,\n  },\n  indexColumn: {\n    section: \"Dimensions\",\n    type: \"boolean\",\n    label: \"Use Last Field Only\",\n    default: false,\n    order: 0,\n  },\n  transposeTable: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Transpose\",\n    default: false,\n    order: 100,\n  },\n}\n/**\n * Represents an \"enriched data object\" with additional methods and properties for data vis\n * Takes the data, config and queryResponse objects as inputs to the constructor\n */\nclass VisPluginTableModel {\n  /**\n   * Build the LookerData object\n   * @constructor\n   * \n   * - TODO: add new column series\n   * - TODO: Get table column groups\n   * \n   * @param {*} lookerData \n   * @param {*} queryResponse \n   * @param {*} config \n   */\n  constructor(lookerData, queryResponse, config) {\n    this.visId = 'report_table'\n    this.config = config\n\n    this.headers = []\n    this.dimensions = []\n    this.measures = []\n    this.columns = []\n    this.data = []\n    this.subtotals_data = {}\n\n    this.transposed_headers = []\n    this.transposed_columns = []\n    this.transposed_data = []\n\n    this.pivot_fields = []\n    this.pivot_values = typeof queryResponse.pivots !== 'undefined' ? queryResponse.pivots : []\n    this.variances = []\n    this.column_series = []\n\n    this.colspan_values = {}\n    this.rowspan_values = {}\n\n    this.useIndexColumn = config.indexColumn || false\n    this.useHeadings = config.useHeadings || false\n    this.useShortName = config.useShortName || false\n    this.useViewName = config.useViewName || false\n    this.addRowSubtotals = config.rowSubtotals || false\n    this.addSubtotalDepth = parseInt(config.subtotalDepth)|| this.dimensions.length - 1\n    this.addColSubtotals = config.colSubtotals || false\n    this.spanRows = false || config.spanRows\n    this.spanCols = false || config.spanCols\n    this.sortColsBy = config.sortColumnsBy || 'pivots'\n    this.groupVarianceColumns = config.groupVarianceColumns || false\n\n    this.hasTotals = typeof queryResponse.totals_data !== 'undefined' ? true : false\n    this.calculateOthers = typeof queryResponse.truncated !== 'undefined' ? queryResponse.truncated : false \n    this.hasSubtotals = typeof queryResponse.subtotals_data !== 'undefined' ? true : false\n    this.hasRowTotals = queryResponse.has_row_totals || false\n    this.hasPivots = typeof queryResponse.pivots !== 'undefined' ? true : false\n    this.hasSupers = typeof queryResponse.fields.supermeasure_like !== 'undefined' ? Boolean(queryResponse.fields.supermeasure_like.length) : false\n\n    this.transposeTable = config.transposeTable || false\n\n    var col_idx = 0\n    this.addPivotsAndHeaders(queryResponse)\n    this.addDimensions(queryResponse, col_idx)\n    this.addMeasures(queryResponse, col_idx)\n\n    this.checkVarianceCalculations()\n    if (this.useIndexColumn) { this.addIndexColumn(queryResponse) }\n    if (this.hasSubtotals) { this.checkSubtotalsData(queryResponse) }\n\n    this.addRows(lookerData)\n    console.log('Table in progress:', this)\n    return\n    this.addColumnSeries()\n\n    if (this.hasTotals) { this.buildTotals(queryResponse) }\n    if (this.spanRows) { this.setRowSpans() }\n    if (this.addRowSubtotals) { this.addSubTotals() }\n    if (this.addColSubtotals && this.pivot_fields.length === 2) { this.addColumnSubTotals() }\n    if (this.variances) { this.addVarianceColumns() }\n\n    // this.addColumnSeries()    // TODO: add column series for generated columns (eg column subtotals)\n    this.sortColumns()\n    if (this.spanCols) { this.setColSpans() }\n    this.applyFormatting()\n\n    if (this.transposeTable) { \n      this.transposeColumns() \n      this.transposeRows()\n    }\n\n    this.validateConfig()\n    // this.getTableColumnGroups() \n  }\n\n  static getCoreConfigOptions() {\n    return tableModelCoreOptions\n  }\n\n  /**\n   * Hook to be called by a Looker custom vis, for example:\n   *    this.trigger('registerOptions', VisPluginTableModel.getConfigOptions())\n   * \n   * Returns a new config object, combining the core options with dynamic options based on available dimensions and measures\n   */\n  getConfigOptions() {\n    var newOptions = tableModelCoreOptions\n\n    var subtotal_options = []\n    this.dimensions.forEach((dimension, i) => {\n      newOptions['label|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: dimension.label,\n        default: dimension.label,\n        order: i * 10 + 1,\n      }\n\n      newOptions['heading|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: 'Heading',\n        default: '',\n        order: i * 10 + 2,\n      }\n\n      newOptions['hide|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'boolean',\n        label: 'Hide',\n        display_size: 'third',\n        default: false,\n        order: i * 10 + 3,\n      }\n\n      if (i < this.dimensions.length - 1) {\n        var subtotal_option = {}\n        subtotal_option[dimension.label] = (i + 1).toString()\n        subtotal_options.push(subtotal_option)\n      }\n    })\n\n    newOptions['subtotalDepth'] = {\n      section: \"Table\",\n      type: \"string\",\n      label: \"Sub Total Depth\",\n      display: 'select',\n      values: subtotal_options,\n      default: \"1\",\n      order: 5,\n    }\n\n    this.measures.forEach((measure, i) => {\n      newOptions['label|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: measure.label,\n        default: measure.label,\n        order: 100 + i * 10 + 1,\n      }\n\n      newOptions['heading|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Heading for ' + measure.label,\n        default: '',\n        order: 100 + i * 10 + 2,\n      }\n\n      newOptions['style|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Style',\n        display: 'select',\n        values: [\n          {'Normal': 'normal'},\n          {'Black/Red': 'black_red'},\n          {'Subtotal': 'subtotal'},\n          {'Hidden': 'hide'}\n        ],\n        order: 100 + i * 10 + 3\n      }\n\n      var comparisonOptions = []\n      \n      if (measure.can_pivot) {\n        var pivotComparisons = []\n        this.pivot_fields.forEach((pivot_field, p) => {\n          if (this.pivot_fields.length === 1 || p === 1 || this.config.colSubtotals ) {\n            var option = {}\n            option['By ' + pivot_field.label] = pivot_field.name\n            pivotComparisons.push(option)\n          }\n        })\n        comparisonOptions = comparisonOptions.concat(pivotComparisons)\n      }\n\n      // measures, row totals and supermeasures\n      this.measures.forEach((comparisonMeasure, j) => {\n        var includeMeasure = measure.can_pivot === comparisonMeasure.can_pivot\n                              || \n                            this.hasRowTotals && !comparisonMeasure.is_table_calculation         \n        if (i != j && includeMeasure) {\n          var option = {}\n          option['Vs. ' + comparisonMeasure.label] = comparisonMeasure.name\n          comparisonOptions.push(option)\n        }\n      })\n      comparisonOptions.unshift({ '(none)': 'no_variance'})\n\n      newOptions['comparison|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Comparison',\n        display: 'select',\n        values: comparisonOptions,\n        order: 100 + i * 10 + 5\n      }\n\n      newOptions['switch|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Switch',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 6,\n      }\n\n      newOptions['var_num|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var #',\n        display_size: 'third',\n        default: true,\n        order: 100 + i * 10 + 7,\n      }\n\n      newOptions['var_pct|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var %',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 8,\n      }\n    })\n    return newOptions\n  }\n\n  /**\n   * - this.pivot_fields\n   * - this.headers\n   * @param {*} queryResponse \n   */\n  addPivotsAndHeaders(queryResponse) {\n    queryResponse.fields.pivots.forEach((pivot, i) => {\n      var pivot_field = new ModelPivot({ vis: this, queryResponseField: pivot })\n      this.pivot_fields.push(pivot_field)\n      this.headers.push(new HeaderField({ vis: this, type: 'pivot' + i, modelField: pivot_field }))\n    })\n\n    var measureHeaders = this.useHeadings \n      ? [new HeaderField({ vis: this, type: 'heading', modelField: { label: '(will be replaced by header for column)s' } })] \n      : []\n    \n    measureHeaders.push(new HeaderField({ vis: this, type: 'field', modelField: { label: '(will be replaced by field for column)' } }))\n\n    if (this.sortColsBy === 'pivots') {\n      this.headers.push(...measureHeaders)\n    } else {\n      this.headers.unshift(...measureHeaders)\n    }\n  }\n\n  /**\n   * - this.dimensions\n   * - this.columns\n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addDimensions(queryResponse, col_idx) {\n    queryResponse.fields.dimension_like.forEach(dimension => {\n      var newDimension = new ModelDimension({\n        vis: this,\n        queryResponseField: dimension\n      })\n      newDimension.hide = this.useIndexColumn ? true : newDimension.hide\n      this.dimensions.push(newDimension)\n\n      var column = new Column(newDimension.name, this, newDimension) \n      column.idx = col_idx\n      this.headers.forEach(header => {\n        switch (header.type) {\n          case 'pivot0':\n          case 'pivot1':\n            var pivot_field = new ModelPivot({ vis: this, queryResponseField: header.modelField })\n            column.levels.push(new HeaderField({ vis: this, type: 'pivot', modelField: pivot_field }))\n            break\n          case 'heading':\n            column.levels.push(new HeaderField({ vis: this, type: 'heading', modelField: newDimension }))\n            break\n          case 'field':\n            column.levels.push(new HeaderField({ vis: this, type: 'field', modelField: newDimension }))\n            break\n        }\n      })\n      column.sort_by_measure_values = [0, col_idx, ...newArray(this.pivot_fields.length, 0)]\n      column.sort_by_pivot_values = [0, ...newArray(this.pivot_fields.length, 0), col_idx]\n\n      this.columns.push(column)\n      col_idx += 10\n    })\n  }\n\n  /**\n   * Registers measures with the VisPluginTableModel\n   * - this.measures\n   * - this.columns\n   * \n   * Uses this.applyVisToolsTags() to enrich column information\n   * \n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addMeasures(queryResponse, col_idx) {\n    // add measures, list of ids\n    queryResponse.fields.measure_like.forEach(measure => {\n      var newMeasure = new ModelMeasure({\n        vis: this,\n        queryResponseField: measure,\n        can_pivot: true\n      })\n      this.measures.push(newMeasure) \n    })\n    \n    // add measures, list of full objects\n    if (this.hasPivots) {\n      this.pivot_values.forEach(pivot_value => {\n        this.measures.forEach((measure, m) => {\n          var include_measure = (                         // for pivoted measures, skip table calcs for row totals\n            pivot_value.key != '$$$_row_total_$$$'        // if user wants a row total for table calc, must define separately\n          ) || (\n            pivot_value.key == '$$$_row_total_$$$' \n            && measure.is_table_calculation == false\n          )\n\n          if (include_measure) {\n            var column = new Column([pivot_value.key, measure.name].join('.'), this, measure)\n            column.pivoted = true\n            column.pivot_key = pivot_value.key\n            column.idx = col_idx\n\n            var level_sort_values = []\n            this.headers.forEach(header => {\n              switch (header.type) {\n                case 'pivot0':\n                case 'pivot1':\n                  // column.levels.push(new HeaderField({ vis: this, type: 'pivot' }))\n                  var label = pivot_value.key === '$$$_row_total_$$$' ? '(row total)' : pivot_value['data'][header.modelField.name]\n                  column.levels.push(new HeaderField({ \n                    vis: this, \n                    type: 'pivot', \n                    modelField: { label: label },\n                    pivotData: pivot_value\n                  }))\n                  level_sort_values.push(pivot_value['sort_values'][header.name])\n                  break\n\n                case 'heading':\n                  column.levels.push(new HeaderField({ vis: this, type: 'heading', modelField: measure}))\n                  break\n\n                case 'field':\n                  column.levels.push(new HeaderField({ vis: this, type: 'field', modelField: measure}))\n                  break;\n              }\n            })\n\n            if (pivot_value.key !== '$$$_row_total_$$$') {\n              column.sort_by_measure_values = [1, m, ...level_sort_values]\n              column.sort_by_pivot_values = [1, ...level_sort_values, col_idx]\n            } else {\n              column.super = true\n              column.sort_by_measure_values = [2, m, ...newArray(this.pivot_fields.length, 0)]\n              column.sort_by_pivot_values = [2, ...newArray(this.pivot_fields.length, 0), col_idx]\n            }\n\n            this.columns.push(column)\n            col_idx += 10\n          }\n        })\n      })\n    } else {\n      // noticeably simpler for flat tables!\n      this.measures.forEach(measure => {\n        var column = new Column(measure.name, this, measure)\n\n        this.headers.forEach(header => {\n          switch (header.type) {\n            case 'heading':\n              column.levels.push(new HeaderField({ vis: this, type: 'heading', modelField: measure}))\n              break\n\n            case 'field':\n              column.levels.push(new HeaderField({ vis: this, type: 'field', modelField: measure}))\n              break;\n          }\n        })\n\n        column.idx = col_idx\n        try {\n          if (typeof this.config.columnOrder[column.id] !== 'undefined') {\n            column.pos = this.config.columnOrder[column.id]\n          } else {\n            column.pos = col_idx\n          }\n        }\n        catch {\n          column.pos = col_idx\n        }\n        column.sort_by_measure_values = [1, column.pos]\n        column.sort_by_pivot_values = [1, column.pos]\n        this.columns.push(column)\n\n        col_idx += 10\n      })\n    }\n    \n    // add supermeasures, if present\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      queryResponse.fields.supermeasure_like.forEach(supermeasure => {\n        var meas = new ModelMeasure({\n          vis: this,\n          queryResponseField: supermeasure,\n          can_pivot: false,\n        })\n        this.measures.push(meas) \n\n        var column = new Column(meas.name, this, meas)\n        this.headers.forEach(header => {\n          switch (header.type) {\n            case 'pivot0':\n            case 'pivot1':\n              column.levels.push(new HeaderField({ vis: this, type: 'pivot', modelField: { label: '(supermeasure)' } }))\n              break\n            case 'heading':\n              column.levels.push(new HeaderField({ vis: this, type: 'heading', modelField: meas }))\n              break\n            case 'field':\n              column.levels.push(new HeaderField({ vis: this, type: 'field', modelField: meas }))\n              break\n          }\n        })\n        column.idx = col_idx\n        column.super = true\n        column.sort_by_measure_values = [2, col_idx, ...newArray(this.pivot_fields.length, 1)]\n        column.sort_by_pivot_values = [2, ...newArray(this.pivot_fields.length, 1), col_idx]\n\n        this.columns.push(column)\n        col_idx += 10\n      })\n    }\n  }\n\n   /**\n   * Update the VisPluginTableModel instace\n   * - this.variances\n   * \n   *  option is either 'no_variance' or a measure.name\n   */\n  checkVarianceCalculations() {\n    Object.keys(this.config).forEach(option => {\n      if (option.startsWith('comparison')) {\n        var baseline = option.split('|')[1]\n\n        var baseline_in_measures = false\n        this.measures.forEach(measure => {\n          if (baseline === measure.name) {\n            baseline_in_measures = true\n          }\n        })\n\n        if (baseline_in_measures) {\n          if (this.pivot_fields.map(pivot_field => pivot_field.name).includes(this.config[option])) {\n            var type = 'by_pivot'\n          } else {\n            var type = this.config[option] === 'no_variance' ? 'no_variance' : 'vs_measure'\n          }\n  \n          if (typeof this.config['switch|' + baseline] !== 'undefined') {\n            if (this.config['switch|' + baseline]) {\n              var reverse = true\n            } else {\n              var reverse = false\n            }\n          }\n  \n          this.variances.push({\n            baseline: baseline,\n            comparison: this.config[option],\n            type: type,\n            reverse: reverse\n          })\n        }\n      }\n    })\n  }\n\n  /**\n   * Creates the index column, a \"for display only\" column when the set of dimensions is reduced to\n   * a single column for reporting purposes.\n   */\n  addIndexColumn() {\n    var dimension = this.dimensions[this.dimensions.length - 1]\n    var index_column = new Column('$$$_index_$$$', this, dimension)\n    var dim_config_setting = this.config['hide|' + dimension.name]\n    index_column.hide = dim_config_setting === true ? dim_config_setting : false\n\n    this.headers.forEach(header => {\n      switch (header.type) {\n        case 'pivot0':\n        case 'pivot1':\n          var pivot_field = new ModelPivot({ vis: this, queryResponseField: header.modelField })\n          index_column.levels.push(new HeaderField({ vis: this, type: 'pivot', modelField: pivot_field }))\n          break\n        case 'heading':\n          index_column.levels.push(new HeaderField({ vis: this, type: 'heading', modelField: dimension }))\n          break\n        case 'field':\n          index_column.levels.push(new HeaderField({ vis: this, type: 'field', modelField: dimension }))\n          break\n      }\n    })\n\n    index_column.sort_by_measure_values = [-1, 0, ...newArray(this.pivot_fields.length, 0)]\n    index_column.sort_by_pivot_values = [-1, ...newArray(this.pivot_fields.length, 0), 0]\n    \n    this.columns.push(index_column)\n  }\n\n  /**\n   * this.subtotals_data\n   * @param {*} queryResponse \n   */\n  checkSubtotalsData(queryResponse) {\n    if (typeof queryResponse.subtotals_data[this.addSubtotalDepth] !== 'undefined') {\n      queryResponse.subtotals_data[this.addSubtotalDepth].forEach(lookerSubtotal => {\n        var visSubtotal = new Row('subtotal')\n\n        visSubtotal['$$$__grouping__$$$'] = lookerSubtotal['$$$__grouping__$$$']\n        var groups = ['Subtotal']\n        visSubtotal['$$$__grouping__$$$'].forEach(group => {\n          groups.push(lookerSubtotal[group].value)\n        })\n        visSubtotal.id = groups.join('|')\n\n        this.columns.forEach(column => {\n          visSubtotal.data[column.id] = column.pivoted ? lookerSubtotal[column.modelField.name][column.pivot_key] : lookerSubtotal[column.id]\n\n          if (typeof visSubtotal.data[column.id] !== 'undefined') {\n            if (typeof visSubtotal.data[column.id].cell_style === 'undefined') {\n              visSubtotal.data[column.id].cell_style = ['total', 'subtotal']\n            } else {\n              visSubtotal.data[column.id].cell_style.concat(['total', 'subtotal'])\n            }\n            if (typeof column.modelField.style !== 'undefined') {\n              visSubtotal.data[column.id].cell_style = visSubtotal.data[column.id].cell_style.concat(column.modelField.style)\n            }\n            if (visSubtotal.data[column.id].value === null) {\n              visSubtotal.data[column.id].rendered = ''\n            }\n          }            \n        })\n        this.subtotals_data[visSubtotal.id] = visSubtotal\n      })\n    }\n  }\n\n  /**\n   * Populates this.data with Rows of data\n   * @param {*} lookerData \n   */\n  addRows(lookerData) {\n    lookerData.forEach((lookerRow, i) => {\n      var row = new Row('line_item') // TODO: consider creating the row object once all required field values identified\n      console.log(lookerRow)\n      row.id = this.dimensions.map(dimension => lookerRow[dimension.name].value).join('|')\n\n      this.columns.forEach(column => {\n        row.data[column.id] = column.pivoted ? lookerRow[column.modelField.name][column.pivot_key] : lookerRow[column.id]\n        var cell = row.data[column.id]\n\n        if (typeof cell !== 'undefined') {   \n          cell.rowspan = 1\n          cell.rowid = row.id\n          cell.colid = column.id\n          if (typeof cell.cell_style === 'undefined') {\n            cell.cell_style = []\n          }\n          if (typeof column.modelField.style !== 'undefined') {\n            cell.cell_style = cell.cell_style.concat(column.modelField.style)\n          }\n          if (cell.value === null) {\n            cell.rendered = ''\n          }\n          if (column.modelField.is_turtle) {\n            var cell_series = new CellSeries({\n              column: column,\n              row: row,\n              sort_value: cell.sort_value,\n              series: {\n                keys: row.data[column.id]._parsed.keys,\n                values: row.data[column.id]._parsed.values\n              }\n            })\n            cell.value = cell_series\n            cell.rendered = cell_series.toString()\n          }\n        }\n      })\n\n      // set an index value (note: this is an index purely for display purposes; row.id remains the unique reference value)\n      var last_dim = this.dimensions[this.dimensions.length - 1].name\n\n      row.data['$$$_index_$$$'] = {\n        value: row.data[last_dim].value,\n        rendered: this.getRenderedFromHtml(row.data[last_dim]),\n        html: row.data[last_dim].html,\n        cell_style: ['indent'],\n        rowspan: 1\n      }\n\n      row.sort = [0, 0, i]\n      console.log('row', row)\n      this.data.push(row)\n    })\n  }\n\n  /**\n   * Generate data series to support transposition\n   */\n  addColumnSeries() {\n    this.columns.forEach(column => {\n      var keys = []\n      var values = []\n      var types = []\n\n      this.data.forEach(row => {\n        keys.push(row.id)\n        values.push(row.data[column.id].value)\n        types.push(row.type)\n      })\n\n      var new_series = new ColumnSeries({\n        column: column,\n        is_numeric: column.modelField.is_numeric,\n        series: {\n          keys: keys,\n          values: values,\n          types: types\n        }\n      })\n      \n      column.series = new_series\n      this.column_series.push(new_series)\n    })\n  }\n\n  buildTotals(queryResponse) {\n    var totals_ = queryResponse.totals_data\n\n    var firstVisibleDimension = this.dimensions[0].name\n    for (var i = 0; i > this.dimensions.length; i++) {\n      var dimension = this.dimensions[i]\n      if (!dimension.hide) {\n        firstVisibleDimension = dimension.name\n        break\n      }\n    }\n\n    var totals_row = new Row('total')\n    var others_row = new Row('line_item')\n\n    this.columns.forEach(column => {\n      var other_value = null\n      totals_row.id = 'Total'\n      others_row.id = 'Others'\n      totals_row.data[column.id] = { value: '', cell_style: ['total'] } // set a default on all columns\n      others_row.data[column.id] = { value: '', cell_style: [] } // set a default on all columns\n      \n      if (column.modelField.type == 'measure') {\n        var cellValue = column.pivoted ? totals_[column.modelField.name][column.pivot_key] : totals_[column.id]\n\n        if (typeof cellValue.rendered == 'undefined' && typeof cellValue.html !== 'undefined' ){ // totals data may include html but not rendered value\n          cellValue.rendered = this.getRenderedFromHtml(cellValue)\n        }\n        if (this.calculateOthers) {\n            other_value = ['sum', 'count_distinct', 'count'].includes(column.modelField.calculation_type)\n              ? cellValue.value - column.series.series.sum\n              : (cellValue.value + column.series.series.avg) / 2\n        }\n        cellValue.cell_style = ['total']\n        totals_row.data[column.id] = cellValue\n        if (typeof totals_row.data[column.id].links !== 'undefined') {\n          totals_row.data[column.id].links.forEach(link => {\n            link.type = \"measure_default\"\n          })\n        }\n\n        if (this.calculateOthers && other_value) {\n          var formatted_value = column.modelField.value_format === '' \n                ? other_value.toString() \n                : SSF.format(column.modelField.value_format, other_value)\n                others_row.data[column.id] = { value: other_value, rendered: formatted_value } \n        }\n                  \n      }\n    })\n    if (this.useIndexColumn) {\n      totals_row.data['$$$_index_$$$'].value = 'TOTAL'\n    }\n    totals_row.data[firstVisibleDimension].value = 'TOTAL' \n    totals_row.sort = [1, 0, 0]\n\n    if (this.calculateOthers) {\n      if (this.useIndexColumn) {\n        others_row.data['$$$_index_$$$'].value = 'Others'\n      }\n      others_row.data[firstVisibleDimension].value = 'Others'\n      others_row.sort = [1, -1, -1] \n    }\n    \n    this.data.push(totals_row)\n    this.calculateOthers && this.data.push(others_row)\n\n    this.hasTotals = true\n    this.sortData()\n  }\n\n  /**\n   * 1. Build list of leaves\n   * 2. Build list of tiers (and initialise span_tracker)\n   * 3. Backwards <--- leaves\n   *    4. Check for resets (n/a for colspans)\n   *    5. Forwards ---> tiers\n   *        6. Match: mark invisible (span_value = -1). Increment the span_tracker.\n   *        7. Diff: set span_value from span_tracker. Partial reset and continue.\n   */\n  setRowSpans () {\n    var leaves = []\n    var tiers = []\n    var span_values = this.rowspan_values\n    var span_tracker = {}\n\n    // 1)\n    leaves = this.data\n\n    // 2)\n    tiers = this.dimensions.filter(d => !d.hide)\n    tiers.forEach(tier => {\n      span_tracker[tier.id] = 1\n    })\n\n    // Loop backwards through data rows\n    for (var l = leaves.length - 1; l >= 0 ; l--) {\n      var leaf = leaves[l]\n\n      // Totals/subtotals rows: full reset and continue\n      if (leaf.type !== 'line_item' ) {\n        tiers.forEach(tier => {\n          span_tracker[tier.name] = 1\n        })\n        continue;\n      }\n\n      // Loop fowards through the dimensions\n      span_values[leaf.id] = {}\n      for (var t = 0; t < tiers.length; t++) {\n        var tier = tiers[t]\n        var this_tier_value = leaf.data[tier.name].value\n        var neighbour_value = l > 0 ? leaves[l - 1].data[tier.name].value : null\n\n        // Match: mark invisible (span_value = -1). Increment the span_tracker.\n        if (l > 0 && this_tier_value === neighbour_value) {\n          span_values[leaf.id][tier.name] = -1\n          leaf.data[tier.name].rowspan = -1\n          span_tracker[tier.name] += 1\n        } else {\n        // Different: set span_value from span_tracker. Partial reset and continue\n          for (var t_ = t; t_ < tiers.length; t_++) {\n            var tier_ = tiers[t_]\n            span_values[leaf.id][tier_.name] = span_tracker[tier_.name]\n            leaf.data[tier_.name].rowspan = span_tracker[tier_.name]\n            span_tracker[tier_.name] = 1\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates subtotals values\n   * \n   * 1. Build array of subtotal groups\n   *    - Based on the joined values of each row's dimensions (up to the configured subtotal depth)\n   *    - Update each row's sort value with its subtotal group number\n   * 2. Generate data rows\n   *    - For each subtotal group, create a new Row\n   *      - For each Column\n   *        - Set the style\n   *        - In the index dimension and the firstVisibleDimension, put the subtotal label\n   *        - If it's a measure \n   *          - Count & total all rows of type 'line_item'\n   *          - Use total or average value based on calculation type\n   *          - Set as blank if it's a string type\n   *            // This is a gap in functionality. Ideally subtotal would replicate the logic that generated\n   *            // the string values in the line items.\n   */\n  addSubTotals () { \n    var depth = this.addSubtotalDepth\n\n    // BUILD GROUPINGS / SORT VALUES\n    var subTotalGroups = []\n    var latest_group = []\n    this.data.forEach((row, i) => {    \n      if (row.type !== 'total') {\n        var group = []\n        for (var g = 0; g < depth; g++) {\n          var dim = this.dimensions[g].name\n          group.push(row.data[dim].value)\n        }\n        if (group.join('|') !== latest_group.join('|')) {\n          subTotalGroups.push(group)\n          latest_group = group\n        }\n        row.sort = [0, subTotalGroups.length-1, i]\n      }\n    })\n\n    var firstVisibleDimension = this.dimensions[0].name\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dimension = this.dimensions[i]\n      if (!dimension.hide) {\n        firstVisibleDimension = dimension.name\n        break\n      }\n    }\n\n    // GENERATE DATA ROWS FOR SUBTOTALS\n    subTotalGroups.forEach((subTotalGroup, s) => {\n      var subtotal = new Row('subtotal')\n      subtotal.id = 'Subtotal|' + subTotalGroup.join('|')\n\n      this.columns.forEach(column => {\n        subtotal.data[column.id] = { 'cell_style': ['total', 'subtotal'] } // set default\n\n        if (column.id === '$$$_index_$$$' || column.id === firstVisibleDimension ) {\n          var subtotal_label = subTotalGroup.join(' | ')\n          subtotal.data[column.id].value = subtotal_label\n        } \n\n        if (column.modelField.type == 'measure') {\n          if (Object.entries(this.subtotals_data).length > 0) {\n            subtotal.data[column.id] = { ...subtotal.data[column.id], ...this.subtotals_data[subtotal.id].data[column.id] }\n          } else {\n            var cellKey = column.pivoted ? [column.pivot_key, column.modelField.name].join('.') : column.id\n            var subtotal_value = 0\n            var subtotal_items = 0\n            var rendered = ''\n            this.data.forEach(data_row => {\n              if (data_row.type == 'line_item' && data_row.sort[1] == s) { // data_row.sort[1] == s checks whether its part of the subtotal group\n                var value = data_row.data[cellKey].value\n                if (Number.isFinite(value)) {\n                  subtotal_value += value\n                  subtotal_items++\n                }\n              } \n            })\n            \n            if (column.modelField.calculation_type === 'average' && subtotal_items > 0) {\n              subtotal_value = subtotal_value / subtotal_items\n            }\n            if (subtotal_value) {\n              rendered = column.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(column.modelField.value_format, subtotal_value)\n            }\n            if (column.modelField.calculation_type === 'string') {\n              subtotal_value = ''\n              rendered = ''\n            } \n\n            var cellValue = {\n              value: subtotal_value,\n              rendered: rendered,\n              cell_style: ['subtotal', 'total']\n            }\n            subtotal.data[cellKey] = cellValue\n          }\n        }\n      })\n      subtotal.sort = [0, s, 9999]\n      this.data.push(subtotal)\n    })\n    this.sortData()\n    this.hasSubtotals = true\n  }\n\n  /**\n   * Generates new column subtotals, where 2 pivot levels have been used\n   * // TODO: Could also have subtotals for 1 pivot tables sorted by measure\n   * \n   * 1. Derive the new column definitions\n   * 2. Use the new definitions to add subtotal columns to table.columns\n   * 3. Calculate the column subtotal values\n   */\n  addColumnSubTotals () {\n    var last_pivot_key = ''\n    var last_pivot_col = {}\n    var subtotals = []\n\n    var pivots = []\n    var pivot_dimension = this.pivot_fields[0].name\n    this.pivot_values.forEach(pivot_value => {\n      var p_value = pivot_value['data'][pivot_dimension]\n      if (p_value !== null) { pivots.push(p_value) }\n    })\n    pivots = [...new Set(pivots)]\n\n    // DERIVE THE NEW COLUMN DEFINITIONS\n    pivots.forEach((pivot, p) => {\n      var highest_pivot_col = [0, '']\n      var previous_subtotal = null\n\n      this.measures.forEach((measure, m) => {\n        if (measure.can_pivot) {\n          var subtotal_col = {\n            modelField: measure,\n            pivot: pivot,\n            measure_idx: m,\n            pivot_idx: p,\n            columns: [],\n            id: ['$$$_subtotal_$$$', pivot, measure.name].join('.'),\n            after: ''\n          }\n  \n          this.columns.forEach((column, i) => {  \n            if (column.pivoted && column.levels[0] == pivot) {\n              if (column.modelField.name == measure.name) {\n                subtotal_col.columns.push(column.id)\n              }\n              if (column.levels[0] == pivot) {\n                if (i > highest_pivot_col[0]) {\n                  highest_pivot_col = [i, column.id]\n                }\n              }\n            }\n          })\n  \n          if (pivot != last_pivot_key) {\n            last_pivot_col[pivot] = highest_pivot_col[1]\n            previous_subtotal = null\n          }\n  \n          subtotal_col.after = previous_subtotal || last_pivot_col[pivot]\n          last_pivot_key = pivot\n          previous_subtotal = subtotal_col.id\n          subtotals.push(subtotal_col)\n        }\n      })\n    })\n\n    // USE THE NEW DEFINITIONS TO ADD SUBTOTAL COLUMNS TO TABLE.COLUMNS\n    subtotals.forEach((subtotal, s) => {\n      var modelField = this.measures[subtotal.measure_idx]\n      var column = new Column(subtotal.id, this, modelField)\n      column.pivoted = true\n      column.subtotal = true\n      column.pivot_key = [subtotal.pivot, '$$$_subtotal_$$$'].join('|')\n\n      this.headers.forEach(header => {\n        switch (header.type) {\n          case 'pivot0':\n            column.levels.push(new HeaderField({ vis: this, type: 'pivot', modelField: {\n              name: this.pivot_fields[0].name,\n              label: subtotal.pivot,\n            }}))\n            break\n          case 'pivot1':\n            column.levels.push(new HeaderField({ vis: this, type: 'pivot', modelField: {\n              name: 'subtotal',\n              label: 'Subtotal',\n            }}))\n            break\n          case 'heading':\n            column.levels.push(new HeaderField({ vis: this, type: 'heading', modelField: modelField}))\n            break\n          case 'field':\n            column.levels.push(new HeaderField({ vis: this, type: 'field', modelField: modelField}))\n            break;\n        }\n      })\n\n      var pivot_values = column.levels.map(level => level.label)\n      column.sort_by_measure_values = [1, subtotal.measure_idx, ...pivot_values]\n      pivot_values[pivot_values.length-1] = typeof pivot_values[pivot_values.length-1] == 'string'\n        ? pivot_values[pivot_values.length-1] = 'ZZZZ'\n        : pivot_values[pivot_values.length-1] = 9999\n      column.sort_by_pivot_values = [1, ...pivot_values, 10000 + s]\n\n      this.columns.push(column)\n    })\n    this.sortColumns()\n\n    // CALCULATE COLUMN SUB TOTAL VALUES\n    this.data.forEach(row => {\n      subtotals.forEach(subtotal => {\n        var subtotal_value = 0\n        subtotal.columns.forEach(field => {\n          subtotal_value += row.data[field].value\n        })\n        row.data[subtotal.id] = {\n          value: subtotal_value,\n          rendered: subtotal.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(subtotal.modelField.value_format, subtotal_value),\n          align: 'right',\n          cell_style: ['subtotal']\n        }\n        if (['subtotal', 'total'].includes(row.type)) { row.data[subtotal.id].cell_style.push('total') }\n      })\n    })\n\n    // return subtotals\n  }\n\n  /**\n   * Variance calculation function to enable addVariance()\n   * @param {*} value_format \n   * @param {*} id \n   * @param {*} calc \n   * @param {*} baseline \n   * @param {*} comparison \n   */\n  calculateVariance (value_format, id, calc, baseline, comparison) {\n    this.data.forEach(row => {\n      var baseline_value = row.data[baseline.id].value\n      var comparison_value = row.data[comparison.id].value\n      if (calc === 'absolute') {\n        var cell_value = {\n          value: baseline_value - comparison_value,\n          rendered: value_format === '' ? (baseline_value - comparison_value).toString() : SSF.format(value_format, (baseline_value - comparison_value)),\n          cell_style: []\n        }\n      } else {\n        var value = (baseline_value - comparison_value) / Math.abs(comparison_value)\n        if (!isFinite(value)) {\n          var cell_value = {\n            value: null,\n            rendered: '∞',\n            cell_style: []\n          }\n        } else {\n          var cell_value = {\n            value: value,\n            rendered: SSF.format('#0.00%', value),\n            cell_style: []\n          }\n        }\n      }\n      if (row.type == 'total' || row.type == 'subtotal') {\n        cell_value.cell_style.push('total')\n      }\n      if (row.type === 'subtotal') {\n        cell_value.cell_style.push('subtotal')\n      }\n      if (cell_value.value < 0) {\n        cell_value.cell_style.push('red')\n      }\n      row.data[id] = cell_value\n    })\n  }\n\n  createVarianceColumn (colpair) {\n    if (!this.config.colSubtotals && colpair.variance.baseline.startsWith('$$$_subtotal_$$$')) {\n      console.log('Cannot calculate variance of column subtotals if subtotals disabled.')\n      return\n    }\n    var id = ['$$$_variance_$$$', colpair.calc, colpair.variance.baseline, colpair.variance.comparison].join('|')\n    var baseline = this.getColumnById(colpair.variance.baseline)\n    var comparison = this.getColumnById(colpair.variance.comparison)\n    var column = new Column(id, this, baseline.modelField)\n\n    if (colpair.calc === 'absolute') {\n      column.variance_type = 'absolute'\n      column.idx = baseline.idx + 1\n      column.pos = baseline.pos + 1\n      column.sort_by_measure_values = baseline.sort_by_measure_values.concat(1)\n      column.sort_by_pivot_values = baseline.sort_by_pivot_values.concat(1)\n      column.hide = !this.config['var_num|' + baseline.modelField.name]\n    } else {\n      column.variance_type = 'percentage'\n      column.idx = baseline.idx + 2\n      column.pos = baseline.pos + 2\n      column.sort_by_measure_values = baseline.sort_by_measure_values.concat(2)\n      column.sort_by_pivot_values = baseline.sort_by_pivot_values.concat(2)\n      column.unit = '%'\n      column.hide = !this.config['var_pct|' + baseline.modelField.name]\n    }\n\n    if (baseline.sort_by_measure_values.length < column.sort_by_measure_values.length) {\n      baseline.sort_by_measure_values.push(0)\n    }\n    if (baseline.sort_by_pivot_values.length < column.sort_by_pivot_values.length) {\n      baseline.sort_by_pivot_values.push(0)\n    }\n\n    if (typeof this.config.columnOrder[column.id] !== 'undefined') {\n      column.pos = this.config.columnOrder[column.id]\n    } \n\n    column.pivoted = baseline.pivoted\n    column.super = baseline.super\n    column.pivot_key = ''\n\n    column.levels = baseline.levels\n    if (this.groupVarianceColumns) {\n      if (this.config.sortColumnsBy === 'pivots') {\n        column.sort_by_pivot_values[0] = 1.5\n      }\n      this.headers.forEach(header => {\n        switch (header.type) {\n          case 'pivot0':\n            column.levels.push(new HeaderField({ vis: this, type: 'pivot', modelField: { \n              name: 'variance', \n              label: 'Variance' \n            }}))\n            break\n          case 'pivot1':\n            column.levels.push(new HeaderField({ vis: this, type: 'pivot', modelField: {\n              name: baseline.id,\n              label: baseline.levels[1],\n            }}))\n            break\n          case 'heading':\n            column.levels.push(new HeaderField({ vis: this, type: 'heading', modelField: modelField}))\n            break\n          case 'field':\n            column.levels.push(new HeaderField({ vis: this, type: 'field', modelField: modelField}))\n            break;\n        }\n      })\n    }\n\n    this.columns.push(column)\n    if (colpair.variance.reverse) {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, comparison, baseline)\n    } else {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, baseline, comparison)\n    }\n  }\n\n  /**\n   * Function to add variance columns directly within table vis rather than requiring a table calc\n   * \n   * Takes list of variances configured by the user, and generates a list of column-pairs necessary\n   * to calculate those variances. There is at least one baseline-comparison pair per variance.\n   * Comparing different measures in a pivoted table will calculate a variance pair per pivot value.\n   * Comparing the same measure across pivots will calculate one pair less than there are pivots e.g.\n   * if comparing this year to last year, there are two \"Reporting Period\" values but only one variance.\n   */\n  addVarianceColumns () {\n    var variance_colpairs = []\n    var calcs = ['absolute', 'percent']\n    \n    Object.keys(this.variances).forEach(v => {\n      var variance = this.variances[v]\n      if (variance.comparison !== 'no_variance') {          \n        if (variance.type === 'vs_measure') {\n          if (!this.hasPivots) {\n            calcs.forEach(calc => {\n              variance_colpairs.push({\n                variance: variance,\n                calc: calc\n              })\n            })\n          } else {\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                calcs.forEach(calc => {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [pivot_value.key, variance.comparison].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                })\n              }\n            })\n          }\n        } else if (variance.type === 'by_pivot') { \n          if (this.pivot_fields.length === 1 || this.pivot_fields[1].name === variance.comparison) {\n            this.pivot_values.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                if (!pivot_value.is_total) {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [this.pivot_values[index].key, variance.baseline].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                }\n              })\n            })\n          } else { // top pivot value - variance by subtotal\n            var top_level_pivots = []\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                var value = pivot_value.data[this.pivot_fields[0].name]\n                if (!top_level_pivots.includes(value)) {\n                  top_level_pivots.push(value)\n                }\n              }\n            })\n            top_level_pivots.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                variance_colpairs.push({\n                  calc: calc,\n                  variance: {\n                    baseline: ['$$$_subtotal_$$$', pivot_value, variance.baseline].join('.'),\n                    comparison: ['$$$_subtotal_$$$', top_level_pivots[index], variance.baseline].join('.'),\n                    reverse: variance.reverse,\n                    type: variance.type\n                  }\n                })\n              })\n            })\n          } \n        }\n      }\n    })\n\n    variance_colpairs.forEach(colpair => {\n      this.createVarianceColumn(colpair)\n    })\n  }\n\n  /**\n   * Sorts columns by config option\n   * \n   * Depending on the colsSortBy option, columns are sorted by either:\n   * \n   * Sort by Pivots (default)\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Pivot sort values\n   * 3. Original column number for the Looker data obect [last item in sort value array]\n   * \n   * Sort by Measures\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Original Column Number\n   * 3. Measure sort values [remainder of sort value array]\n   * \n   * Note that column sort values can be over-riden by manual drag'n'drop \n   */\n  sortColumns () {\n    var compareColSortValues = (a, b) => {\n      var param = this.sortColsBy\n      var depth = a[param]().length\n      for(var i = 0; i < depth; i++) {\n          if (a[param]()[i] > b[param]()[i]) { return 1 }\n          if (a[param]()[i] < b[param]()[i]) { return -1 }\n      }\n      return -1\n    }\n    this.columns.sort(compareColSortValues)\n  }\n\n  /**\n   * 1. Build list of leaves\n   * 2. Build list of tiers (and initialise span_tracker)\n   * 3. Backwards <--- leaves\n   *    4. Check for resets (n/a for colspans)\n   *    5. Forwards ---> tiers\n   *        6. Match: mark invisible (span_value = -1). Increment the span_tracker.\n   *        7. Diff: set span_value from span_tracker. Partial reset and continue.\n   */\n  setColSpans () {\n    var leaves = []\n    var tiers = []\n    var span_values = this.colspan_values\n    var span_tracker = {}\n    \n    // 1)\n    var columns = this.columns.filter(c => !c.hide)\n\n    columns.forEach(column => {\n      var leaf = {\n        id: column.id,\n        data: column.getHeaderData()\n      }\n      leaves.push(leaf)\n    })\n    console.log('leaves', leaves)\n\n    // 2)\n    tiers = this.headers\n    tiers.forEach(tier => {\n      span_tracker[tier.type] = 1\n    })\n    console.log('tiers', tiers)\n\n    // 3)\n    for (var l = leaves.length - 1; l >= 0; l--) {\n      var leaf = leaves[l]\n      span_values[leaf.id] = {}\n\n      // 5)\n      for (var t = 0; t < tiers.length; t++) {\n        var tier = tiers[t]\n        var this_tier_value = leaf.data[tier.type].label\n        var neighbour_value = l > 0 ? leaves[l - 1].data[tier.type].label : null\n\n        // 6) \n        if (l > 0 && this_tier_value === neighbour_value) {\n          span_values[leaf.id][tier.type] = -1;\n          span_tracker[tier.type] += 1;\n        } else {\n        // 7) \n          for (var t_ = t; t_ < tiers.length; t_++) {\n            var tier_ = tiers[t_]\n            span_values[leaf.id][tier_.type] = span_tracker[tier_.type];\n            span_tracker[tier_.type] = 1\n          }\n          break;\n        }\n      }\n    }\n\n    // row spans are set against the cell values (can be many individual cells)\n    // col spacs are set against the Column object (can only be a few headers)\n    this.columns.forEach(column => {\n      if (typeof span_values[column.id] !== 'undefined') {\n        column.colspans = span_values[column.id]\n      }\n    })\n  }\n\n  /**\n   * Applies conditional formatting (red if negative) to all measure columns set to use it \n   */\n  applyFormatting() {\n    this.columns.forEach(column => {\n      var config_setting = this.config['style|' + column.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        switch (config_setting) {\n          case 'black_red':\n            this.data.forEach(row => {\n              if (row.data[column.id].value < 0) {\n                row.data[column.id].cell_style.push('red')\n              }\n            })\n            break\n        }\n      }\n    })\n  }\n\n  /**\n   * For rendering a transposed table i.e. with the list of measures on the left hand side\n   * 1. If used, add the 'header' column\n   * 2. Depending on column sort order, add pivot fields then a measure column (or vice versa) \n   * 3. Add a transposed column for every data row\n   */\n  transposeColumns () {\n    this.transposed_headers = this.columns\n      .filter(c => c.modelField.type !== 'measure')\n      .filter(c => !c.hide)\n      .map(c => new HeaderField({ vis: this, queryResponseField: c.modelField }))\n    \n    var default_colspan = this.transposed_headers\n      .map(header => {\n        var colspans = {}\n        colspans[header.name] = 1\n      })\n\n    var index_parent = {\n      align: 'left',\n      type: 'transposed_table_index',\n      is_table_calculation: false\n    }\n    var measure_parent = {\n      align: 'right',\n      type: 'transposed_table_measure',\n      is_table_calculation: false\n    }\n\n    // Single header column, if useHeadings\n    if (this.useHeadings && !this.hasPivots) {\n      var transposed_column = new Column('header', this, index_parent)\n      transposed_column.levels = newArray(this.transposed_headers.length, new HeaderField({ vis: this, queryResponseField: {} }))\n      transposed_column.levels[0] = new HeaderField({ vis: this, queryResponseField: { name: 'header', label: 'Header' } })\n      transposed_column.colspans = default_colspan\n      transposed_column.type = 'dimension'\n      this.transposed_columns.push(transposed_column)\n    }\n\n    if (this.sortColsBy === 'pivots') {\n      this.pivot_fields.forEach(pivot_field => {\n        var transposed_column = new Column(pivot_field.name, this, index_parent)\n        transposed_column.levels = newArray(this.transposed_headers.length, new HeaderField({ vis: this, queryResponseField: {} }))\n        transposed_column.levels[0] = new HeaderField({ vis: this, queryResponseField: { name: pivot_field.name, label: pivot_field.label } })\n        transposed_column.colspans = default_colspan\n        this.transposed_columns.push(transposed_column)\n      })\n\n      var transposed_column = new Column('measure', this, index_parent)\n      transposed_column.levels = newArray(this.transposed_headers.length, new HeaderField({ vis: this, queryResponseField: {} }))\n      transposed_column.levels[0] = new HeaderField({ vis: this, queryResponseField: { name: 'measure', label: 'Measure' } })\n      transposed_column.colspans = default_colspan\n      this.transposed_columns.push(transposed_column)\n    } else {\n      var transposed_column = new Column('measure', this, index_parent)\n      transposed_column.levels = newArray(this.transposed_headers.length, new HeaderField({ vis: this, queryResponseField: {} }))\n      transposed_column.levels[0] = new HeaderField({ vis: this, queryResponseField: { name: 'measure', label: 'Measure' } })\n      transposed_column.colspans = default_colspan\n      this.transposed_columns.push(transposed_column)\n\n      this.pivot_fields.forEach(pivot_field => {\n        var transposed_column = new Column(pivot_field.name, this, index_parent)\n        transposed_column.levels = newArray(this.transposed_headers.length, new HeaderField({ vis: this, queryResponseField: {} }))\n        transposed_column.levels[0] = new HeaderField({ vis: this, queryResponseField: { name: pivot_field.name, label: pivot_field.label } })\n        transposed_column.colspans = default_colspan\n        this.transposed_columns.push(transposed_column)\n      })\n    }\n    \n    for (var h = 0; h < this.data.length; h++) {\n      var sourceRow = this.data[h]\n      if (sourceRow.type === 'line_item') {\n        var colspan_values = {}\n        var levels = []\n        this.transposed_headers.forEach(header => {\n          colspan_values = this.rowspan_values[sourceRow.id]\n          levels.push(sourceRow.data[header.name].value)\n        })\n      } else if (sourceRow.type === 'subtotal') {\n        var colspan_values = default_colspan\n        var levels = newArray(this.transposed_headers.length, new HeaderField({ vis: this, queryResponseField: {} }))\n        levels[0] = new HeaderField({ vis: this, queryResponseField: {\n          name: 'subtotal',\n          label: 'Subtotal'\n        }})\n      } else if (sourceRow.type === 'total') {\n        var colspan_values = default_colspan\n        var levels = newArray(this.transposed_headers.length, new HeaderField({ vis: this, queryResponseField: {} }))\n        levels[0] = new HeaderField({ vis: this, queryResponseField: {\n          name: 'total',\n          label: 'Total'\n        }})\n      }\n\n      var transposed_column = new Column(sourceRow.id, this, measure_parent)\n      transposed_column.transposed = true\n      transposed_column.colspan_values = colspan_values\n      transposed_column.levels = levels\n      this.transposed_columns.push(transposed_column)\n    }\n  }\n\n  transposeRows () {\n    this.columns.filter(c => c.modelField.type === 'measure').forEach(column => {\n      var transposed_data = {}\n\n      // MEASURE FIELDS\n      this.data.forEach(row => {\n        if (typeof row.data[column.id] !== 'undefined') {\n          transposed_data[row.id] = row.data[column.id]\n          transposed_data[row.id]['align'] = 'right'\n          if (typeof transposed_data[row.id]['cell_style'] !== 'undefined') {\n            transposed_data[row.id]['cell_style'].push('transposed')\n          } else {\n            transposed_data[row.id]['cell_style'] = ['transposed']\n          }\n        } else {\n          console.log('row data does not exist for', column.id)\n        }\n      })\n\n      // INDEX FIELDS (header, pivot values, measure name)\n      var column_heading = column.modelField.heading\n      var config_setting = this.config['heading|' + column.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        column_heading = config_setting ? config_setting : column_heading\n      } \n      transposed_data.header = { value: column_heading, cell_style: [] }\n      if (column.subtotal) { transposed_data.header.cell_style.push('subtotal') }\n\n      var measure_level = this.sortColsBy === 'pivots' ? this.pivot_fields.length : 0\n      if (this.useHeadings && !this.hasPivots) { measure_level++ } \n\n      transposed_data.measure = { value: column.getLabel(measure_level), cell_style: [] }\n      if (column.subtotal) { transposed_data.measure.cell_style.push('subtotal') }\n      if (column.modelField.style.includes('subtotal')) { transposed_data.measure.cell_style.push('subtotal') }\n      \n      this.pivot_fields.forEach((pivot_field, idx) => {\n        transposed_data[pivot_field.name] = { value: column.levels[idx], cell_style: [] }\n        if (column.subtotal) { transposed_data[pivot_field.name].cell_style.push('subtotal') }\n      })\n\n      var transposed_row = new Row('line_item')\n      transposed_row.id = column.id\n      transposed_row.modelField = column.modelField\n      transposed_row.hide = column.hide\n      transposed_row.data = transposed_data\n\n      this.transposed_data.push(transposed_row)\n    })\n  }\n\n  validateConfig() {\n    if (!['traditional', 'looker', 'contemporary', 'custom'].includes(this.config.theme)) {\n      this.config.theme = 'traditional'\n    }\n\n    if (!['fixed', 'auto'].includes(this.config.layout)) {\n      this.config.layout = 'fixed'\n    }\n\n    if (typeof this.config.transposeTable === 'undefined') {\n      this.config.transposeTable = false\n    }\n\n    Object.entries(this.config).forEach(option => {\n      if (option[1] === 'false') {\n        option[1] = false\n      } else if (option[1] === 'true') {\n        option[1] = true\n      }\n\n      if (option[0].split('|').length === 2) {\n        var [field_option, field_name] = option[0].split('|')\n        if (['label', 'heading', 'hide', 'style', 'switch', 'var_num', 'var_pct', 'comparison'].includes(field_option)) {\n          var keep_option = false\n          this.dimensions.forEach(dimension => {\n            if (dimension.name === field_name) { keep_option = true }\n          })\n          this.measures.forEach(measure => {\n            if (measure.name === field_name) { keep_option = true }\n          })\n          if (!keep_option) {\n            delete this.config[option[0]]\n          } \n        }\n      }\n    })\n  }\n\n  /**\n   * Returns column that matches ID provided\n   * @param {*} id \n   */\n  getColumnById (id) {\n    var column = {}\n    this.columns.forEach(c => {\n      if (id === c.id) { \n        column = c \n      }\n    })\n    return column\n  }\n\n  getMeasureByName (name) {\n    var measure = ''\n    this.measures.forEach(m => {\n      if (name === m.name) { \n        measure = m\n      }\n    })\n    return measure\n  }\n\n  /**\n   * Sorts the rows of data, then updates vertical cell merge \n   * \n   * Rows are sorted by three values:\n   * 1. Section\n   * 2. Subtotal Group\n   * 3. Row Value (currently based only on original row index from the Looker data object)\n   */\n  sortData () {\n    var compareRowSortValues = (a, b) => {\n      var depth = a.sort.length\n      for(var i=0; i<depth; i++) {\n          if (a.sort[i] > b.sort[i]) { return 1 }\n          if (a.sort[i] < b.sort[i]) { return -1 }\n      }\n      return -1\n    }\n    this.data.sort(compareRowSortValues)\n    if (this.spanRows) { this.setRowSpans() }\n  }\n\n\n  /**\n   * Extracts the formatted value of the field from the html: value\n   * There are cases (totals data) where the formatted value isn't available as usual rendered_value\n   * @param {*} cellValue \n   */\n  getRenderedFromHtml (cellValue) {\n    var parser = new DOMParser()\n    if (typeof cellValue.html !== 'undefined' && !['undefined', ''].includes(cellValue.html)) {\n      try {\n        var parsed_html = parser.parseFromString(cellValue.html, 'text/html')\n        var rendered = parsed_html.documentElement.textContent\n      }\n      catch(TypeError) {\n        var rendered = cellValue.html\n      }\n    } else {\n      var rendered = cellValue.value\n    }\n\n    return rendered\n  }\n\n  /**\n   * Used to support rendering of table as vis. \n   * Returns an array of 0s, of length to match the required number of header rows\n   */\n  getHeaderTiers () {    \n    return this.transposeTable\n      ? this.dimensions.filter(d => !d.hide) \n      : this.headers\n  }\n\n  /**\n   * Builds array of arrays, used at by table vis to build column groups\n   * Three column groups: \n   * - index (dimensions)\n   * - measures (standard measures)\n   * - totals (supermeasures: row totals and some table calcs)\n   * \n   * For transposed tables:\n   * - index (headers, pivot value, measures)\n   * - measures (Includes subtotals. Cells contain measure values, header rows contain dimension values)\n   * - totals (totals)\n   */\n  getTableColumnGroups () {\n    var index_columns = []\n    var measure_columns = []\n    var total_columns = []\n\n    if (!this.transposeTable) {\n      this.columns.forEach(column => {\n        if (column.modelField.type === 'dimension' && !this.useIndexColumn && column.id !== '$$$_index_$$$' && !column.hide) {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'dimension' && this.useIndexColumn && column.id === '$$$_index_$$$') {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && !column.super && !column.hide) {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && column.super && !column.hide) {\n          total_columns.push({ id: column.id })\n        }\n      })\n    } else {\n      this.transposed_columns.forEach(column => {\n        if (column.modelField.type === 'transposed_table_index') {\n          index_columns.push({ id: column.id})\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id !== 'Total') {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id === 'Total') {\n          total_columns.push({ id: column.id })\n        }\n      })\n    }\n  }\n\n  /**\n   * Used to support rendering of data table as vis. \n   * Builds list of columns out of data set that should be displayed\n   * @param {*} i \n   */\n  getTableHeaderColumns (i) {\n    return !this.transposeTable\n      ? this.columns\n          .filter(c => !c.hide)\n          .filter(c => this.colspan_values[c.id][this.headers[i].type] > 0)\n      : this.transposed_columns\n          .filter(c => c.colspans[i] > 0)\n  }\n\n  getDataRows () {\n    return !this.transposeTable\n      ? this.data\n      : this.transposed_data.filter(row => !row.hide)\n  }\n\n  /**\n   * Used to support rendering of data table as vis.\n   * For a given row of data, returns filtered array of cells – only those cells that are to be displayed.\n   * @param {*} row \n   */\n  getTableRowColumns (row) {\n    if (!this.transposeTable) {\n      var cells = this.columns\n        .filter(c => !c.hide)\n        .filter(c => row.data[c.id].rowspan > 0)\n\n    } else {\n      var cells = this.transposed_columns\n      cells.forEach((cell, idx) => {\n        cell.rowspan = 1\n        if (cell.modelField.type === 'transposed_table_index') {\n          cell.rowspan = this.colspan_values[row.id][this.headers[idx].name]\n        }\n      })\n\n      cells = cells\n        .filter(cell => cell.rowspan > 0)\n    }\n    return cells    \n  }\n\n  /**\n   * Used to support column drag'n'drop when rendering data table as vis.\n   * Updates the table.config with the new pos values.\n   * Accepts a callback function for interaction with the vis.\n   * @param {*} from \n   * @param {*} to \n   * @param {*} callback \n   */\n  moveColumns(from, to, updateColumnOrder) {\n    var config = this.config\n    if (from != to) {\n      var shift = to - from\n      var col_order = config.columnOrder\n      this.columns.forEach(col => {\n        if (col.modelField.type == 'measure' && !col.super) {\n          if (col.pos >= from && col.pos < from + 10) {\n            // console.log('MOVING COLUMN', col.id, col.pos, '->', col.pos + shift)\n            col.pos += shift\n          } else if (col.pos >= to && col.pos < from) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos + 10)\n            col.pos += 10\n          } else if (col.pos >= from + 10 && col.pos < to + 10) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos - 10)\n            col.pos -= 10\n          }\n          col_order[col.id] = col.pos\n        } \n      })\n      updateColumnOrder(col_order)\n    }\n  }\n\n  /**\n   * Returns dataset as a simple json object\n   * Includes line_items only (e.g. no row subtotals)\n   * \n   * Convenience function when using LookerData as an object to support e.g. Vega Lite visualisations\n   */\n  getSimpleJson() {\n    var raw_values = []\n    this.data.forEach(r => {\n      if (r.type === 'line_item') {\n        var row = {}\n        this.columns.forEach(c => {\n          row[c.id] = r.data[c.id].value\n        })\n        raw_values.push(row)\n      }\n    })\n    return raw_values\n  }\n}\n\nexports.VisPluginTableModel = VisPluginTableModel\n\n// MUST\n// TODO: update validateConfig to enforce ALL defaults (OR: while dimensions and measures are created, set defaults in config)\n// TODO: fix bug where Series extents be calculated as NaNs\n\n// SHOULD\n// TODO: tooltip for data cells\n// TODO: tooltip for index cells\n\n// NICE TO HAVE\n// TODO: row & cell highlight on mouseover\n// TODO: option for reporting in 000s or 000000s\n// TODO: more formatting options\n// TODO: addSpacerColumns\n// TODO: addUnitHeaders\n// TODO: addRowNumbers // to Index Column only?\n// TODO: build an explore URL (eg new table calcs) so user can save their variances as a query?\n//        - users would want to preserve column order, could that be done in vis_config?\n\n// FRs\n//\n// Ability to \"expand rows\" for print\n// Config widget to provide checklist display for arrays (e.g. apply multiple styles)\n// Additional info in queryResponse\n//  - filters set on the query\n//  - context (are we in a dashboard or an explore e.g. so that additional info & warnings can be shown in explore)\n// Additional info in details\n//  - Is this the \"final\" updateAsync call?\n// Pass through custom theme information\n// Ability to not just update filters, but also\n//  - Send table_calc expressions back to the explore (eg for variance analysis)\n//  - Send custom field definitions back to the explore\n//  - Request new fields be added to the explore (e.g. add \"hierarchies\" based on drill_fields:)\n// Ability to add horizontal lines to a config section (to split apart field-based options)"],"sourceRoot":""}
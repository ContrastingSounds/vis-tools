{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js","webpack:///./node_modules/ssf/ssf.js","webpack:///./src/vis_table_plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelField","vis","queryResponseField","this","view","view_label","label","field_group_variant","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","heading","short_name","unit","tags","forEach","tag","split","Series","keys","values","types","length","line_items_only","with_subtotals","push","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelDimension","super","align","ModelPivot","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","HeaderCell","pivotData","id","join","colspan","headerRow","cell_style","pivot_fields","sortColsBy","DataCell","html","links","rowid","colid","rowspan","Row","sort","data","Column","transposed","idx","pos","levels","pivot_key","isVariance","variance_type","pivoted","isRowTotal","subtotal","subtotal_data","colspans","colspan_values","headers","header","level","headerCell","header_setting","label_setting","useShortName","groupVarianceColumns","pivot_values","useViewName","getHeaderCellLabel","headerData","_strrev","x","charAt","fill","pad0","v","pad_","rpad_","version","p2_32","pow","pad0r","round","pad0r1","pad0r2","isgeneral","charCodeAt","days","months","init_table","table_fmt","frac","D","mixed","sgn","B","P_2","P_1","P","Q_2","Q_1","Q","A","floor","q","parse_date_code","opts","b2","date","time","dow","dout","out","T","u","y","H","M","S","abs","date1904","Date","setDate","getDate","getFullYear","getMonth","getDay","basedate","dnthresh","getTime","base1904","datenum_local","epoch","getTimezoneOffset","_general_int","general_fmt_num","gnr1","gnr2","gnr4","gnr5","gnr6","gfn5","indexOf","replace","V","LOG10E","toPrecision","w","toFixed","toExponential","gfn2","substr","gfn3","gfn4","general_fmt","Error","write_date","fmt","val","ss0","ss","tt","outl","commaify","j","_general_num","_general","write_num","pct1","frac1","dec1","closeparen","phone","hashq","str","cc","String","fromCharCode","rnd","dd","dec","write_num_flt","match","ffmt","write_num_cm","sfmt","mul","write_num_pct","write_num_exp","period","ee","fakee","$$","$1","$2","$3","ri","ff","aval","sign","den","parseInt","rr","base","myn","myd","write_num_f1","carry","oa","lres","rres","flr","write_num_int","write_num_cm2","write_num_pct2","write_num_exp2","write_num_f2","slice","lastIndexOf","split_fmt","in_str","_split","abstime","fmt_is_date","toUpperCase","eval_fmt","flen","dt","lst","hr","toLowerCase","ssm","bt","jj","nstr","myv","ostr","vv","decpt","lasti","retval","is_date","_eval","cfregex","cfregex2","chkcond","thresh","parseFloat","dateNF","table","f","lat","m1","m2","choose_fmt","load_entry","undefined","load","_table","get_table","load_table","tbl","make_ssf","DO_NOT_EXPORT_SSF","tableModelCoreOptions","theme","section","display","default","order","customTheme","layout","columnOrder","rowSubtotals","display_size","colSubtotals","spanRows","spanCols","sortColumnsBy","useHeadings","indexColumn","transposeTable","VisPluginTableModel","lookerData","queryResponse","visId","dimensions","measures","columns","subtotals_data","transposed_headers","transposed_columns","transposed_data","pivots","variances","column_series","firstVisibleDimension","rowspan_values","useIndexColumn","addRowSubtotals","addSubtotalDepth","subtotalDepth","addColSubtotals","fieldLevel","hasTotals","totals_data","calculateOthers","truncated","hasSubtotals","hasRowTotals","has_row_totals","hasPivots","hasSupers","fields","supermeasure_like","Boolean","addPivotsAndHeaders","addDimensions","addMeasures","checkVarianceCalculations","addIndexColumn","checkSubtotalsData","addRows","addColumnSeries","buildTotals","setRowSpans","addSubTotals","addColumnSubTotals","addVarianceColumns","sortColumns","setHeaderCellLabels","setColSpans","applyFormatting","transposeDimensionsIntoHeaders","transposeRowsIntoColumns","transposeColumnsIntoRows","newOptions","subtotal_options","dimension","subtotal_option","measure","comparisonOptions","pivotComparisons","pivot_field","option","concat","comparisonMeasure","includeMeasure","unshift","pivot","measureHeaders","col_idx","dimension_like","newDimension","pivotField","measure_like","newMeasure","pivot_value","level_sort_values","sort_values","supermeasure","meas","startsWith","baseline","baseline_in_measures","map","reverse","comparison","dim_config_setting","lookerSubtotal","visSubtotal","groups","group","lookerRow","cellValue","cell","cell_series","_parsed","last_dim","new_series","totals_","totalsRow","filter","getRenderedFromHtml","link","othersRow","othersValue","othersStyle","totalValue","sortData","leaves","tiers","span_values","span_tracker","tier","leaf","this_tier_value","neighbour_value","t_","tier_","depth","subTotalGroups","latest_group","g","dim","subTotalGroup","subtotalRow","dims","entries","subtotal_value","subtotal_items","data_row","Number","isFinite","subtotalColumns","pivot_dimension","p_value","Set","subtotalColumn","measure_idx","columnPivotValue","sort_value_from_column","calc","baseline_value","comparison_value","colpair","variance","getColumnById","getHeaderCellLabelByType","calculateVariance","variance_colpairs","calcs","is_total","index","top_level_pivots","createVarianceColumn","a_value","b_value","compareSortArrays","getHeaderData","config_setting","default_colspan","index_parent","measure_parent","h","sourceRow","transposedColumn","transposed_row","field_option","field_name","keep_option","parser","DOMParser","parseFromString","documentElement","textContent","TypeError","cells","from","to","updateColumnOrder","shift","col_order","col","raw_values","index_columns","measure_columns","total_columns"],"mappings":"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","file":"vis_table_plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.field_group_variant || queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = typeof queryResponseField.is_numeric !== 'undefined' ? queryResponseField.is_numeric : false\n    this.is_array = ['list', 'number_list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format ? queryResponseField.value_format : ''\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = ''\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style = style_setting\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'style':\n              this.style = tags[2] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelPivot extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'pivot'    \n    this.align = 'center'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' ? queryResponseField.is_table_calculation : false\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = typeof queryResponseField.is_turtle !== 'undefined' ? queryResponseField.is_turtle : false\n    this.can_pivot = can_pivot\n  }\n}\n\nclass HeaderCell {\n  constructor({ column, type, label = null, align = 'center', modelField = { name: '', label: '', view: '' }, pivotData = {} } = { column, type, label, align, modelField, pivotData }) {\n    this.id = [column.id, type].join('.')\n    this.column = column\n    this.type = type\n    this.colspan = 1\n    this.headerRow = true\n    this.cell_style = ['headerCell']\n    this.label = label\n\n    if (this.column.modelField.type === 'dimension') {\n      if (type === 'pivot') {\n        this.align = 'right'\n      } else if (type === 'heading') {\n        this.align = 'center'\n      } else {\n        this.align = modelField.align || 'left'\n      }\n    } else if (this.column.modelField.type === 'measure') {\n      if (type === 'field' && (column.vis.pivot_fields.length === 0 || column.vis.sortColsBy === 'getSortByPivots' )) {\n        this.align = modelField.align || 'right'\n      } else {\n        this.align = 'center'\n      }\n    } else {\n      this.align = align\n    }\n\n    this.modelField = modelField\n    this.pivotData = pivotData\n\n    if (modelField.type) { this.cell_style.push(modelField.type)}\n    if (modelField.is_table_calculation) { this.cell_style.push('calculation')}\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(...with_subtotals)\n      this.max_for_display = Math.max(...with_subtotals)\n      this.min = Math.min(...line_items_only)\n      this.max = Math.max(...line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  toString() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\nclass DataCell {\n  constructor({ value, rendered = null, html = null, links = [], cell_style = [], align = 'right', rowid = '', colid = '', rowspan = 1, colspan = 1} = {})\n    {\n      this.value = value\n      this.rendered = rendered\n      this.html = html\n      this.links = links\n      this.cell_style = cell_style\n      this.align = align\n\n      this.rowid = rowid\n      this.colid = colid\n      this.rowspan = rowspan\n      this.colspan = colspan\n    }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    // this.modelField = null\n    this.hide = false\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.isVariance = false\n    this.variance_type = null\n    this.pivoted = false\n    this.isRowTotal = false\n    this.super = false\n    this.subtotal = false\n    this.subtotal_data = {}\n    \n    this.series = null\n\n    this.sort = []\n    this.colspans = []\n\n    var colspan_values = {}\n    this.vis.headers.forEach(header => {\n      colspan_values[header.type] = 1\n    })\n    this.vis.colspan_values[this.id] = colspan_values\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getHeaderCellLabel (level) {\n    var headerCell = this.levels[level]\n\n    if (headerCell.label !== null) {\n      var label = headerCell.label\n    } else {\n      var label = headerCell.modelField.label\n      var header_setting = this.vis.config['heading|' + headerCell.modelField.name]\n      var label_setting = this.vis.config['label|' + headerCell.modelField.name]\n\n      if (headerCell.type === 'heading') {\n        if (typeof header_setting !== 'undefined') {\n          label = header_setting ? header_setting : headerCell.modelField.heading\n        } else {\n          label = headerCell.modelField.heading\n        }\n        return label\n      }\n\n      if (headerCell.type === 'field') {\n        label = this.vis.useShortName\n          ? headerCell.modelField.short_name || headerCell.modelField.label \n          : headerCell.modelField.label\n        \n        if (typeof label_setting !== 'undefined' && label_setting !== this.modelField.label) {\n          label = label_setting ? label_setting : label\n        }\n\n        if (this.isVariance) {\n          if (this.vis.groupVarianceColumns) {\n            if (this.vis.pivot_values.length === 2) {\n              label = this.variance_type === 'absolute' ? label + ' #' : label + ' %'\n            } else {\n              label = this.variance_type === 'absolute' ? label + ' Var #' : label + ' Var %'\n            }\n          } else {\n            label = this.variance_type === 'absolute' ? 'Var #' : 'Var %'\n          }\n        }\n    \n        if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n          label = [this.modelField.view, label].join(' ') \n        }\n      }\n\n      if (headerCell.type === 'pivot') {\n        if (this.isVariance && this.vis.groupVarianceColumns) {\n          if (this.vis.pivot_values.length === 2) {\n            label = 'Variance'\n          } else {\n            label = 'Var ' + label\n          }\n        }\n      }\n    }\n\n    return label\n  }\n\n  getHeaderCellLabelByType (type) {\n    for (var i = 0; i < this.vis.headers.length; i++) {\n      if (type === this.vis.headers[i].type) {\n        return this.getHeaderCellLabel(i)\n      }\n    }\n    return null\n  }\n\n  setHeaderCellLabels () {\n    this.levels.forEach((level, i) => {\n      level.label = level.label === null ? this.getHeaderCellLabel(i) : level.label\n    })\n  }\n\n  getHeaderData () {\n    var headerData = {}\n    this.modelField.vis.headers.forEach((header, i) => {\n      headerData[header.type] = this.levels[i]\n    })\n\n    return headerData\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelPivot = ModelPivot\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.HeaderCell = HeaderCell\nexports.DataCell = DataCell\nexports.Row = Row\nexports.Column = Column\n","/* ssf.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint -W041 */\nvar SSF = ({});\nvar make_ssf = function make_ssf(SSF){\nSSF.version = '0.11.0';\nfunction _strrev(x) { var o = \"\", i = x.length-1; while(i>=0) o += x.charAt(i--); return o; }\nfunction fill(c,l) { var o = \"\"; while(o.length < l) o+=c; return o; }\nfunction pad0(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad_(v,d){var t=\"\"+v;return t.length>=d?t:fill(' ',d-t.length)+t;}\nfunction rpad_(v,d){var t=\"\"+v; return t.length>=d?t:t+fill(' ',d-t.length);}\nfunction pad0r1(v,d){var t=\"\"+Math.round(v); return t.length>=d?t:fill('0',d-t.length)+t;}\nfunction pad0r2(v,d){var t=\"\"+v; return t.length>=d?t:fill('0',d-t.length)+t;}\nvar p2_32 = Math.pow(2,32);\nfunction pad0r(v,d){if(v>p2_32||v<-p2_32) return pad0r1(v,d); var i = Math.round(v); return pad0r2(i,d); }\nfunction isgeneral(s, i) { i = i || 0; return s.length >= 7 + i && (s.charCodeAt(i)|32) === 103 && (s.charCodeAt(i+1)|32) === 101 && (s.charCodeAt(i+2)|32) === 110 && (s.charCodeAt(i+3)|32) === 101 && (s.charCodeAt(i+4)|32) === 114 && (s.charCodeAt(i+5)|32) === 97 && (s.charCodeAt(i+6)|32) === 108; }\nvar days = [\n\t['Sun', 'Sunday'],\n\t['Mon', 'Monday'],\n\t['Tue', 'Tuesday'],\n\t['Wed', 'Wednesday'],\n\t['Thu', 'Thursday'],\n\t['Fri', 'Friday'],\n\t['Sat', 'Saturday']\n];\nvar months = [\n\t['J', 'Jan', 'January'],\n\t['F', 'Feb', 'February'],\n\t['M', 'Mar', 'March'],\n\t['A', 'Apr', 'April'],\n\t['M', 'May', 'May'],\n\t['J', 'Jun', 'June'],\n\t['J', 'Jul', 'July'],\n\t['A', 'Aug', 'August'],\n\t['S', 'Sep', 'September'],\n\t['O', 'Oct', 'October'],\n\t['N', 'Nov', 'November'],\n\t['D', 'Dec', 'December']\n];\nfunction init_table(t) {\n\tt[0]=  'General';\n\tt[1]=  '0';\n\tt[2]=  '0.00';\n\tt[3]=  '#,##0';\n\tt[4]=  '#,##0.00';\n\tt[9]=  '0%';\n\tt[10]= '0.00%';\n\tt[11]= '0.00E+00';\n\tt[12]= '# ?/?';\n\tt[13]= '# ??/??';\n\tt[14]= 'm/d/yy';\n\tt[15]= 'd-mmm-yy';\n\tt[16]= 'd-mmm';\n\tt[17]= 'mmm-yy';\n\tt[18]= 'h:mm AM/PM';\n\tt[19]= 'h:mm:ss AM/PM';\n\tt[20]= 'h:mm';\n\tt[21]= 'h:mm:ss';\n\tt[22]= 'm/d/yy h:mm';\n\tt[37]= '#,##0 ;(#,##0)';\n\tt[38]= '#,##0 ;[Red](#,##0)';\n\tt[39]= '#,##0.00;(#,##0.00)';\n\tt[40]= '#,##0.00;[Red](#,##0.00)';\n\tt[45]= 'mm:ss';\n\tt[46]= '[h]:mm:ss';\n\tt[47]= 'mmss.0';\n\tt[48]= '##0.0E+0';\n\tt[49]= '@';\n\tt[56]= '\"上午/下午 \"hh\"時\"mm\"分\"ss\"秒 \"';\n\tt[65535]= 'General';\n}\n\nvar table_fmt = {};\ninit_table(table_fmt);\nfunction frac(x, D, mixed) {\n\tvar sgn = x < 0 ? -1 : 1;\n\tvar B = x * sgn;\n\tvar P_2 = 0, P_1 = 1, P = 0;\n\tvar Q_2 = 1, Q_1 = 0, Q = 0;\n\tvar A = Math.floor(B);\n\twhile(Q_1 < D) {\n\t\tA = Math.floor(B);\n\t\tP = A * P_1 + P_2;\n\t\tQ = A * Q_1 + Q_2;\n\t\tif((B - A) < 0.00000005) break;\n\t\tB = 1 / (B - A);\n\t\tP_2 = P_1; P_1 = P;\n\t\tQ_2 = Q_1; Q_1 = Q;\n\t}\n\tif(Q > D) { if(Q_1 > D) { Q = Q_2; P = P_2; } else { Q = Q_1; P = P_1; } }\n\tif(!mixed) return [0, sgn * P, Q];\n\tvar q = Math.floor(sgn * P/Q);\n\treturn [q, sgn*P - q*Q, Q];\n}\nfunction parse_date_code(v,opts,b2) {\n\tif(v > 2958465 || v < 0) return null;\n\tvar date = (v|0), time = Math.floor(86400 * (v - date)), dow=0;\n\tvar dout=[];\n\tvar out={D:date, T:time, u:86400*(v-date)-time,y:0,m:0,d:0,H:0,M:0,S:0,q:0};\n\tif(Math.abs(out.u) < 1e-6) out.u = 0;\n\tif(opts && opts.date1904) date += 1462;\n\tif(out.u > 0.9999) {\n\t\tout.u = 0;\n\t\tif(++time == 86400) { out.T = time = 0; ++date; ++out.D; }\n\t}\n\tif(date === 60) {dout = b2 ? [1317,10,29] : [1900,2,29]; dow=3;}\n\telse if(date === 0) {dout = b2 ? [1317,8,29] : [1900,1,0]; dow=6;}\n\telse {\n\t\tif(date > 60) --date;\n\t\t/* 1 = Jan 1 1900 in Gregorian */\n\t\tvar d = new Date(1900, 0, 1);\n\t\td.setDate(d.getDate() + date - 1);\n\t\tdout = [d.getFullYear(), d.getMonth()+1,d.getDate()];\n\t\tdow = d.getDay();\n\t\tif(date < 60) dow = (dow + 6) % 7;\n\t\tif(b2) dow = fix_hijri(d, dout);\n\t}\n\tout.y = dout[0]; out.m = dout[1]; out.d = dout[2];\n\tout.S = time % 60; time = Math.floor(time / 60);\n\tout.M = time % 60; time = Math.floor(time / 60);\n\tout.H = time;\n\tout.q = dow;\n\treturn out;\n}\nSSF.parse_date_code = parse_date_code;\nvar basedate = new Date(1899, 11, 31, 0, 0, 0);\nvar dnthresh = basedate.getTime();\nvar base1904 = new Date(1900, 2, 1, 0, 0, 0);\nfunction datenum_local(v, date1904) {\n\tvar epoch = v.getTime();\n\tif(date1904) epoch -= 1461*24*60*60*1000;\n\telse if(v >= base1904) epoch += 24*60*60*1000;\n\treturn (epoch - (dnthresh + (v.getTimezoneOffset() - basedate.getTimezoneOffset()) * 60000)) / (24 * 60 * 60 * 1000);\n}\nfunction general_fmt_int(v) { return v.toString(10); }\nSSF._general_int = general_fmt_int;\nvar general_fmt_num = (function make_general_fmt_num() {\nvar gnr1 = /\\.(\\d*[1-9])0+$/, gnr2 = /\\.0*$/, gnr4 = /\\.(\\d*[1-9])0+/, gnr5 = /\\.0*[Ee]/, gnr6 = /(E[+-])(\\d)$/;\nfunction gfn2(v) {\n\tvar w = (v<0?12:11);\n\tvar o = gfn5(v.toFixed(12)); if(o.length <= w) return o;\n\to = v.toPrecision(10); if(o.length <= w) return o;\n\treturn v.toExponential(5);\n}\nfunction gfn3(v) {\n\tvar o = v.toFixed(11).replace(gnr1,\".$1\");\n\tif(o.length > (v<0?12:11)) o = v.toPrecision(6);\n\treturn o;\n}\nfunction gfn4(o) {\n\tfor(var i = 0; i != o.length; ++i) if((o.charCodeAt(i) | 0x20) === 101) return o.replace(gnr4,\".$1\").replace(gnr5,\"E\").replace(\"e\",\"E\").replace(gnr6,\"$10$2\");\n\treturn o;\n}\nfunction gfn5(o) {\n\treturn o.indexOf(\".\") > -1 ? o.replace(gnr2,\"\").replace(gnr1,\".$1\") : o;\n}\nreturn function general_fmt_num(v) {\n\tvar V = Math.floor(Math.log(Math.abs(v))*Math.LOG10E), o;\n\tif(V >= -4 && V <= -1) o = v.toPrecision(10+V);\n\telse if(Math.abs(V) <= 9) o = gfn2(v);\n\telse if(V === 10) o = v.toFixed(10).substr(0,12);\n\telse o = gfn3(v);\n\treturn gfn5(gfn4(o));\n};})();\nSSF._general_num = general_fmt_num;\nfunction general_fmt(v, opts) {\n\tswitch(typeof v) {\n\t\tcase 'string': return v;\n\t\tcase 'boolean': return v ? \"TRUE\" : \"FALSE\";\n\t\tcase 'number': return (v|0) === v ? v.toString(10) : general_fmt_num(v);\n\t\tcase 'undefined': return \"\";\n\t\tcase 'object':\n\t\t\tif(v == null) return \"\";\n\t\t\tif(v instanceof Date) return format(14, datenum_local(v, opts && opts.date1904), opts);\n\t}\n\tthrow new Error(\"unsupported value in General format: \" + v);\n}\nSSF._general = general_fmt;\nfunction fix_hijri() { return 0; }\n/*jshint -W086 */\nfunction write_date(type, fmt, val, ss0) {\n\tvar o=\"\", ss=0, tt=0, y = val.y, out, outl = 0;\n\tswitch(type) {\n\t\tcase 98: /* 'b' buddhist year */\n\t\t\ty = val.y + 543;\n\t\t\t/* falls through */\n\t\tcase 121: /* 'y' year */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = y % 100; outl = 2; break;\n\t\t\tdefault: out = y % 10000; outl = 4; break;\n\t\t} break;\n\t\tcase 109: /* 'm' month */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.m; outl = fmt.length; break;\n\t\t\tcase 3: return months[val.m-1][1];\n\t\t\tcase 5: return months[val.m-1][0];\n\t\t\tdefault: return months[val.m-1][2];\n\t\t} break;\n\t\tcase 100: /* 'd' day */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.d; outl = fmt.length; break;\n\t\t\tcase 3: return days[val.q][0];\n\t\t\tdefault: return days[val.q][1];\n\t\t} break;\n\t\tcase 104: /* 'h' 12-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = 1+(val.H+11)%12; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 72: /* 'H' 24-hour */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.H; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad hour format: ' + fmt;\n\t\t} break;\n\t\tcase 77: /* 'M' minutes */\n\t\tswitch(fmt.length) {\n\t\t\tcase 1: case 2: out = val.M; outl = fmt.length; break;\n\t\t\tdefault: throw 'bad minute format: ' + fmt;\n\t\t} break;\n\t\tcase 115: /* 's' seconds */\n\t\t\tif(fmt != 's' && fmt != 'ss' && fmt != '.0' && fmt != '.00' && fmt != '.000') throw 'bad second format: ' + fmt;\n\t\t\tif(val.u === 0 && (fmt == \"s\" || fmt == \"ss\")) return pad0(val.S, fmt.length);\nif(ss0 >= 2) tt = ss0 === 3 ? 1000 : 100;\n\t\t\telse tt = ss0 === 1 ? 10 : 1;\n\t\t\tss = Math.round((tt)*(val.S + val.u));\n\t\t\tif(ss >= 60*tt) ss = 0;\n\t\t\tif(fmt === 's') return ss === 0 ? \"0\" : \"\"+ss/tt;\n\t\t\to = pad0(ss,2 + ss0);\n\t\t\tif(fmt === 'ss') return o.substr(0,2);\n\t\t\treturn \".\" + o.substr(2,fmt.length-1);\n\t\tcase 90: /* 'Z' absolute time */\n\t\tswitch(fmt) {\n\t\t\tcase '[h]': case '[hh]': out = val.D*24+val.H; break;\n\t\t\tcase '[m]': case '[mm]': out = (val.D*24+val.H)*60+val.M; break;\n\t\t\tcase '[s]': case '[ss]': out = ((val.D*24+val.H)*60+val.M)*60+Math.round(val.S+val.u); break;\n\t\t\tdefault: throw 'bad abstime format: ' + fmt;\n\t\t} outl = fmt.length === 3 ? 1 : 2; break;\n\t\tcase 101: /* 'e' era */\n\t\t\tout = y; outl = 1;\n\t}\n\tif(outl > 0) return pad0(out, outl); else return \"\";\n}\n/*jshint +W086 */\nfunction commaify(s) {\n\tvar w = 3;\n\tif(s.length <= w) return s;\n\tvar j = (s.length % w), o = s.substr(0,j);\n\tfor(; j!=s.length; j+=w) o+=(o.length > 0 ? \",\" : \"\") + s.substr(j,w);\n\treturn o;\n}\nvar write_num = (function make_write_num(){\nvar pct1 = /%/g;\nfunction write_num_pct(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_cm(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_exp(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(o.indexOf(\"e\") === -1) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\twhile(o.substr(0,2) === \"0.\") {\n\t\t\t\to = o.charAt(0) + o.substr(2,period) + \".\" + o.substr(2+period);\n\t\t\t\to = o.replace(/^0+([1-9])/,\"$1\").replace(/^0+\\./,\"0.\");\n\t\t\t}\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nvar frac1 = /# (\\?+)( ?)\\/( ?)(\\d+)/;\nfunction write_num_f1(r, aval, sign) {\n\tvar den = parseInt(r[4],10), rr = Math.round(aval * den), base = Math.floor(rr/den);\n\tvar myn = (rr - base*den), myd = den;\n\treturn sign + (base === 0 ? \"\" : \"\"+base) + \" \" + (myn === 0 ? fill(\" \", r[1].length + 1 + r[4].length) : pad_(myn,r[1].length) + r[2] + \"/\" + r[3] + pad0(myd,r[4].length));\n}\nfunction write_num_f2(r, aval, sign) {\n\treturn sign + (aval === 0 ? \"\" : \"\"+aval) + fill(\" \", r[1].length + 2 + r[4].length);\n}\nvar dec1 = /^#*0*\\.([0#]+)/;\nvar closeparen = /\\).*[0#]/;\nvar phone = /\\(###\\) ###\\\\?-####/;\nfunction hashq(str) {\n\tvar o = \"\", cc;\n\tfor(var i = 0; i != str.length; ++i) switch((cc=str.charCodeAt(i))) {\n\t\tcase 35: break;\n\t\tcase 63: o+= \" \"; break;\n\t\tcase 48: o+= \"0\"; break;\n\t\tdefault: o+= String.fromCharCode(cc);\n\t}\n\treturn o;\n}\nfunction rnd(val, d) { var dd = Math.pow(10,d); return \"\"+(Math.round(val * dd)/dd); }\nfunction dec(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 0;\n\t}\n\treturn Math.round((val-Math.floor(val))*Math.pow(10,d));\n}\nfunction carry(val, d) {\n\tif (d < ('' + Math.round((val-Math.floor(val))*Math.pow(10,d))).length) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\nfunction flr(val) { if(val < 2147483647 && val > -2147483648) return \"\"+(val >= 0 ? (val|0) : (val-1|0)); return \"\"+Math.floor(val); }\nfunction write_num_flt(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_flt('n', ffmt, val);\n\t\treturn '(' + write_num_flt('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_flt(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0r(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = pad0r(val,0); if(o === \"0\") o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f1(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0r(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\n\t\to = rnd(val, r[1].length).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1])).replace(/\\.(\\d*)$/,function($$, $1) { return \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + rnd(aval, r[2].length).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify(pad0r(aval,0));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(\"\"+(Math.floor(val) + carry(val, r[1].length))) + \".\" + pad0(dec(val, r[1].length),r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_flt(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_flt(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_flt(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = pad0r(val, 0);\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0?]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\tri = dec(val, r[1].length);\n\t\treturn val < 0 ? \"-\" + write_num_flt(type, fmt, -val) : commaify(flr(val)).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(ri,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,##0.00\": return write_num_flt(type, \"#,##0.00\", val);\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(pad0r(aval,0)); return x !== \"0\" ? sign + x : \"\";\n\t\tcase \"###,###.00\": return write_num_flt(type, \"###,##0.00\",val).replace(/^0\\./,\".\");\n\t\tcase \"#,###.00\": return write_num_flt(type, \"#,##0.00\",val).replace(/^0\\./,\".\");\n\t\tdefault:\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nfunction write_num_cm2(type, fmt, val){\n\tvar idx = fmt.length - 1;\n\twhile(fmt.charCodeAt(idx-1) === 44) --idx;\n\treturn write_num(type, fmt.substr(0,idx), val / Math.pow(10,3*(fmt.length-idx)));\n}\nfunction write_num_pct2(type, fmt, val){\n\tvar sfmt = fmt.replace(pct1,\"\"), mul = fmt.length - sfmt.length;\n\treturn write_num(type, sfmt, val * Math.pow(10,2*mul)) + fill(\"%\",mul);\n}\nfunction write_num_exp2(fmt, val){\n\tvar o;\n\tvar idx = fmt.indexOf(\"E\") - fmt.indexOf(\".\") - 1;\n\tif(fmt.match(/^#+0.0E\\+0$/)) {\n\t\tif(val == 0) return \"0.0E+0\";\n\t\telse if(val < 0) return \"-\" + write_num_exp2(fmt, -val);\n\t\tvar period = fmt.indexOf(\".\"); if(period === -1) period=fmt.indexOf('E');\n\t\tvar ee = Math.floor(Math.log(val)*Math.LOG10E)%period;\n\t\tif(ee < 0) ee += period;\n\t\to = (val/Math.pow(10,ee)).toPrecision(idx+1+(period+ee)%period);\n\t\tif(!o.match(/[Ee]/)) {\n\t\t\tvar fakee = Math.floor(Math.log(val)*Math.LOG10E);\n\t\t\tif(o.indexOf(\".\") === -1) o = o.charAt(0) + \".\" + o.substr(1) + \"E+\" + (fakee - o.length+ee);\n\t\t\telse o += \"E+\" + (fakee - ee);\n\t\t\to = o.replace(/\\+-/,\"-\");\n\t\t}\n\t\to = o.replace(/^([+-]?)(\\d*)\\.(\\d*)[Ee]/,function($$,$1,$2,$3) { return $1 + $2 + $3.substr(0,(period+ee)%period) + \".\" + $3.substr(ee) + \"E\"; });\n\t} else o = val.toExponential(idx);\n\tif(fmt.match(/E\\+00$/) && o.match(/e[+-]\\d$/)) o = o.substr(0,o.length-1) + \"0\" + o.charAt(o.length-1);\n\tif(fmt.match(/E\\-/) && o.match(/e\\+/)) o = o.replace(/e\\+/,\"e\");\n\treturn o.replace(\"e\",\"E\");\n}\nfunction write_num_int(type, fmt, val) {\n\tif(type.charCodeAt(0) === 40 && !fmt.match(closeparen)) {\n\t\tvar ffmt = fmt.replace(/\\( */,\"\").replace(/ \\)/,\"\").replace(/\\)/,\"\");\n\t\tif(val >= 0) return write_num_int('n', ffmt, val);\n\t\treturn '(' + write_num_int('n', ffmt, -val) + ')';\n\t}\n\tif(fmt.charCodeAt(fmt.length - 1) === 44) return write_num_cm2(type, fmt, val);\n\tif(fmt.indexOf('%') !== -1) return write_num_pct2(type, fmt, val);\n\tif(fmt.indexOf('E') !== -1) return write_num_exp2(fmt, val);\n\tif(fmt.charCodeAt(0) === 36) return \"$\"+write_num_int(type,fmt.substr(fmt.charAt(1)==' '?2:1),val);\n\tvar o;\n\tvar r, ri, ff, aval = Math.abs(val), sign = val < 0 ? \"-\" : \"\";\n\tif(fmt.match(/^00+$/)) return sign + pad0(aval,fmt.length);\n\tif(fmt.match(/^[#?]+$/)) {\n\t\to = (\"\"+val); if(val === 0) o = \"\";\n\t\treturn o.length > fmt.length ? o : hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(frac1))) return write_num_f2(r, aval, sign);\n\tif(fmt.match(/^#+0+$/)) return sign + pad0(aval,fmt.length - fmt.indexOf(\"0\"));\n\tif((r = fmt.match(dec1))) {\no = (\"\"+val).replace(/^([^\\.]+)$/,\"$1.\"+hashq(r[1])).replace(/\\.$/,\".\"+hashq(r[1]));\n\t\to = o.replace(/\\.(\\d*)$/,function($$, $1) {\nreturn \".\" + $1 + fill(\"0\", hashq(r[1]).length-$1.length); });\n\t\treturn fmt.indexOf(\"0.\") !== -1 ? o : o.replace(/^0\\./,\".\");\n\t}\n\tfmt = fmt.replace(/^#+([0.])/, \"$1\");\n\tif((r = fmt.match(/^(0*)\\.(#*)$/))) {\n\t\treturn sign + (\"\"+aval).replace(/\\.(\\d*[1-9])0*$/,\".$1\").replace(/^(-?\\d*)$/,\"$1.\").replace(/^0\\./,r[1].length?\"0.\":\".\");\n\t}\n\tif((r = fmt.match(/^#{1,3},##0(\\.?)$/))) return sign + commaify((\"\"+aval));\n\tif((r = fmt.match(/^#,##0\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify((\"\"+val)) + \".\" + fill('0',r[1].length);\n\t}\n\tif((r = fmt.match(/^#,#*,#0/))) return write_num_int(type,fmt.replace(/^#,#*,/,\"\"),val);\n\tif((r = fmt.match(/^([0#]+)(\\\\?-([0#]+))+$/))) {\n\t\to = _strrev(write_num_int(type, fmt.replace(/[\\\\-]/g,\"\"), val));\n\t\tri = 0;\n\t\treturn _strrev(_strrev(fmt.replace(/\\\\/g,\"\")).replace(/[0#]/g,function(x){return ri<o.length?o.charAt(ri++):x==='0'?'0':\"\";}));\n\t}\n\tif(fmt.match(phone)) {\n\t\to = write_num_int(type, \"##########\", val);\n\t\treturn \"(\" + o.substr(0,3) + \") \" + o.substr(3, 3) + \"-\" + o.substr(6);\n\t}\n\tvar oa = \"\";\n\tif((r = fmt.match(/^([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(r[4].length,7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, false);\n\t\to = \"\" + sign;\n\t\toa = write_num(\"n\", r[1], ff[1]);\n\t\tif(oa.charAt(oa.length-1) == \" \") oa = oa.substr(0,oa.length-1) + \"0\";\n\t\to += oa + r[2] + \"/\" + r[3];\n\t\toa = rpad_(ff[2],ri);\n\t\tif(oa.length < r[4].length) oa = hashq(r[4].substr(r[4].length-oa.length)) + oa;\n\t\to += oa;\n\t\treturn o;\n\t}\n\tif((r = fmt.match(/^# ([#0?]+)( ?)\\/( ?)([#0?]+)/))) {\n\t\tri = Math.min(Math.max(r[1].length, r[4].length),7);\n\t\tff = frac(aval, Math.pow(10,ri)-1, true);\n\t\treturn sign + (ff[0]||(ff[1] ? \"\" : \"0\")) + \" \" + (ff[1] ? pad_(ff[1],ri) + r[2] + \"/\" + r[3] + rpad_(ff[2],ri): fill(\" \", 2*ri+1 + r[2].length + r[3].length));\n\t}\n\tif((r = fmt.match(/^[#0?]+$/))) {\n\t\to = \"\" + val;\n\t\tif(fmt.length <= o.length) return o;\n\t\treturn hashq(fmt.substr(0,fmt.length-o.length)) + o;\n\t}\n\tif((r = fmt.match(/^([#0]+)\\.([#0]+)$/))) {\n\t\to = \"\" + val.toFixed(Math.min(r[2].length,10)).replace(/([^0])0+$/,\"$1\");\n\t\tri = o.indexOf(\".\");\n\t\tvar lres = fmt.indexOf(\".\") - ri, rres = fmt.length - o.length - lres;\n\t\treturn hashq(fmt.substr(0,lres) + o + fmt.substr(fmt.length-rres));\n\t}\n\tif((r = fmt.match(/^00,000\\.([#0]*0)$/))) {\n\t\treturn val < 0 ? \"-\" + write_num_int(type, fmt, -val) : commaify(\"\"+val).replace(/^\\d,\\d{3}$/,\"0$&\").replace(/^\\d*$/,function($$) { return \"00,\" + ($$.length < 3 ? pad0(0,3-$$.length) : \"\") + $$; }) + \".\" + pad0(0,r[1].length);\n\t}\n\tswitch(fmt) {\n\t\tcase \"###,###\":\n\t\tcase \"##,###\":\n\t\tcase \"#,###\": var x = commaify(\"\"+aval); return x !== \"0\" ? sign + x : \"\";\n\t\tdefault:\n\t\t\tif(fmt.match(/\\.[0#?]*$/)) return write_num_int(type, fmt.slice(0,fmt.lastIndexOf(\".\")), val) + hashq(fmt.slice(fmt.lastIndexOf(\".\")));\n\t}\n\tthrow new Error(\"unsupported format |\" + fmt + \"|\");\n}\nreturn function write_num(type, fmt, val) {\n\treturn (val|0) === val ? write_num_int(type, fmt, val) : write_num_flt(type, fmt, val);\n};})();\nfunction split_fmt(fmt) {\n\tvar out = [];\n\tvar in_str = false/*, cc*/;\n\tfor(var i = 0, j = 0; i < fmt.length; ++i) switch((/*cc=*/fmt.charCodeAt(i))) {\n\t\tcase 34: /* '\"' */\n\t\t\tin_str = !in_str; break;\n\t\tcase 95: case 42: case 92: /* '_' '*' '\\\\' */\n\t\t\t++i; break;\n\t\tcase 59: /* ';' */\n\t\t\tout[out.length] = fmt.substr(j,i-j);\n\t\t\tj = i+1;\n\t}\n\tout[out.length] = fmt.substr(j);\n\tif(in_str === true) throw new Error(\"Format |\" + fmt + \"| unterminated string \");\n\treturn out;\n}\nSSF._split = split_fmt;\nvar abstime = /\\[[HhMmSs]*\\]/;\nfunction fmt_is_date(fmt) {\n\tvar i = 0, /*cc = 0,*/ c = \"\", o = \"\";\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': if(isgeneral(fmt, i)) i+= 6; i++; break;\n\t\t\tcase '\"': for(;(/*cc=*/fmt.charCodeAt(++i)) !== 34 && i < fmt.length;){/*empty*/} ++i; break;\n\t\t\tcase '\\\\': i+=2; break;\n\t\t\tcase '_': i+=2; break;\n\t\t\tcase '@': ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") return true;\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g': return true;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") return true;\n\t\t\t\tif(fmt.substr(i, 5).toUpperCase() === \"AM/PM\") return true;\n\t\t\t\t++i; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.match(abstime)) return true;\n\t\t\t\tbreak;\n\t\t\tcase '.':\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\twhile(i < fmt.length && (\"0#?.,E+-%\".indexOf(c=fmt.charAt(++i)) > -1 || (c=='\\\\' && fmt.charAt(i+1) == \"-\" && \"0#\".indexOf(fmt.charAt(i+2))>-1))){/* empty */}\n\t\t\t\tbreak;\n\t\t\tcase '?': while(fmt.charAt(++i) === c){/* empty */} break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break;\n\t\t\tcase '(': case ')': ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\twhile(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1){/* empty */} break;\n\t\t\tcase ' ': ++i; break;\n\t\t\tdefault: ++i; break;\n\t\t}\n\t}\n\treturn false;\n}\nSSF.is_date = fmt_is_date;\nfunction eval_fmt(fmt, v, opts, flen) {\n\tvar out = [], o = \"\", i = 0, c = \"\", lst='t', dt, j, cc;\n\tvar hr='H';\n\t/* Tokenize */\n\twhile(i < fmt.length) {\n\t\tswitch((c = fmt.charAt(i))) {\n\t\t\tcase 'G': /* General */\n\t\t\t\tif(!isgeneral(fmt, i)) throw new Error('unrecognized character ' + c + ' in ' +fmt);\n\t\t\t\tout[out.length] = {t:'G', v:'General'}; i+=7; break;\n\t\t\tcase '\"': /* Literal text */\n\t\t\t\tfor(o=\"\";(cc=fmt.charCodeAt(++i)) !== 34 && i < fmt.length;) o += String.fromCharCode(cc);\n\t\t\t\tout[out.length] = {t:'t', v:o}; ++i; break;\n\t\t\tcase '\\\\': var w = fmt.charAt(++i), t = (w === \"(\" || w === \")\") ? w : 't';\n\t\t\t\tout[out.length] = {t:t, v:w}; ++i; break;\n\t\t\tcase '_': out[out.length] = {t:'t', v:\" \"}; i+=2; break;\n\t\t\tcase '@': /* Text Placeholder */\n\t\t\t\tout[out.length] = {t:'T', v:v}; ++i; break;\n\t\t\tcase 'B': case 'b':\n\t\t\t\tif(fmt.charAt(i+1) === \"1\" || fmt.charAt(i+1) === \"2\") {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts, fmt.charAt(i+1) === \"2\"); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'X', v:fmt.substr(i,2)}; lst = c; i+=2; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase 'M': case 'D': case 'Y': case 'H': case 'S': case 'E':\n\t\t\t\tc = c.toLowerCase();\n\t\t\t\t/* falls through */\n\t\t\tcase 'm': case 'd': case 'y': case 'h': case 's': case 'e': case 'g':\n\t\t\t\tif(v < 0) return \"\";\n\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\to = c; while(++i < fmt.length && fmt.charAt(i).toLowerCase() === c) o+=c;\n\t\t\t\tif(c === 'm' && lst.toLowerCase() === 'h') c = 'M';\n\t\t\t\tif(c === 'h') c = hr;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase 'A': case 'a':\n\t\t\t\tvar q={t:c, v:c};\n\t\t\t\tif(dt==null) dt=parse_date_code(v, opts);\n\t\t\t\tif(fmt.substr(i, 3).toUpperCase() === \"A/P\") { if(dt!=null) q.v = dt.H >= 12 ? \"P\" : \"A\"; q.t = 'T'; hr='h';i+=3;}\n\t\t\t\telse if(fmt.substr(i,5).toUpperCase() === \"AM/PM\") { if(dt!=null) q.v = dt.H >= 12 ? \"PM\" : \"AM\"; q.t = 'T'; i+=5; hr='h'; }\n\t\t\t\telse { q.t = \"t\"; ++i; }\n\t\t\t\tif(dt==null && q.t === 'T') return \"\";\n\t\t\t\tout[out.length] = q; lst = c; break;\n\t\t\tcase '[':\n\t\t\t\to = c;\n\t\t\t\twhile(fmt.charAt(i++) !== ']' && i < fmt.length) o += fmt.charAt(i);\n\t\t\t\tif(o.slice(-1) !== ']') throw 'unterminated \"[\" block: |' + o + '|';\n\t\t\t\tif(o.match(abstime)) {\n\t\t\t\t\tif(dt==null) { dt=parse_date_code(v, opts); if(dt==null) return \"\"; }\n\t\t\t\t\tout[out.length] = {t:'Z', v:o.toLowerCase()};\n\t\t\t\t\tlst = o.charAt(1);\n\t\t\t\t} else if(o.indexOf(\"$\") > -1) {\n\t\t\t\t\to = (o.match(/\\$([^-\\[\\]]*)/)||[])[1]||\"$\";\n\t\t\t\t\tif(!fmt_is_date(fmt)) out[out.length] = {t:'t',v:o};\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t/* Numbers */\n\t\t\tcase '.':\n\t\t\t\tif(dt != null) {\n\t\t\t\t\to = c; while(++i < fmt.length && (c=fmt.charAt(i)) === \"0\") o += c;\n\t\t\t\t\tout[out.length] = {t:'s', v:o}; break;\n\t\t\t\t}\n\t\t\t\t/* falls through */\n\t\t\tcase '0': case '#':\n\t\t\t\to = c; while(++i < fmt.length && \"0#?.,E+-%\".indexOf(c=fmt.charAt(i)) > -1) o += c;\n\t\t\t\tout[out.length] = {t:'n', v:o}; break;\n\t\t\tcase '?':\n\t\t\t\to = c; while(fmt.charAt(++i) === c) o+=c;\n\t\t\t\tout[out.length] = {t:c, v:o}; lst = c; break;\n\t\t\tcase '*': ++i; if(fmt.charAt(i) == ' ' || fmt.charAt(i) == '*') ++i; break; // **\n\t\t\tcase '(': case ')': out[out.length] = {t:(flen===1?'t':c), v:c}; ++i; break;\n\t\t\tcase '1': case '2': case '3': case '4': case '5': case '6': case '7': case '8': case '9':\n\t\t\t\to = c; while(i < fmt.length && \"0123456789\".indexOf(fmt.charAt(++i)) > -1) o+=fmt.charAt(i);\n\t\t\t\tout[out.length] = {t:'D', v:o}; break;\n\t\t\tcase ' ': out[out.length] = {t:c, v:c}; ++i; break;\n\t\t\tcase \"$\": out[out.length] = {t:'t', v:'$'}; ++i; break;\n\t\t\tdefault:\n\t\t\t\tif(\",$-+/():!^&'~{}<>=€acfijklopqrtuvwxzP\".indexOf(c) === -1) throw new Error('unrecognized character ' + c + ' in ' + fmt);\n\t\t\t\tout[out.length] = {t:'t', v:c}; ++i; break;\n\t\t}\n\t}\n\tvar bt = 0, ss0 = 0, ssm;\n\tfor(i=out.length-1, lst='t'; i >= 0; --i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 'h': case 'H': out[i].t = hr; lst='h'; if(bt < 1) bt = 1; break;\n\t\t\tcase 's':\n\t\t\t\tif((ssm=out[i].v.match(/\\.0+$/))) ss0=Math.max(ss0,ssm[0].length-1);\n\t\t\t\tif(bt < 3) bt = 3;\n\t\t\t/* falls through */\n\t\t\tcase 'd': case 'y': case 'M': case 'e': lst=out[i].t; break;\n\t\t\tcase 'm': if(lst === 's') { out[i].t = 'M'; if(bt < 2) bt = 2; } break;\n\t\t\tcase 'X': /*if(out[i].v === \"B2\");*/\n\t\t\t\tbreak;\n\t\t\tcase 'Z':\n\t\t\t\tif(bt < 1 && out[i].v.match(/[Hh]/)) bt = 1;\n\t\t\t\tif(bt < 2 && out[i].v.match(/[Mm]/)) bt = 2;\n\t\t\t\tif(bt < 3 && out[i].v.match(/[Ss]/)) bt = 3;\n\t\t}\n\t}\n\tswitch(bt) {\n\t\tcase 0: break;\n\t\tcase 1:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tif(dt.M >=  60) { dt.M = 0; ++dt.H; }\n\t\t\tbreak;\n\t\tcase 2:\nif(dt.u >= 0.5) { dt.u = 0; ++dt.S; }\n\t\t\tif(dt.S >=  60) { dt.S = 0; ++dt.M; }\n\t\t\tbreak;\n\t}\n\t/* replace fields */\n\tvar nstr = \"\", jj;\n\tfor(i=0; i < out.length; ++i) {\n\t\tswitch(out[i].t) {\n\t\t\tcase 't': case 'T': case ' ': case 'D': break;\n\t\t\tcase 'X': out[i].v = \"\"; out[i].t = \";\"; break;\n\t\t\tcase 'd': case 'm': case 'y': case 'h': case 'H': case 'M': case 's': case 'e': case 'b': case 'Z':\nout[i].v = write_date(out[i].t.charCodeAt(0), out[i].v, dt, ss0);\n\t\t\t\tout[i].t = 't'; break;\n\t\t\tcase 'n': case '?':\n\t\t\t\tjj = i+1;\n\t\t\t\twhile(out[jj] != null && (\n\t\t\t\t\t(c=out[jj].t) === \"?\" || c === \"D\" ||\n\t\t\t\t\t((c === \" \" || c === \"t\") && out[jj+1] != null && (out[jj+1].t === '?' || out[jj+1].t === \"t\" && out[jj+1].v === '/')) ||\n\t\t\t\t\t(out[i].t === '(' && (c === ' ' || c === 'n' || c === ')')) ||\n\t\t\t\t\t(c === 't' && (out[jj].v === '/' || out[jj].v === ' ' && out[jj+1] != null && out[jj+1].t == '?'))\n\t\t\t\t)) {\n\t\t\t\t\tout[i].v += out[jj].v;\n\t\t\t\t\tout[jj] = {v:\"\", t:\";\"}; ++jj;\n\t\t\t\t}\n\t\t\t\tnstr += out[i].v;\n\t\t\t\ti = jj-1; break;\n\t\t\tcase 'G': out[i].t = 't'; out[i].v = general_fmt(v,opts); break;\n\t\t}\n\t}\n\tvar vv = \"\", myv, ostr;\n\tif(nstr.length > 0) {\n\t\tif(nstr.charCodeAt(0) == 40) /* '(' */ {\n\t\t\tmyv = (v<0&&nstr.charCodeAt(0) === 45 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t} else {\n\t\t\tmyv = (v<0 && flen > 1 ? -v : v);\n\t\t\tostr = write_num('n', nstr, myv);\n\t\t\tif(myv < 0 && out[0] && out[0].t == 't') {\n\t\t\t\tostr = ostr.substr(1);\n\t\t\t\tout[0].v = \"-\" + out[0].v;\n\t\t\t}\n\t\t}\n\t\tjj=ostr.length-1;\n\t\tvar decpt = out.length;\n\t\tfor(i=0; i < out.length; ++i) if(out[i] != null && out[i].t != 't' && out[i].v.indexOf(\".\") > -1) { decpt = i; break; }\n\t\tvar lasti=out.length;\n\t\tif(decpt === out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tfor(i=out.length-1; i>= 0;--i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tif(jj>=out[i].v.length-1) { jj -= out[i].v.length; out[i].v = ostr.substr(jj+1, out[i].v.length); }\n\t\t\t\telse if(jj < 0) out[i].v = \"\";\n\t\t\t\telse { out[i].v = ostr.substr(0, jj+1); jj = -1; }\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t}\n\t\telse if(decpt !== out.length && ostr.indexOf(\"E\") === -1) {\n\t\t\tjj = ostr.indexOf(\".\")-1;\n\t\t\tfor(i=decpt; i>= 0; --i) {\n\t\t\t\tif(out[i] == null || 'n?'.indexOf(out[i].t) === -1) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")-1:out[i].v.length-1;\n\t\t\t\tvv = out[i].v.substr(j+1);\n\t\t\t\tfor(; j>=0; --j) {\n\t\t\t\t\tif(jj>=0 && (out[i].v.charAt(j) === \"0\" || out[i].v.charAt(j) === \"#\")) vv = ostr.charAt(jj--) + vv;\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t\tif(jj>=0 && lasti<out.length) out[lasti].v = ostr.substr(0,jj+1) + out[lasti].v;\n\t\t\tjj = ostr.indexOf(\".\")+1;\n\t\t\tfor(i=decpt; i<out.length; ++i) {\n\t\t\t\tif(out[i] == null || ('n?('.indexOf(out[i].t) === -1 && i !== decpt)) continue;\n\t\t\t\tj=out[i].v.indexOf(\".\")>-1&&i===decpt?out[i].v.indexOf(\".\")+1:0;\n\t\t\t\tvv = out[i].v.substr(0,j);\n\t\t\t\tfor(; j<out[i].v.length; ++j) {\n\t\t\t\t\tif(jj<ostr.length) vv += ostr.charAt(jj++);\n\t\t\t\t}\n\t\t\t\tout[i].v = vv;\n\t\t\t\tout[i].t = 't';\n\t\t\t\tlasti = i;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0; i<out.length; ++i) if(out[i] != null && 'n?'.indexOf(out[i].t)>-1) {\n\t\tmyv = (flen >1 && v < 0 && i>0 && out[i-1].v === \"-\" ? -v:v);\n\t\tout[i].v = write_num(out[i].t, out[i].v, myv);\n\t\tout[i].t = 't';\n\t}\n\tvar retval = \"\";\n\tfor(i=0; i !== out.length; ++i) if(out[i] != null) retval += out[i].v;\n\treturn retval;\n}\nSSF._eval = eval_fmt;\nvar cfregex = /\\[[=<>]/;\nvar cfregex2 = /\\[(=|>[=]?|<[>=]?)(-?\\d+(?:\\.\\d*)?)\\]/;\nfunction chkcond(v, rr) {\n\tif(rr == null) return false;\n\tvar thresh = parseFloat(rr[2]);\n\tswitch(rr[1]) {\n\t\tcase \"=\":  if(v == thresh) return true; break;\n\t\tcase \">\":  if(v >  thresh) return true; break;\n\t\tcase \"<\":  if(v <  thresh) return true; break;\n\t\tcase \"<>\": if(v != thresh) return true; break;\n\t\tcase \">=\": if(v >= thresh) return true; break;\n\t\tcase \"<=\": if(v <= thresh) return true; break;\n\t}\n\treturn false;\n}\nfunction choose_fmt(f, v) {\n\tvar fmt = split_fmt(f);\n\tvar l = fmt.length, lat = fmt[l-1].indexOf(\"@\");\n\tif(l<4 && lat>-1) --l;\n\tif(fmt.length > 4) throw new Error(\"cannot find right format for |\" + fmt.join(\"|\") + \"|\");\n\tif(typeof v !== \"number\") return [4, fmt.length === 4 || lat>-1?fmt[fmt.length-1]:\"@\"];\n\tswitch(fmt.length) {\n\t\tcase 1: fmt = lat>-1 ? [\"General\", \"General\", \"General\", fmt[0]] : [fmt[0], fmt[0], fmt[0], \"@\"]; break;\n\t\tcase 2: fmt = lat>-1 ? [fmt[0], fmt[0], fmt[0], fmt[1]] : [fmt[0], fmt[1], fmt[0], \"@\"]; break;\n\t\tcase 3: fmt = lat>-1 ? [fmt[0], fmt[1], fmt[0], fmt[2]] : [fmt[0], fmt[1], fmt[2], \"@\"]; break;\n\t\tcase 4: break;\n\t}\n\tvar ff = v > 0 ? fmt[0] : v < 0 ? fmt[1] : fmt[2];\n\tif(fmt[0].indexOf(\"[\") === -1 && fmt[1].indexOf(\"[\") === -1) return [l, ff];\n\tif(fmt[0].match(cfregex) != null || fmt[1].match(cfregex) != null) {\n\t\tvar m1 = fmt[0].match(cfregex2);\n\t\tvar m2 = fmt[1].match(cfregex2);\n\t\treturn chkcond(v, m1) ? [l, fmt[0]] : chkcond(v, m2) ? [l, fmt[1]] : [l, fmt[m1 != null && m2 != null ? 2 : 1]];\n\t}\n\treturn [l, ff];\n}\nfunction format(fmt,v,o) {\n\tif(o == null) o = {};\n\tvar sfmt = \"\";\n\tswitch(typeof fmt) {\n\t\tcase \"string\":\n\t\t\tif(fmt == \"m/d/yy\" && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = fmt;\n\t\t\tbreak;\n\t\tcase \"number\":\n\t\t\tif(fmt == 14 && o.dateNF) sfmt = o.dateNF;\n\t\t\telse sfmt = (o.table != null ? (o.table) : table_fmt)[fmt];\n\t\t\tbreak;\n\t}\n\tif(isgeneral(sfmt,0)) return general_fmt(v, o);\n\tif(v instanceof Date) v = datenum_local(v, o.date1904);\n\tvar f = choose_fmt(sfmt, v);\n\tif(isgeneral(f[1])) return general_fmt(v, o);\n\tif(v === true) v = \"TRUE\"; else if(v === false) v = \"FALSE\";\n\telse if(v === \"\" || v == null) return \"\";\n\treturn eval_fmt(f[1], v, o, f[0]);\n}\nfunction load_entry(fmt, idx) {\n\tif(typeof idx != 'number') {\n\t\tidx = +idx || -1;\nfor(var i = 0; i < 0x0188; ++i) {\nif(table_fmt[i] == undefined) { if(idx < 0) idx = i; continue; }\n\t\t\tif(table_fmt[i] == fmt) { idx = i; break; }\n\t\t}\nif(idx < 0) idx = 0x187;\n\t}\ntable_fmt[idx] = fmt;\n\treturn idx;\n}\nSSF.load = load_entry;\nSSF._table = table_fmt;\nSSF.get_table = function get_table() { return table_fmt; };\nSSF.load_table = function load_table(tbl) {\n\tfor(var i=0; i!=0x0188; ++i)\n\t\tif(tbl[i] !== undefined) load_entry(tbl[i], i);\n};\nSSF.init_table = init_table;\nSSF.format = format;\n};\nmake_ssf(SSF);\n/*global module */\nif(typeof module !== 'undefined' && typeof DO_NOT_EXPORT_SSF === 'undefined') module.exports = SSF;\n","import SSF from \"ssf\"\n\nimport { newArray, ModelDimension, ModelPivot, ModelMeasure, HeaderCell, CellSeries, ColumnSeries, Row, Column, DataCell } from './vis_primitives'\n\nconst tableModelCoreOptions = {\n  theme: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Theme\",\n    values: [\n      { 'Traditional': 'traditional' },\n      { 'Looker': 'looker' },\n      { 'Contemporary': 'contemporary' },\n      { 'Use custom theme': 'custom'}\n    ],\n    default: \"traditional\",\n    order: 1,\n  },\n  customTheme: {\n    section: \"Theme\",\n    type: \"string\",\n    label: \"Load custom CSS from:\",\n    default: \"\",\n    order: 2,\n  },\n  layout: {\n    section: \"Theme\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Layout\",\n    values: [\n      { 'Even': 'fixed' },\n      { 'Auto': 'auto' }\n    ],\n    default: \"fixed\",\n    order: 3,\n  },\n  columnOrder: {},\n  rowSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Row Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 1,\n  },\n  colSubtotals: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Col Subtotals\",\n    display_size: 'half',\n    default: false,\n    order: 2,\n  },\n  spanRows: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Dims\",\n    display_size: 'half',\n    default: true,\n    order: 3,\n  },\n  spanCols: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Merge Headers\",\n    display_size: 'half',\n    default: true,\n    order: 4,\n  },\n  sortColumnsBy: {\n    section: \"Table\",\n    type: \"string\",\n    display: \"select\",\n    label: \"Sort Columns By\",\n    values: [\n      { 'Pivots': 'getSortByPivots' },\n      { 'Measures': 'getSortByMeasures' }\n    ],\n    default: \"pivots\",\n    order: 6,\n  },\n  useViewName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Include View Name\",\n    default: false,\n    order: 7,\n  },\n  useHeadings: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Headings\",\n    default: false,\n    order: 8,\n  },\n  useShortName: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Use Short Name (from model tags)\",\n    default: false,\n    order: 9,\n  },\n  groupVarianceColumns: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Group Variance Columns\",\n    default: false,\n    order: 10,\n  },\n  indexColumn: {\n    section: \"Dimensions\",\n    type: \"boolean\",\n    label: \"Use Last Field Only\",\n    default: false,\n    order: 0,\n  },\n  transposeTable: {\n    section: \"Table\",\n    type: \"boolean\",\n    label: \"Transpose\",\n    default: false,\n    order: 100,\n  },\n}\n/**\n * Represents an \"enriched data object\" with additional methods and properties for data vis\n * Takes the data, config and queryResponse objects as inputs to the constructor\n */\nclass VisPluginTableModel {\n  /**\n   * Build the LookerData object\n   * @constructor\n   * \n   * - TODO: add new column series\n   * - TODO: Get table column groups\n   * \n   * @param {*} lookerData \n   * @param {*} queryResponse \n   * @param {*} config \n   */\n  constructor(lookerData, queryResponse, config) {\n    this.visId = 'report_table'\n    this.config = config\n\n    this.headers = []\n    this.dimensions = []\n    this.measures = []\n    this.columns = []\n    this.data = []\n    this.subtotals_data = {}\n\n    this.transposed_headers = []\n    this.transposed_columns = []\n    this.transposed_data = []\n\n    this.pivot_fields = []\n    this.pivot_values = typeof queryResponse.pivots !== 'undefined' ? queryResponse.pivots : []\n    this.variances = []\n    this.column_series = []\n\n    this.firstVisibleDimension = ''\n\n    this.colspan_values = {}\n    this.rowspan_values = {}\n\n    this.useIndexColumn = config.indexColumn || false\n    this.useHeadings = config.useHeadings || false\n    this.useShortName = config.useShortName || false\n    this.useViewName = config.useViewName || false\n    this.addRowSubtotals = config.rowSubtotals || false\n    this.addSubtotalDepth = parseInt(config.subtotalDepth)|| this.dimensions.length - 1\n    this.addColSubtotals = config.colSubtotals || false\n    this.spanRows = false || config.spanRows\n    this.spanCols = false || config.spanCols\n    this.sortColsBy = config.sortColumnsBy || 'getSortByPivots' // matches to Column methods: getSortByPivots(), getSortByMeasures)\n    this.fieldLevel = 0 // set in addPivotsAndHeaders()\n    this.groupVarianceColumns = config.groupVarianceColumns || false\n\n    this.hasTotals = typeof queryResponse.totals_data !== 'undefined' ? true : false\n    this.calculateOthers = typeof queryResponse.truncated !== 'undefined' ? queryResponse.truncated : false \n    this.hasSubtotals = typeof queryResponse.subtotals_data !== 'undefined' ? true : false\n    this.hasRowTotals = queryResponse.has_row_totals || false\n    this.hasPivots = typeof queryResponse.pivots !== 'undefined' ? true : false\n    this.hasSupers = typeof queryResponse.fields.supermeasure_like !== 'undefined' ? Boolean(queryResponse.fields.supermeasure_like.length) : false\n\n    this.transposeTable = config.transposeTable || false\n\n    var col_idx = 0\n    this.addPivotsAndHeaders(queryResponse)\n    this.addDimensions(queryResponse, col_idx)\n    this.addMeasures(queryResponse, col_idx)\n\n    this.checkVarianceCalculations()\n    if (this.useIndexColumn) { this.addIndexColumn(queryResponse) }\n    if (this.hasSubtotals) { this.checkSubtotalsData(queryResponse) }\n\n    this.addRows(lookerData)\n    this.addColumnSeries()\n\n    if (this.hasTotals) { this.buildTotals(queryResponse) }\n    if (this.spanRows) { this.setRowSpans() }\n    if (this.addRowSubtotals) { this.addSubTotals() }\n    if (this.addColSubtotals && this.pivot_fields.length === 2) { this.addColumnSubTotals() }\n    if (this.variances) { this.addVarianceColumns() }\n\n    // this.addColumnSeries()    // TODO: add column series for generated columns (eg column subtotals)\n    this.sortColumns()\n    this.columns.forEach(column => column.setHeaderCellLabels())\n    if (this.spanCols) { this.setColSpans() }\n    this.applyFormatting()\n\n    if (this.transposeTable) { \n      this.transposeDimensionsIntoHeaders()\n      this.transposeRowsIntoColumns() \n      this.transposeColumnsIntoRows()\n    }\n\n    console.log('Table in progress:', this)\n    return\n\n    this.validateConfig()\n    // this.getTableColumnGroups() \n  }\n\n  static getCoreConfigOptions() {\n    return tableModelCoreOptions\n  }\n\n  /**\n   * Hook to be called by a Looker custom vis, for example:\n   *    this.trigger('registerOptions', VisPluginTableModel.getConfigOptions())\n   * \n   * Returns a new config object, combining the core options with dynamic options based on available dimensions and measures\n   */\n  getConfigOptions() {\n    var newOptions = tableModelCoreOptions\n\n    var subtotal_options = []\n    this.dimensions.forEach((dimension, i) => {\n      newOptions['label|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: dimension.label,\n        default: dimension.label,\n        order: i * 10 + 1,\n      }\n\n      newOptions['heading|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: 'Heading',\n        default: '',\n        order: i * 10 + 2,\n      }\n\n      newOptions['hide|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'boolean',\n        label: 'Hide',\n        display_size: 'third',\n        default: false,\n        order: i * 10 + 3,\n      }\n\n      if (i < this.dimensions.length - 1) {\n        var subtotal_option = {}\n        subtotal_option[dimension.label] = (i + 1).toString()\n        subtotal_options.push(subtotal_option)\n      }\n    })\n\n    newOptions['subtotalDepth'] = {\n      section: \"Table\",\n      type: \"string\",\n      label: \"Sub Total Depth\",\n      display: 'select',\n      values: subtotal_options,\n      default: \"1\",\n      order: 5,\n    }\n\n    this.measures.forEach((measure, i) => {\n      newOptions['label|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: measure.label,\n        default: measure.label,\n        order: 100 + i * 10 + 1,\n      }\n\n      newOptions['heading|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Heading for ' + measure.label,\n        default: '',\n        order: 100 + i * 10 + 2,\n      }\n\n      newOptions['style|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Style',\n        display: 'select',\n        values: [\n          {'Normal': 'normal'},\n          {'Black/Red': 'black_red'},\n          {'Subtotal': 'subtotal'},\n          {'Hidden': 'hide'}\n        ],\n        order: 100 + i * 10 + 3\n      }\n\n      var comparisonOptions = []\n      \n      if (measure.can_pivot) {\n        var pivotComparisons = []\n        this.pivot_fields.forEach((pivot_field, p) => {\n          if (this.pivot_fields.length === 1 || p === 1 || this.config.colSubtotals ) {\n            var option = {}\n            option['By ' + pivot_field.label] = pivot_field.name\n            pivotComparisons.push(option)\n          }\n        })\n        comparisonOptions = comparisonOptions.concat(pivotComparisons)\n      }\n\n      // measures, row totals and supermeasures\n      this.measures.forEach((comparisonMeasure, j) => {\n        var includeMeasure = measure.can_pivot === comparisonMeasure.can_pivot\n                              || \n                            this.hasRowTotals && !comparisonMeasure.is_table_calculation         \n        if (i != j && includeMeasure) {\n          var option = {}\n          option['Vs. ' + comparisonMeasure.label] = comparisonMeasure.name\n          comparisonOptions.push(option)\n        }\n      })\n      comparisonOptions.unshift({ '(none)': 'no_variance'})\n\n      newOptions['comparison|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Comparison',\n        display: 'select',\n        values: comparisonOptions,\n        order: 100 + i * 10 + 5\n      }\n\n      newOptions['switch|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Switch',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 6,\n      }\n\n      newOptions['var_num|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var #',\n        display_size: 'third',\n        default: true,\n        order: 100 + i * 10 + 7,\n      }\n\n      newOptions['var_pct|' + measure.name] = {\n        section: 'Measures',\n        type: 'boolean',\n        label: 'Var %',\n        display_size: 'third',\n        default: false,\n        order: 100 + i * 10 + 8,\n      }\n    })\n    return newOptions\n  }\n\n  /**\n   * - this.pivot_fields\n   * - this.headers\n   * @param {*} queryResponse \n   */\n  addPivotsAndHeaders(queryResponse) {\n    queryResponse.fields.pivots.forEach((pivot, i) => {\n      var pivot_field = new ModelPivot({ vis: this, queryResponseField: pivot })\n      this.pivot_fields.push(pivot_field)\n      this.headers.push({ type: 'pivot' + i, modelField: pivot_field })\n    })\n\n    var measureHeaders = this.useHeadings \n      ? [{ type: 'heading', modelField: { label: '(will be replaced by header for column)s' } }] \n      : []\n    \n    measureHeaders.push({ type: 'field', modelField: { label: '(will be replaced by field for column)' } })\n\n    if (this.sortColsBy === 'getSortByPivots') {\n      this.headers.push(...measureHeaders)\n    } else {\n      this.headers.unshift(...measureHeaders)\n    }\n\n    for (var i = 0; i < this.headers.length; i++) {\n      if (!this.headers[i] === 'field') {\n        this.fieldLevel = i\n        break\n      }\n    }\n  }\n\n  /**\n   * - this.dimensions\n   * - this.columns\n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addDimensions(queryResponse, col_idx) {\n    queryResponse.fields.dimension_like.forEach(dimension => {\n      var newDimension = new ModelDimension({\n        vis: this,\n        queryResponseField: dimension\n      })\n      newDimension.hide = this.useIndexColumn ? true : newDimension.hide\n      this.dimensions.push(newDimension)\n\n      var column = new Column(newDimension.name, this, newDimension) \n      column.idx = col_idx\n      column.sort.push(0)\n      this.headers.forEach(header => {\n        switch (header.type) {\n          case 'pivot0':\n          case 'pivot1':\n            var pivotField = new ModelPivot({ vis: this, queryResponseField: header.modelField })\n            var headerCell = new HeaderCell({ column: column, type: 'pivot', modelField: pivotField })\n            if (this.sortColsBy === 'getSortByMeasures') { headerCell.label = '' }\n            column.levels.push(headerCell)\n            column.sort.push(0)\n            break\n          case 'heading':\n            column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: newDimension }))\n            break\n          case 'field':\n            column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: newDimension }))\n            column.sort.push(col_idx)\n            break\n        }\n      })\n\n      this.columns.push(column)\n      col_idx += 10\n    })\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dimension = this.dimensions[i]\n      if (!dimension.hide) {\n        this.firstVisibleDimension = dimension.name\n        break\n      }\n    }\n  }\n\n  /**\n   * Registers measures with the VisPluginTableModel\n   * - this.measures\n   * - this.columns\n   * \n   * Uses this.applyVisToolsTags() to enrich column information\n   * \n   * @param {*} queryResponse \n   * @param {*} col_idx \n   */\n  addMeasures(queryResponse, col_idx) {\n    // add measures, list of ids\n    queryResponse.fields.measure_like.forEach(measure => {\n      var newMeasure = new ModelMeasure({\n        vis: this,\n        queryResponseField: measure,\n        can_pivot: true\n      })\n      this.measures.push(newMeasure) \n    })\n    \n    // add measures, list of full objects\n    if (this.hasPivots) {\n      this.pivot_values.forEach(pivot_value => {\n        var isRowTotal = pivot_value.key === '$$$_row_total_$$$'\n        this.measures.forEach((measure, m) => {\n          // for pivoted measures, skip table calcs for row totals \n          // if user wants a row total of a table calc, it must be defined as another table calc (in which case, it will be a supermeasure)\n          var include_measure = !isRowTotal || ( isRowTotal && !measure.is_table_calculation )\n          \n          if (include_measure) {\n            var column = new Column([pivot_value.key, measure.name].join('.'), this, measure)\n            column.pivoted = isRowTotal ? false : true\n            column.isRowTotal = isRowTotal\n            column.pivot_key = pivot_value.key\n            column.idx = col_idx\n            column.sort.push(isRowTotal ? 2 : 1)\n\n            var level_sort_values = []\n            this.headers.forEach(header => {\n              switch (header.type) {\n                case 'pivot0':\n                case 'pivot1':\n                  var label = isRowTotal ? '' : pivot_value.data[header.modelField.name]\n                  if (isRowTotal && header.type === 'pivot' + (this.pivot_fields.length - 1)) {\n                    label = 'Row Total'\n                  }\n                  column.levels.push(new HeaderCell({ \n                    column: column, \n                    type: 'pivot', \n                    modelField: { label: label },\n                    pivotData: pivot_value\n                  }))\n                  level_sort_values.push(pivot_value.sort_values[header.modelField.name])\n                  if (column.pivoted) {\n                    column.sort.push(pivot_value.sort_values[header.modelField.name])\n                  } else {\n                    column.sort.push(0)\n                  }\n                  break\n\n                case 'heading':\n                  column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: measure}))\n                  break\n\n                case 'field':\n                  column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: measure}))\n                  column.sort.push(m)\n                  break;\n              }\n            })\n\n            this.columns.push(column)\n            col_idx += 10\n          }\n        })\n      })\n    } else {\n      // noticeably simpler for flat tables!\n      this.measures.forEach(measure => {\n        var column = new Column(measure.name, this, measure)\n        column.sort.push(1)\n        column.idx = col_idx\n\n        try {\n          if (typeof this.config.columnOrder[column.id] !== 'undefined') {\n            column.pos = this.config.columnOrder[column.id]\n          } else {\n            column.pos = col_idx\n          }\n        }\n        catch {\n          column.pos = col_idx\n        }\n\n        this.headers.forEach(header => {\n          switch (header.type) {\n            case 'heading':\n              column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: measure}))\n              break\n\n            case 'field':\n              column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: measure}))\n              column.sort.push(column.pos)\n              break;\n          }\n        })\n\n        this.columns.push(column)\n        col_idx += 10\n      })\n    }\n    \n    // add supermeasures, if present\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      queryResponse.fields.supermeasure_like.forEach(supermeasure => {\n        var meas = new ModelMeasure({\n          vis: this,\n          queryResponseField: supermeasure,\n          can_pivot: false,\n        })\n        this.measures.push(meas) \n\n        var column = new Column(meas.name, this, meas)\n        column.sort.push(2)\n        this.headers.forEach(header => {\n          switch (header.type) {\n            case 'pivot0':\n            case 'pivot1':\n              column.levels.push(new HeaderCell({ column: column, type: 'pivot', modelField: { label: '' } }))\n              column.sort.push(1)\n              break\n            case 'heading':\n              column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: meas }))\n              break\n            case 'field':\n              column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: meas }))\n              column.sort.push(col_idx)\n              break\n          }\n        })\n        column.idx = col_idx\n        column.super = true\n\n        this.columns.push(column)\n        col_idx += 10\n      })\n    }\n  }\n\n   /**\n   * Update the VisPluginTableModel instace\n   * - this.variances\n   * \n   *  option is either 'no_variance' or a measure.name\n   */\n  checkVarianceCalculations() {\n    Object.keys(this.config).forEach(option => {\n      if (option.startsWith('comparison')) {\n        var baseline = option.split('|')[1]\n\n        var baseline_in_measures = false\n        this.measures.forEach(measure => {\n          if (baseline === measure.name) {\n            baseline_in_measures = true\n          }\n        })\n\n        if (baseline_in_measures) {\n          if (this.pivot_fields.map(pivot_field => pivot_field.name).includes(this.config[option])) {\n            var type = 'by_pivot'\n          } else {\n            var type = this.config[option] === 'no_variance' ? 'no_variance' : 'vs_measure'\n          }\n  \n          if (typeof this.config['switch|' + baseline] !== 'undefined') {\n            if (this.config['switch|' + baseline]) {\n              var reverse = true\n            } else {\n              var reverse = false\n            }\n          }\n  \n          this.variances.push({\n            baseline: baseline,\n            comparison: this.config[option],\n            type: type,\n            reverse: reverse\n          })\n        }\n      }\n    })\n  }\n\n  /**\n   * Creates the index column, a \"for display only\" column when the set of dimensions is reduced to\n   * a single column for reporting purposes.\n   */\n  addIndexColumn() {\n    var dimension = this.dimensions[this.dimensions.length - 1]\n    var dim_config_setting = this.config['hide|' + dimension.name]\n    var column = new Column('$$$_index_$$$', this, dimension)\n    column.sort.push(-1)\n    column.hide = dim_config_setting === true ? dim_config_setting : false\n\n    this.headers.forEach(header => {\n      switch (header.type) {\n        case 'pivot0':\n        case 'pivot1':\n          var pivotField = new ModelPivot({ vis: this, queryResponseField: header.modelField })\n          var headerCell = new HeaderCell({ column: column, type: 'pivot', modelField: pivotField })\n          if (this.sortColsBy === 'getSortByMeasures') { headerCell.label = '' }\n          column.levels.push(headerCell)\n          column.sort.push(0)\n          break\n        case 'heading':\n          column.levels.push(new HeaderCell({ column: column, type: 'heading', modelField: dimension }))\n          break\n        case 'field':\n          column.levels.push(new HeaderCell({ column: column, type: 'field', modelField: dimension }))\n          column.sort.push(0)\n          break\n      }\n    })\n    \n    this.columns.push(column)\n  }\n\n  /**\n   * this.subtotals_data\n   * @param {*} queryResponse \n   */\n  checkSubtotalsData(queryResponse) {\n    if (typeof queryResponse.subtotals_data[this.addSubtotalDepth] !== 'undefined') {\n      queryResponse.subtotals_data[this.addSubtotalDepth].forEach(lookerSubtotal => {\n        var visSubtotal = new Row('subtotal')\n\n        visSubtotal['$$$__grouping__$$$'] = lookerSubtotal['$$$__grouping__$$$']\n        var groups = ['Subtotal']\n        visSubtotal['$$$__grouping__$$$'].forEach(group => {\n          groups.push(lookerSubtotal[group].value)\n        })\n        visSubtotal.id = groups.join('|')\n\n        this.columns.forEach(column => {\n          visSubtotal.data[column.id] = (column.pivoted || column.isRowTotal) ? lookerSubtotal[column.modelField.name][column.pivot_key] : lookerSubtotal[column.id]\n\n          if (typeof visSubtotal.data[column.id] !== 'undefined') {\n            if (typeof visSubtotal.data[column.id].cell_style === 'undefined') {\n              visSubtotal.data[column.id].cell_style = ['total', 'subtotal']\n            } else {\n              visSubtotal.data[column.id].cell_style.concat(['total', 'subtotal'])\n            }\n            if (typeof column.modelField.style !== 'undefined') {\n              visSubtotal.data[column.id].cell_style = visSubtotal.data[column.id].cell_style.concat(column.modelField.style)\n            }\n            if (visSubtotal.data[column.id].value === null) {\n              visSubtotal.data[column.id].rendered = ''\n            }\n          }            \n        })\n        this.subtotals_data[visSubtotal.id] = visSubtotal\n      })\n    }\n  }\n\n  /**\n   * Populates this.data with Rows of data\n   * @param {*} lookerData \n   */\n  addRows(lookerData) {\n    lookerData.forEach((lookerRow, i) => {\n      var row = new Row('line_item')\n      row.id = this.dimensions.map(dimension => lookerRow[dimension.name].value).join('|')\n\n      this.columns.forEach(column => {\n        var cellValue = (column.pivoted || column.isRowTotal)? lookerRow[column.modelField.name][column.pivot_key] : lookerRow[column.id]\n        var cell = new DataCell(cellValue)\n\n        cell.rowid = row.id\n        cell.colid = column.id\n\n        if (column.modelField.type === 'dimension') {\n          cell.align = 'left'\n        }\n\n        if (column.modelField.type === 'measure') {\n          cell.cell_style.push('measure')\n        }\n\n        if (typeof column.modelField.style !== 'undefined') {\n          cell.cell_style = cell.cell_style.concat(column.modelField.style)\n        }\n\n        if (cell.value === null) {\n          cell.rendered = ''\n        }\n\n        if (column.modelField.is_turtle) {\n          var cell_series = new CellSeries({\n            column: column,\n            row: row,\n            sort_value: cell.sort_value,\n            series: {\n              keys: row.data[column.id]._parsed.keys,\n              values: row.data[column.id]._parsed.values\n            }\n          })\n          cell.value = cell_series\n          cell.rendered = cell_series.toString()\n        }\n\n        row.data[column.id] = cell\n      })\n\n      if (this.useIndexColumn) {\n        var last_dim = this.dimensions[this.dimensions.length - 1].name\n        last_dim = row.data[last_dim]\n\n        row.data['$$$_index_$$$'] = new DataCell({\n          value: last_dim.value,\n          rendered: last_dim.rendered,\n          html: last_dim.html,\n          cell_style: ['indent'],\n          align: 'left',\n          rowspan: 1\n        })\n      }\n\n      row.sort = [0, 0, i]\n      this.data.push(row)\n    })\n  }\n\n  /**\n   * Generate data series to support transposition\n   */\n  addColumnSeries() {\n    this.columns.forEach(column => {\n      var keys = []\n      var values = []\n      var types = []\n\n      this.data.forEach(row => {\n        keys.push(row.id)\n        values.push(row.data[column.id].value)\n        types.push(row.type)\n      })\n\n      var new_series = new ColumnSeries({\n        column: column,\n        is_numeric: column.modelField.is_numeric,\n        series: {\n          keys: keys,\n          values: values,\n          types: types\n        }\n      })\n      \n      column.series = new_series\n      this.column_series.push(new_series)\n    })\n  }\n\n  buildTotals(queryResponse) {\n    var totals_ = queryResponse.totals_data\n    var totalsRow = new Row('total')\n\n    this.columns.forEach(column => {\n      totalsRow.id = 'Total'\n\n      if (column.modelField.type === 'dimension') {\n        if ([this.firstVisibleDimension, '$$$_index_$$$'].includes(column.id)) {\n          var rowspan = 1\n          var colspan = this.useIndexColumn ? 1 : this.dimensions.filter(d => !d.hide).length\n        } else {\n          var rowspan = -1\n          var colspan = -1\n        }\n      } else {\n        var rowspan = 1\n        var colspan = 1\n      }\n      totalsRow.data[column.id] = new DataCell({ value: '', cell_style: ['total'], rowspan: rowspan, colspan: colspan })\n      \n      if (column.modelField.type === 'measure') {\n        var cellValue = (column.pivoted || column.isRowTotal) ? totals_[column.modelField.name][column.pivot_key] : totals_[column.id]\n        cellValue = new DataCell(cellValue)\n\n        if (typeof cellValue.rendered === 'undefined' && typeof cellValue.html !== 'undefined' ){ // totals data may include html but not rendered value\n          cellValue.rendered = this.getRenderedFromHtml(cellValue)\n        }\n        \n        cellValue.cell_style = ['total']\n        totalsRow.data[column.id] = cellValue\n        if (typeof totalsRow.data[column.id].links !== 'undefined') {\n          totalsRow.data[column.id].links.forEach(link => {\n            link.type = \"measure_default\"\n          })\n        }       \n      }\n    })\n\n    if (this.useIndexColumn) {\n      totalsRow.data['$$$_index_$$$'].value = 'TOTAL'\n      totalsRow.data['$$$_index_$$$'].align = 'left'\n      totalsRow.data['$$$_index_$$$'].colspan = this.dimensions.filter(d => !d.hide).length\n    } else {\n      if (this.firstVisibleDimension) {\n        totalsRow.data[this.firstVisibleDimension].value = 'TOTAL'\n        totalsRow.data[this.firstVisibleDimension].align = 'left'\n      }\n    }\n    totalsRow.sort = [1, 0, 0]\n    this.data.push(totalsRow)\n\n    // Including an Others row: note the huge assumption in calculating a very simple average!\n    // This will prevent a data gap distracting users, and may indicate whether the Others data\n    // is \"higher or lower\" than the top x items. But it is not an accurate number.\n    if (this.calculateOthers) {\n      var othersRow = new Row('line_item')\n      othersRow.id = 'Others'\n      this.columns.forEach(column => {\n        var othersValue = null\n        var othersStyle = []\n        var totalValue = (column.pivoted || column.isRowTotal) ? totals_[column.modelField.name][column.pivot_key] : totals_[column.id]\n        \n        if (column.modelField.type === 'measure') {\n          if (othersValue = ['sum', 'count'].includes(column.modelField.calculation_type)) {\n            othersValue = totalValue.value - column.series.series.sum\n          } else {\n            othersValue = (totalValue.value + column.series.series.avg) / 2\n            othersStyle.push('estimate')\n            if (['count', 'count_distinct'].includes(column.modelField.calculation_type)) {\n              othersValue = Math.round(othersValue)\n            }\n          }\n        }\n\n        if (othersValue) {\n          var formatted_value = column.modelField.value_format === '' \n                ? othersValue.toString() \n                : SSF.format(column.modelField.value_format, othersValue)\n          othersRow.data[column.id] = new DataCell({ value: othersValue, rendered: formatted_value, cell_style: othersStyle })\n        } else {\n          othersRow.data[column.id] = new DataCell()\n        }\n      })\n\n      if (this.useIndexColumn) {\n        othersRow.data['$$$_index_$$$'].value = 'Others'\n        othersRow.data['$$$_index_$$$'].align = 'left'\n        othersRow.data['$$$_index_$$$'].cell_style.push('indent')\n      } else {\n        if (this.firstVisibleDimension) {\n          othersRow.data[this.firstVisibleDimension].value = 'Others'\n          othersRow.data[this.firstVisibleDimension].align = 'left'\n        }\n      }\n      othersRow.sort = [1, -1, -1] \n      this.data.push(othersRow)\n    }\n    \n    this.sortData()\n  }\n\n  /**\n   * 1. Build list of leaves\n   * 2. Build list of tiers (and initialise span_tracker)\n   * 3. Backwards <--- leaves\n   *    4. Check for resets (n/a for colspans)\n   *    5. Forwards ---> tiers\n   *        6. Match: mark invisible (span_value = -1). Increment the span_tracker.\n   *        7. Diff: set span_value from span_tracker. Partial reset and continue.\n   */\n  setRowSpans () {\n    var leaves = []\n    var tiers = []\n    var span_values = this.rowspan_values\n    var span_tracker = {}\n\n    // 1)\n    leaves = this.data\n\n    // 2)\n    tiers = this.dimensions.filter(d => !d.hide)\n    tiers.forEach(tier => {\n      span_tracker[tier.id] = 1\n    })\n\n    // Loop backwards through leaves\n    for (var l = leaves.length - 1; l >= 0 ; l--) {\n      var leaf = leaves[l]\n\n      // Totals/subtotals rows: full reset and continue\n      if (leaf.type !== 'line_item' ) {\n        tiers.forEach(tier => {\n          span_tracker[tier.name] = 1\n        })\n        continue;\n      }\n\n      // Loop fowards through the tiers\n      span_values[leaf.id] = {}\n      for (var t = 0; t < tiers.length; t++) {\n        var tier = tiers[t]\n        var this_tier_value = leaf.data[tier.name].value\n        var neighbour_value = l > 0 ? leaves[l - 1].data[tier.name].value : null\n\n        // Match: mark invisible (span_value = -1). Increment the span_tracker.\n        if (l > 0 && this_tier_value === neighbour_value) {\n          span_values[leaf.id][tier.name] = -1\n          leaf.data[tier.name].rowspan = -1\n          span_tracker[tier.name] += 1\n        } else {\n        // Different: set span_value from span_tracker. Partial reset and continue\n          for (var t_ = t; t_ < tiers.length; t_++) {\n            var tier_ = tiers[t_]\n            span_values[leaf.id][tier_.name] = span_tracker[tier_.name]\n            leaf.data[tier_.name].rowspan = span_tracker[tier_.name]\n            span_tracker[tier_.name] = 1\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Generates subtotals values\n   * \n   * 1. Build array of subtotal groups\n   *    - Based on the joined values of each row's dimensions (up to the configured subtotal depth)\n   *    - Update each row's sort value with its subtotal group number\n   * 2. Generate data rows\n   *    - For each subtotal group, create a new Row\n   *      - For each Column\n   *        - Set the style\n   *        - In the index dimension and the firstVisibleDimension, put the subtotal label\n   *        - If it's a measure \n   *          - Count & total all rows of type 'line_item'\n   *          - Use total or average value based on calculation type\n   *          - Set as blank if it's a string type\n   *            // This is a gap in functionality. Ideally subtotal would replicate the logic that generated\n   *            // the string values in the line items.\n   */\n  addSubTotals () { \n    var depth = this.addSubtotalDepth\n\n    // BUILD GROUPINGS / SORT VALUES\n    var subTotalGroups = []\n    var latest_group = []\n    this.data.forEach((row, i) => {    \n      if (row.type !== 'total') {\n        var group = []\n        for (var g = 0; g < depth; g++) {\n          var dim = this.dimensions[g].name\n          group.push(row.data[dim].value)\n        }\n        if (group.join('|') !== latest_group.join('|')) {\n          subTotalGroups.push(group)\n          latest_group = group\n        }\n        row.sort = [0, subTotalGroups.length-1, i]\n      }\n      \n      if (row.id === 'Others' && row.type === 'line_item') {\n        row.hide = true\n      }\n    })\n\n    // GENERATE DATA ROWS FOR SUBTOTALS\n    subTotalGroups.forEach((subTotalGroup, s) => {\n      var subtotalRow = new Row('subtotal')\n      var dims = subTotalGroup.join('|') ? subTotalGroup.join('|') : 'Others'\n      subtotalRow.id = ['Subtotal', dims].join('|')\n\n      this.columns.forEach(column => {\n        if (column.modelField.type === 'dimension') {\n          if ([this.firstVisibleDimension, '$$$_index_$$$'].includes(column.id)) {\n            var rowspan = 1\n            var colspan = this.useIndexColumn ? 1 : this.dimensions.filter(d => !d.hide).length\n          } else {\n            var rowspan = -1\n            var colspan = -1\n          }\n          var cell = new DataCell({ 'cell_style': ['total', 'subtotal'], align: 'left', rowspan: rowspan, colspan: colspan })\n          if (column.id === '$$$_index_$$$' || column.id === this.firstVisibleDimension ) {\n            cell.value = subTotalGroup.join(' | ') ? subTotalGroup.join(' | ') : 'Others'\n            cell.rendered = cell.value\n          }\n          subtotalRow.data[column.id] = cell\n        }\n\n        if (column.modelField.type == 'measure') {\n          if (Object.entries(this.subtotals_data).length > 0 && subtotalRow.id !== 'Subtotal|Others') { // if subtotals already provided in Looker's queryResponse\n            var cell = new DataCell({ ...subtotalRow.data[column.id], ...this.subtotals_data[subtotalRow.id].data[column.id] })\n            cell.cell_style = ['subtotal', 'total']\n            subtotalRow.data[column.id] = cell\n          } else {\n            // var cellKey = column.pivoted ? [column.pivot_key, column.modelField.name].join('.') : column.id\n            var subtotal_value = 0\n            var subtotal_items = 0\n            var rendered = ''\n            this.data.forEach(data_row => {\n              if (data_row.type == 'line_item' && data_row.sort[1] == s) { // data_row.sort[1] == s checks whether its part of the current subtotal group\n                var value = data_row.data[column.id].value\n                if (Number.isFinite(value)) {\n                  subtotal_value += value\n                  subtotal_items++\n                }\n              } \n            })\n            \n            if (column.modelField.calculation_type === 'average' && subtotal_items > 0) {\n              subtotal_value = subtotal_value / subtotal_items\n            }\n            if (subtotal_value) {\n              rendered = column.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(column.modelField.value_format, subtotal_value)\n            }\n            if (column.modelField.calculation_type === 'string') {\n              subtotal_value = ''\n              rendered = ''\n            } \n\n            var cell = new DataCell({\n              value: subtotal_value,\n              rendered: rendered,\n              cell_style: ['subtotal', 'total']\n            })\n            subtotalRow.data[column.id] = cell\n          }\n        }\n      })\n      subtotalRow.sort = [0, s, 9999]\n      this.data.push(subtotalRow)\n    })\n    this.sortData()\n    this.hasSubtotals = true\n  }\n\n  /**\n   * Generates new column subtotals, where 2 pivot levels have been used\n   * // TODO: Could also have subtotals for 1 pivot tables sorted by measure\n   * \n   * 1. Derive the new column definitions\n   * 2. Use the new definitions to add subtotal columns to table.columns\n   * 3. Calculate the column subtotal values\n   */\n  addColumnSubTotals () {\n    var subtotalColumns = []\n\n    // Get a list of unique top-level pivot values in the pivot_values object\n    var pivots = []\n    var pivot_dimension = this.pivot_fields[0].name\n    this.pivot_values.forEach(pivot_value => {\n      var p_value = pivot_value['data'][pivot_dimension]\n      if (p_value !== null) { pivots.push(p_value) }\n    })\n    pivots = [...new Set(pivots)]\n\n\n    // DERIVE THE NEW COLUMN DEFINITIONS\n    pivots.forEach(pivot => {\n      this.measures.forEach((measure, m) => {\n        if (measure.can_pivot) {\n          var subtotalColumn = new Column(['$$$_subtotal_$$$', pivot, measure.name].join('.'), this, measure)\n          subtotalColumn.pivoted = true\n          subtotalColumn.subtotal = true\n          subtotalColumn.pivot_key = [pivot, '$$$_subtotal_$$$'].join('|')\n          subtotalColumn.subtotal_data = {\n            pivot: pivot,\n            measure_idx: m,\n            columns: [],\n          }\n  \n          this.columns.forEach((column, i) => {  \n            var columnPivotValue = null\n            for (var i = 0; i < column.levels.length; i++) {\n              if (column.levels[i].type === 'pivot') {\n                columnPivotValue = column.levels[i].modelField.label\n                break\n              }\n            }\n\n            if (column.pivoted && columnPivotValue === pivot) {\n              if (column.modelField.name === measure.name) {\n                subtotalColumn.subtotal_data.columns.push(column)\n              }\n            }\n          })\n          subtotalColumns.push(subtotalColumn)\n        }\n      })\n    })\n\n    // USE THE NEW DEFINITIONS TO ADD SUBTOTAL COLUMNS TO TABLE.COLUMNS\n    subtotalColumns.forEach((subtotalColumn, s) => {\n      subtotalColumn.sort.push(1)\n\n      this.headers.forEach((header, i) => {\n        switch (header.type) {\n          case 'pivot0':\n            var sort_value_from_column = subtotalColumn.subtotal_data.columns[0].levels[i].pivotData.sort_values[header.modelField.name]\n            subtotalColumn.levels.push(new HeaderCell({ column: subtotalColumn, type: 'pivot', modelField: {\n              name: this.pivot_fields[0].name,\n              label: subtotalColumn.subtotal_data.pivot,\n            }}))\n            subtotalColumn.sort.push(sort_value_from_column)\n            break\n\n          case 'pivot1':\n            subtotalColumn.levels.push(new HeaderCell({ column: subtotalColumn, type: 'pivot', modelField: {\n              name: 'subtotal',\n              label: 'Subtotal',\n            }}))\n            subtotalColumn.sort.push(9999)\n            break\n\n          case 'heading':\n            subtotalColumn.levels.push(new HeaderCell({ column: subtotalColumn, type: 'heading', modelField: subtotalColumn.modelField}))\n            break\n\n          case 'field':\n            subtotalColumn.levels.push(new HeaderCell({ column: subtotalColumn, type: 'field', modelField: subtotalColumn.modelField}))\n            if (this.sortColsBy === 'getSortByPivots') {\n              subtotalColumn.sort.push(subtotalColumn.subtotal_data.measure_idx)\n            } else {\n              subtotalColumn.sort.push(10000 + s)\n            }\n            break\n        }\n      })\n      this.columns.push(subtotalColumn)\n    })\n\n    // CALCULATE COLUMN SUB TOTAL VALUES\n    this.data.forEach(row => {\n      subtotalColumns.forEach(subtotalColumn => {\n        var subtotal_value = 0\n        subtotalColumn.subtotal_data.columns.forEach(column => { // subtotalColumn.columns i.e. the individual columns that are aggregated into a single subtotal columns\n          subtotal_value += row.data[column.id].value\n        })\n        row.data[subtotalColumn.id] = new DataCell({\n          value: subtotal_value,\n          rendered: subtotalColumn.modelField.value_format === '' ? subtotal_value.toString() : SSF.format(subtotalColumn.modelField.value_format, subtotal_value),\n          cell_style: ['subtotal']\n        })\n        if (['subtotal', 'total'].includes(row.type)) { \n          row.data[subtotalColumn.id].cell_style.push('total') \n        }\n      })\n    })\n\n    // return subtotals\n  }\n\n  /**\n   * Variance calculation function to enable addVariance()\n   * @param {*} value_format \n   * @param {*} id \n   * @param {*} calc \n   * @param {*} baseline \n   * @param {*} comparison \n   */\n  calculateVariance (value_format, id, calc, baseline, comparison) {\n    this.data.forEach(row => {\n      var baseline_value = row.data[baseline.id].value\n      var comparison_value = row.data[comparison.id].value\n      if (calc === 'absolute') {\n        var cell = new DataCell({\n          value: baseline_value - comparison_value,\n          rendered: value_format === '' ? (baseline_value - comparison_value).toString() : SSF.format(value_format, (baseline_value - comparison_value)),\n          cell_style: []\n        })\n      } else {\n        var value = (baseline_value - comparison_value) / Math.abs(comparison_value)\n        if (!isFinite(value)) {\n          var cell = new DataCell({\n            value: null,\n            rendered: '∞',\n            cell_style: []\n          })\n        } else {\n          var cell = new DataCell({\n            value: value,\n            rendered: SSF.format('#0.00%', value),\n            cell_style: []\n          })\n        }\n      }\n      if (row.type == 'total' || row.type == 'subtotal') {\n        cell.cell_style.push('total')\n      }\n      if (row.type === 'subtotal') {\n        cell.cell_style.push('subtotal')\n      }\n      if (cell.value < 0) {\n        cell.cell_style.push('red')\n      }\n      row.data[id] = cell\n    })\n  }\n\n  createVarianceColumn (colpair) {\n    if (!this.config.colSubtotals && colpair.variance.baseline.startsWith('$$$_subtotal_$$$')) {\n      console.log('Cannot calculate variance of column subtotals if subtotals disabled.')\n      return\n    }\n    var id = ['$$$_variance_$$$', colpair.calc, colpair.variance.baseline, colpair.variance.comparison].join('|')\n    var baseline = this.getColumnById(colpair.variance.baseline)\n    var comparison = this.getColumnById(colpair.variance.comparison)\n    var column = new Column(id, this, baseline.modelField)\n    column.isVariance = true\n\n    if (colpair.calc === 'absolute') {\n      column.variance_type = 'absolute'\n      column.idx = baseline.idx + 1\n      column.pos = baseline.pos + 1\n      column.sort = [...baseline.sort, 1]\n      column.hide = !this.config['var_num|' + baseline.modelField.name]\n    } else {\n      column.variance_type = 'percentage'\n      column.idx = baseline.idx + 2\n      column.pos = baseline.pos + 2\n      column.sort = [...baseline.sort, 2]\n      column.unit = '%'\n      column.hide = !this.config['var_pct|' + baseline.modelField.name]\n    }\n\n    if (typeof this.config.columnOrder[column.id] !== 'undefined') {\n      column.pos = this.config.columnOrder[column.id]\n    } \n\n    column.pivoted = baseline.pivoted\n    column.super = baseline.super\n    column.pivot_key = ''\n\n    if (this.groupVarianceColumns) {    \n        column.sort[0] = 1.5\n    }\n\n    this.headers.forEach((header, i) => {\n      switch (header.type) {\n        case 'pivot0':\n        case 'pivot1':\n          var label = baseline.getHeaderCellLabelByType(header.type)\n          var headerCell = new HeaderCell({ column: column, type: 'pivot', modelField: { label: label } })\n          column.levels[i] = headerCell\n          break\n        case 'heading':\n          var headerCell = new HeaderCell({ column: column, type: 'heading', modelField: baseline.modelField })\n          column.levels[i] = headerCell\n          break\n        case 'field':\n          var headerCell = new HeaderCell({ column: column, type: 'field', modelField: baseline.modelField })\n          column.levels[i] = headerCell\n          break;\n      }\n    })\n\n    this.columns.push(column)\n    if (colpair.variance.reverse) {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, comparison, baseline)\n    } else {\n      this.calculateVariance(baseline.modelField.value_format, id, colpair.calc, baseline, comparison)\n    }\n  }\n\n  /**\n   * Function to add variance columns directly within table vis rather than requiring a table calc\n   * \n   * Takes list of variances configured by the user, and generates a list of column-pairs necessary\n   * to calculate those variances. There is at least one baseline-comparison pair per variance.\n   * Comparing different measures in a pivoted table will calculate a variance pair per pivot value.\n   * Comparing the same measure across pivots will calculate one pair less than there are pivots e.g.\n   * if comparing this year to last year, there are two \"Reporting Period\" values but only one variance.\n   */\n  addVarianceColumns () {\n    var variance_colpairs = []\n    var calcs = ['absolute', 'percent']\n    \n    Object.keys(this.variances).forEach(v => {\n      var variance = this.variances[v]\n      if (variance.comparison !== 'no_variance') {          \n        if (variance.type === 'vs_measure') {\n          if (!this.hasPivots) {\n            calcs.forEach(calc => {\n              variance_colpairs.push({\n                variance: variance,\n                calc: calc\n              })\n            })\n          } else {\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                calcs.forEach(calc => {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [pivot_value.key, variance.comparison].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                })\n              }\n            })\n          }\n        } else if (variance.type === 'by_pivot') { \n          if (this.pivot_fields.length === 1 || this.pivot_fields[1].name === variance.comparison) {\n            this.pivot_values.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                if (!pivot_value.is_total) {\n                  variance_colpairs.push({\n                    calc: calc,\n                    variance: {\n                      baseline: [pivot_value.key, variance.baseline].join('.'),\n                      comparison: [this.pivot_values[index].key, variance.baseline].join('.'),\n                      reverse: variance.reverse,\n                      type: variance.type\n                    }\n                  })\n                }\n              })\n            })\n          } else { // top pivot value - variance by subtotal\n            var top_level_pivots = []\n            this.pivot_values.forEach(pivot_value => {\n              if (!pivot_value.is_total) {\n                var value = pivot_value.data[this.pivot_fields[0].name]\n                if (!top_level_pivots.includes(value)) {\n                  top_level_pivots.push(value)\n                }\n              }\n            })\n            top_level_pivots.slice(1).forEach((pivot_value, index) => {\n              calcs.forEach(calc => {\n                variance_colpairs.push({\n                  calc: calc,\n                  variance: {\n                    baseline: ['$$$_subtotal_$$$', pivot_value, variance.baseline].join('.'),\n                    comparison: ['$$$_subtotal_$$$', top_level_pivots[index], variance.baseline].join('.'),\n                    reverse: variance.reverse,\n                    type: variance.type\n                  }\n                })\n              })\n            })\n          } \n        }\n      }\n    })\n\n    variance_colpairs.forEach(colpair => {\n      this.createVarianceColumn(colpair)\n    })\n  }\n\n  compareSortArrays (a, b) {\n    var depth = Math.max(a.sort.length, b.sort.length)\n    for(var i = 0; i < depth; i++) {\n        var a_value = typeof a.sort[i] !== 'undefined' ? a.sort[i] : 0\n        var b_value = typeof b.sort[i] !== 'undefined' ? b.sort[i] : 0\n        if (a_value > b_value) { return 1 }\n        if (a_value < b_value) { return -1 }\n    }\n    return -1\n  }\n  /**\n   * Sorts the rows of data, then updates vertical cell merge \n   * \n   * Rows are sorted by three values:\n   * 1. Section\n   * 2. Subtotal Group\n   * 3. Row Value (currently based only on original row index from the Looker data object)\n   */\n  sortData () {\n    this.data.sort(this.compareSortArrays)\n    if (this.spanRows) { this.setRowSpans() }\n  }\n\n  /**\n   * Sorts columns by config option\n   * \n   * Depending on the colsSortBy option, columns are sorted by either:\n   * \n   * Sort by Pivots (default)\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Pivot sort values\n   * 3. Original column number for the Looker data obect [last item in sort value array]\n   * \n   * Sort by Measures\n   * 1. Section: Index, Dimensions, Measures, or Supermeasures\n   * 2. Original Column Number\n   * 3. Measure sort values [remainder of sort value array]\n   * \n   * Note that column sort values can be over-riden by manual drag'n'drop \n   */\n  sortColumns () {\n    this.columns.sort(this.compareSortArrays)\n  }\n\n  /**\n   * 1. Build list of leaves\n   * 2. Build list of tiers (and initialise span_tracker)\n   * 3. Backwards <--- leaves\n   *    4. Check for resets (n/a for colspans)\n   *    5. Forwards ---> tiers\n   *        6. Match: mark invisible (span_value = -1). Increment the span_tracker.\n   *        7. Diff: set span_value from span_tracker. Partial reset and continue.\n   */\n  setColSpans () {\n    var leaves = []\n    var tiers = []\n    var span_values = this.colspan_values\n    var span_tracker = {}\n    \n    // 1)\n    var columns = this.columns.filter(c => !c.hide)\n\n    columns.forEach(column => {\n      var leaf = {\n        id: column.id,\n        data: column.getHeaderData()\n      }\n      leaves.push(leaf)\n    })\n\n    // 2)\n    tiers = this.headers\n    tiers.forEach(tier => {\n      span_tracker[tier.type] = 1\n    })\n\n    // 3)\n    for (var l = leaves.length - 1; l >= 0; l--) {\n      var leaf = leaves[l]\n      span_values[leaf.id] = {}\n\n      // 5)\n      for (var t = 0; t < tiers.length; t++) {\n        var tier = tiers[t]\n        var this_tier_value = leaf.data[tier.type].label\n        var neighbour_value = l > 0 ? leaves[l - 1].data[tier.type].label : null\n\n        // 6) \n        if (l > 0 && this_tier_value === neighbour_value) {\n          span_values[leaf.id][tier.type] = -1;\n          span_tracker[tier.type] += 1;\n        } else {\n        // 7) \n          for (var t_ = t; t_ < tiers.length; t_++) {\n            var tier_ = tiers[t_]\n            span_values[leaf.id][tier_.type] = span_tracker[tier_.type];\n            span_tracker[tier_.type] = 1\n          }\n          break;\n        }\n      }\n    }\n\n    // row spans are set against the cell values (can be many individual cells)\n    // col spans are set against the Column object (can only be a few headers)\n    this.columns.forEach(column => {\n      if (typeof span_values[column.id] !== 'undefined') {\n        column.colspans = span_values[column.id]\n      }\n    })\n  }\n\n  /**\n   * Applies conditional formatting (red if negative) to all measure columns set to use it \n   */\n  applyFormatting() {\n    this.columns.forEach(column => {\n      var config_setting = this.config['style|' + column.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        switch (config_setting) {\n          case 'black_red':\n            this.data.forEach(row => {\n              if (row.data[column.id].value < 0) {\n                row.data[column.id].cell_style.push('red')\n              }\n            })\n            break\n        }\n      }\n    })\n  }\n\n  transposeDimensionsIntoHeaders () {\n    this.transposed_headers = this.columns\n      .filter(c => c.modelField.type !== 'measure')\n      .filter(c => !c.hide)\n      .map(c => { return { type: 'field', modelField: c.modelField } })\n\n    console.log('transposed_headers', this.transposed_headers)\n  }\n\n  /**\n   * For rendering a transposed table i.e. with the list of measures on the left hand side\n   * 1. Add an index column per header\n   * 2. Add a transposed column for every data row\n   */\n  transposeRowsIntoColumns () {\n    var default_colspan = this.transposed_headers\n      .map(header => {\n        var colspans = {}\n        colspans[header.modelField.name] = 1\n      })\n    console.log('default_colspan', default_colspan)\n\n    var index_parent = {\n      align: 'left',\n      type: 'transposed_table_index',\n      is_table_calculation: false\n    }\n\n    // One \"index column\" per header row from original table\n    this.headers.forEach(header => {\n      var column = new Column(header.type, this, index_parent)\n\n      this.transposed_headers.forEach(header => {\n        var headerCell = new HeaderCell({ column: column, type: header.type, label: header.modelField.label, modelField: header.modelField })\n        column.levels.push(headerCell)\n      })\n      // transposed_column.levels[0] = new HeaderCell({ column: transposed_column, queryResponseField: { name: pivot_field.name, label: pivot_field.label } })\n      this.transposed_columns.push(column)\n    })\n\n    console.log('this.transposed_columns, index cols only so far', this.transposed_columns)\n    \n    var measure_parent = {\n      align: 'right',\n      type: 'transposed_table_measure',\n      is_table_calculation: false\n    }\n  \n    // One column per data row (line items, subtotals, totals)\n    for (var h = 0; h < this.data.length; h++) {\n      var sourceRow = this.data[h]\n      var transposedColumn = new Column(sourceRow.id, this, measure_parent)\n\n      if (sourceRow.type === 'line_item') {\n        var colspan_values = {}\n        var levels = []\n        this.transposed_headers.forEach(header => {\n          colspan_values = this.rowspan_values[sourceRow.id]\n          levels.push(sourceRow.data[header.modelField.name].value)\n        })\n      } else if (sourceRow.type === 'subtotal') {\n        var colspan_values = default_colspan\n        var levels = newArray(this.transposed_headers.length, new HeaderCell({ column: transposedColumn, type: 'total', modelField: {} }))\n      } else if (sourceRow.type === 'total') {\n        var colspan_values = default_colspan\n        var levels = newArray(this.transposed_headers.length, new HeaderCell({ column: transposedColumn, type: 'total', modelField: {} }))\n      }\n\n      transposedColumn.transposed = true\n      transposedColumn.colspan_values = colspan_values\n      transposedColumn.levels = levels\n      this.transposed_columns.push(transposedColumn)\n    }\n  }\n\n  transposeColumnsIntoRows () { \n    this.columns.filter(c => c.modelField.type === 'measure').forEach(column => {\n      var transposed_data = {}\n\n      // MEASURE FIELDS // every measure column in original table is converted to a data row\n      this.data.forEach(row => {\n        if (typeof row.data[column.id] !== 'undefined') {\n          transposed_data[row.id] = row.data[column.id]\n          transposed_data[row.id]['align'] = column.modelField.align\n          transposed_data[row.id]['cell_style'].push('transposed')\n        } else {\n          console.log('row data does not exist for', column.id)\n        }\n      })\n\n      // INDEX FIELDS // every index/dimension column in origianl table must be represented as a data cell in the new transposed rows\n\n      this.headers.forEach((header, i) => {\n        switch (header.type) {\n          case 'pivot0':\n            var cell = new DataCell({ value: column.levels[i].label, rendered: column.levels[i].label })\n            if (column.subtotal) { cell.cell_style.push('subtotal') }\n            transposed_data['pivot0'] = cell\n            break\n          case 'pivot1':\n            var cell = new DataCell({ value: column.levels[i].label, rendered: column.levels[i].label })\n            if (column.subtotal) { cell.cell_style.push('subtotal') }\n            transposed_data['pivot1'] = cell\n            break\n          case 'heading':\n            var cell = new DataCell({ value: column.levels[i].label, rendered: column.levels[i].label })\n            if (column.subtotal) { cell.cell_style.push('subtotal') }\n            transposed_data['heading'] = cell\n            break\n          case 'field':\n            var cell = new DataCell({ value: column.levels[i].label, rendered: column.levels[i].label })\n            if (column.subtotal) { cell.cell_style.push('subtotal') }\n            if (column.modelField.style.includes('subtotal')) { cell.cell_style.push('subtotal') }\n            transposed_data['field'] = cell\n            break\n        }\n      })\n\n      var transposed_row = new Row('line_item')\n      transposed_row.id = column.id\n      transposed_row.modelField = column.modelField\n      transposed_row.hide = column.hide\n      transposed_row.data = transposed_data\n\n      this.transposed_data.push(transposed_row)\n\n    })\n  }\n\n  validateConfig() {\n    if (!['traditional', 'looker', 'contemporary', 'custom'].includes(this.config.theme)) {\n      this.config.theme = 'traditional'\n    }\n\n    if (!['fixed', 'auto'].includes(this.config.layout)) {\n      this.config.layout = 'fixed'\n    }\n\n    if (typeof this.config.transposeTable === 'undefined') {\n      this.config.transposeTable = false\n    }\n\n    Object.entries(this.config).forEach(option => {\n      if (option[1] === 'false') {\n        option[1] = false\n      } else if (option[1] === 'true') {\n        option[1] = true\n      }\n\n      if (option[0].split('|').length === 2) {\n        var [field_option, field_name] = option[0].split('|')\n        if (['label', 'heading', 'hide', 'style', 'switch', 'var_num', 'var_pct', 'comparison'].includes(field_option)) {\n          var keep_option = false\n          this.dimensions.forEach(dimension => {\n            if (dimension.name === field_name) { keep_option = true }\n          })\n          this.measures.forEach(measure => {\n            if (measure.name === field_name) { keep_option = true }\n          })\n          if (!keep_option) {\n            delete this.config[option[0]]\n          } \n        }\n      }\n    })\n  }\n\n  /**\n   * Returns column that matches ID provided\n   * @param {*} id \n   */\n  getColumnById (id) {\n    var column = {}\n    this.columns.forEach(c => {\n      if (id === c.id) { \n        column = c \n      }\n    })\n    return column\n  }\n\n  getMeasureByName (name) {\n    var measure = ''\n    this.measures.forEach(m => {\n      if (name === m.name) { \n        measure = m\n      }\n    })\n    return measure\n  }\n\n\n\n\n  /**\n   * Extracts the formatted value of the field from the html: value\n   * There are cases (totals data) where the formatted value isn't available as usual rendered_value\n   * @param {*} cellValue \n   */\n  getRenderedFromHtml (cellValue) {\n    var parser = new DOMParser()\n    if (typeof cellValue.html !== 'undefined' && !['undefined', ''].includes(cellValue.html)) {\n      try {\n        var parsed_html = parser.parseFromString(cellValue.html, 'text/html')\n        var rendered = parsed_html.documentElement.textContent\n      }\n      catch(TypeError) {\n        var rendered = cellValue.html\n      }\n    } else {\n      var rendered = cellValue.value\n    }\n\n    return rendered\n  }\n\n  /**\n   * Used to support rendering of table as vis. \n   * Returns an array of 0s, of length to match the required number of header rows\n   */\n  getHeaderTiers () {    \n    return !this.transposeTable\n      ? this.headers\n      : this.transposed_headers \n  }\n\n  /**\n   * Used to support rendering of data table as vis. \n   * Builds list of columns out of data set that should be displayed\n   * @param {*} i \n   */\n  getTableHeaderCells (i) {\n    return !this.transposeTable\n      ? this.columns\n          .filter(c => !c.hide)\n          .filter(c => this.colspan_values[c.id][this.headers[i].type] > 0)\n      : this.transposed_columns\n          .filter(c => c.levels[i].colspan > 0)\n  }\n\n  getDataRows () {\n    return !this.transposeTable\n      ? this.data.filter(row => !row.hide)\n      : this.transposed_data.filter(row => !row.hide)\n  }\n\n  /**\n   * Used to support rendering of data table as vis.\n   * For a given row of data, returns filtered array of cells – only those cells that are to be displayed.\n   * @param {*} row \n   */\n  getTableRowColumns (row) {\n    if (!this.transposeTable) {\n      var cells = this.columns\n        .filter(column => !column.hide)\n        .filter(column => row.data[column.id].rowspan > 0)\n\n    } else {\n      var cells = this.transposed_columns\n        .filter(cell => cell.rowspan > 0)\n\n      // cells.forEach((cell, idx) => {\n      //   if (cell.modelField.type === 'transposed_table_index') {\n      //     cell.rowspan = this.colspan_values[row.id][this.headers[idx].name]\n      //   }\n      // })\n\n    }\n    return cells    \n  }\n\n  /**\n   * Used to support column drag'n'drop when rendering data table as vis.\n   * Updates the table.config with the new pos values.\n   * Accepts a callback function for interaction with the vis.\n   * @param {*} from \n   * @param {*} to \n   * @param {*} callback \n   */\n  moveColumns(from, to, updateColumnOrder) {\n    var config = this.config\n    if (from != to) {\n      var shift = to - from\n      var col_order = config.columnOrder\n      this.columns.forEach(col => {\n        if (col.modelField.type == 'measure' && !col.super) {\n          if (col.pos >= from && col.pos < from + 10) {\n            // console.log('MOVING COLUMN', col.id, col.pos, '->', col.pos + shift)\n            col.pos += shift\n          } else if (col.pos >= to && col.pos < from) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos + 10)\n            col.pos += 10\n          } else if (col.pos >= from + 10 && col.pos < to + 10) {\n            // console.log('NUDGING COLUMN', col.id, col.pos, '->', col.pos - 10)\n            col.pos -= 10\n          }\n          col_order[col.id] = col.pos\n        } \n      })\n      updateColumnOrder(col_order)\n    }\n  }\n\n  /**\n   * Returns dataset as a simple json object\n   * Includes line_items only (e.g. no row subtotals)\n   * \n   * Convenience function when using LookerData as an object to support e.g. Vega Lite visualisations\n   */\n  getSimpleJson() {\n    var raw_values = []\n    this.data.forEach(r => {\n      if (r.type === 'line_item') {\n        var row = {}\n        this.columns.forEach(c => {\n          row[c.id] = r.data[c.id].value\n        })\n        raw_values.push(row)\n      }\n    })\n    return raw_values\n  }\n\n\n  /**\n   * Builds array of arrays, used at by table vis to build column groups\n   * Three column groups: \n   * - index (dimensions)\n   * - measures (standard measures)\n   * - totals (supermeasures: row totals and some table calcs)\n   * \n   * For transposed tables:\n   * - index (headers, pivot value, measures)\n   * - measures (Includes subtotals. Cells contain measure values, header rows contain dimension values)\n   * - totals (totals)\n   */\n  getTableColumnGroups () {\n    var index_columns = []\n    var measure_columns = []\n    var total_columns = []\n\n    if (!this.transposeTable) {\n      this.columns.forEach(column => {\n        if (column.modelField.type === 'dimension' && !this.useIndexColumn && column.id !== '$$$_index_$$$' && !column.hide) {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'dimension' && this.useIndexColumn && column.id === '$$$_index_$$$') {\n          index_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && !column.super && !column.hide) {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'measure' && column.super && !column.hide) {\n          total_columns.push({ id: column.id })\n        }\n      })\n    } else {\n      this.transposed_columns.forEach(column => {\n        if (column.modelField.type === 'transposed_table_index') {\n          index_columns.push({ id: column.id})\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id !== 'Total') {\n          measure_columns.push({ id: column.id })\n        } else if (column.modelField.type === 'transposed_table_measure' && column.id === 'Total') {\n          total_columns.push({ id: column.id })\n        }\n      })\n    }\n  }\n}\n\nexports.VisPluginTableModel = VisPluginTableModel\n"],"sourceRoot":""}
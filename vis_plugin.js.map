{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js","webpack:///./src/vis_plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelField","vis","queryResponseField","this","view","view_label","label","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","push","heading","short_name","unit","tags","forEach","tag","split","styles","Array","isArray","Series","keys","values","types","length","line_items_only","with_subtotals","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelDimension","super","align","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","PivotField","short_label","Row","id","sort","data","Column","transposed","idx","pos","levels","pivot_key","colspans","variance_type","pivoted","subtotal","sort_by_measure_values","sort_by_pivot_values","level","labels","visId","useShortName","config_setting","useViewName","join","has_pivots","sortColsBy","useHeadings","pluginDefaults","dimensionLabels","dimensionHide","measureLabels","measureStyles","colorBy","groupBy","sizeBy","VisPluginModel","lookerData","queryResponse","dimensions","measures","columns","ranges","pivot_fields","pivot_values","fields","supermeasure_like","has_supers","addPivots","addDimensions","addMeasures","buildRows","pivots","pivot","pivot_field","set","pivot_value","current_set","row_value","indexOf","dimension_like","dimension","dim","measure_like","measure","mea","pivotKey","columnId","level_sort_values","sort_values","supermeasure","lookerRow","current_min","current_max","cell_style","all_dims","includeRowId","melt","jsonData","filter","valueRef","lookerId","lookerPivotKey","tipText","entries","entry","getConfigOptions","visModel","pluginSettings","baseOptions","newOptions","section","default","order","display_size","display","optionChoices","sizeByOptions","option","colorByOptions"],"mappings":"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","file":"vis_plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = queryResponseField.is_numeric\n    this.is_array = ['list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = []\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style.push(style_setting)\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'styles':\n              this.styles = Array.isArray(tags[2]) ? tags[2] : [tags[2]] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' && queryResponseField.is_table_calculation\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = queryResponseField.is_turtle\n    this.can_pivot = can_pivot\n  }\n}\n\nclass PivotField {\n  constructor({ queryResponseField }) {\n    this.name = queryResponseField.name,\n    this.label = queryResponseField.short_label || queryResponseField.label,\n    this.view = queryResponseField.view_label || ''\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(with_subtotals)\n      this.max_for_display = Math.max(with_subtotals)\n      this.min = Math.min(line_items_only)\n      this.max = Math.max(line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  to_string() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    this.modelField = null\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n    this.colspans = []\n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.variance_type = '' // empty | absolute | percentage\n    this.pivoted = false\n    this.subtotal = false\n    this.super = false\n\n    this.series = null\n    \n    this.sort_by_measure_values = [] // [index -1|dimension 0|measure 1|row totals & supermeasures 2, column number, [measure values]  ]\n    this.sort_by_pivot_values = []   // [index -1|dimension 0|measure 1|row totals & supermeasures 2, [pivot values], column number    ]\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getLabel (level) {\n    if (this.transposed) {\n      return this.labels[level]\n    }\n\n    if (typeof this.vis.visId !== 'undefined' && this.vis.visId === 'report_table') {\n      var label = this.vis.useShortName ? this.modelField.short_name || this.modelField.label : this.modelField.label\n      switch (this.variance_type) {\n        case 'absolute':\n          var label = 'Var #'\n          break;\n        case 'percentage':\n          var label = 'Var %'\n          break;\n      }\n    } else {\n      var label = this.modelField.label\n    }\n    \n    var config_setting = this.vis.config['label|' + this.modelField.name]\n    if (typeof config_setting !== 'undefined' && config_setting !== this.modelField.label) {\n      label = config_setting ? config_setting : label\n    }\n\n    if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n      label = [this.modelField.view, label].join(' ') \n    }\n    \n    if (typeof this.vis.has_pivots !== 'undefined') {\n      if (this.vis.has_pivots) { \n        if (this.vis.sortColsBy === 'getSortByPivots') {\n          if (level < this.levels.length) {\n            label = this.levels[level]\n          } else {\n            // label already set\n          }\n        } else { // params.config.sortColumnsBy === 'getSortByMeasures'\n          if (level >= 1) {\n            label = this.levels[level - 1]\n          } else {\n            // label already set\n          }\n        } \n      } else { // flat table\n        if (this.vis.useHeadings && level === 0) {\n          var config_setting = this.vis.config['heading|' + this.modelField.name]\n          if (typeof config_setting !== 'undefined') {\n            label = config_setting ? config_setting : this.modelField.heading\n          } else {\n            label = this.modelField.heading\n          }\n        } else {\n          // label already set\n        }\n      }\n    }\n    return label\n  }\n\n  updateSortByMeasures (idx) {\n    if (this.sort_by_measure_values[0] == 1) {\n      if (!this.pivoted && !this.subtotal) {\n        this.sort_by_measure_values = [1, idx]\n      }\n    }\n  }\n\n  getSortByMeasures () {\n    return this.sort_by_measure_values\n  }\n\n  getSortByPivots () {\n    return this.sort_by_pivot_values\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.PivotField = PivotField\nexports.Row = Row\nexports.Column = Column\n","import { newArray, ModelDimension, ModelMeasure, PivotField, Row, Column } from './vis_primitives'\n\nconst pluginDefaults = {\n  dimensionLabels: true,\n  dimensionHide: false,\n  measureLabels: true,\n  measureStyles: [],\n  colorBy: false,\n  groupBy: false,\n  sizeBy: false,\n}\n\n/**\n * Represents an \"enriched data object\" with additional methods and properties for data vis\n * Takes the data, config and queryResponse objects as inputs to the constructor\n */\nclass VisPluginModel {\n  /**\n   * Build the lookerData object\n   * @constructor\n   * \n   * 1. Check for pivots and supermeasures\n   * 2. Add dimensions, list of ids, list of full objects\n   * 3. Add measures, list of ids, list of full objects\n   * 4. Build rows\n   * \n   * @param {*} lookerData \n   * @param {*} config \n   * @param {*} queryResponse \n   */\n  constructor(lookerData, config, queryResponse) {\n    this.visId = 'vis_plugin'\n    this.config = config\n\n    this.dimensions = []\n    this.measures = []\n    this.columns = []\n    this.data = []\n    \n\n    this.ranges = {}\n    \n    this.pivot_fields = []\n    this.pivot_values = []\n    this.has_pivots = false\n    \n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      this.has_supers = true\n    } else {\n      this.has_supers = false\n    }\n\n    this.addPivots(queryResponse)\n    this.addDimensions(queryResponse)\n    this.addMeasures(queryResponse)\n    this.buildRows(lookerData)\n  }\n\n  addPivots(queryResponse) {\n    if (typeof queryResponse.pivots !== 'undefined') {\n      queryResponse.fields.pivots.forEach(pivot => { \n        var pivot_field = new PivotField({\n          name: pivot.name,\n          label: pivot.label_short || pivot.label,\n          view: pivot.view_label || '',\n        })\n        this.pivot_fields.push(pivot_field) \n        this.ranges[pivot_field.name] = {set : []}\n      })\n      \n      this.pivot_values = queryResponse.pivots\n      this.ranges['lookerPivotKey'] = {set: []}\n\n      this.pivot_values.forEach(pivot_value => {\n        this.ranges['lookerPivotKey'].set.push(pivot_value.key)\n        \n        for (var key in pivot_value.data) {\n          var current_set = this.ranges[key].set\n          var row_value = pivot_value.data[key]\n          if (current_set.indexOf(row_value) === -1) {\n            current_set.push(row_value)\n          }\n        }\n      })\n      this.has_pivots = true\n    }\n  }\n\n  addDimensions(queryResponse) {\n    queryResponse.fields.dimension_like.forEach(dimension => {\n      var dim = new ModelDimension({\n        vis: this,\n        name: dimension.name,\n        label: dimension.label_short || dimension.label,\n        view: dimension.view_label || '',\n        is_numeric: dimension.is_numeric\n      })\n      this.dimensions.push(dim)\n      this.ranges[dim.name] = {\n        set: [],\n      }\n\n      var column = new Column(dim.name, this, dim) \n      column.levels = newArray(queryResponse.fields.pivots.length, '') // populate empty levels when pivoted\n\n      if (typeof this.config['hide|' + column.id] !== 'undefined') {\n        if (this.config['hide|' + column.id]) {\n          column.hide = true\n        }\n      }\n\n      this.columns.push(column)\n    })\n  }\n\n  addMeasures(queryResponse) {\n    // add measures, list of ids\n    queryResponse.fields.measure_like.forEach(measure => {\n      var mea = new ModelMeasure({\n        vis: this,\n        name: measure.name,\n        label: measure.label_short || measure.label,\n        view: measure.view_label || '',\n        is_table_calculation: typeof measure.is_table_calculation !== 'undefined',\n      })\n      this.measures.push(mea) \n      this.ranges[mea.name] = {\n        min: 100000000,\n        max: 0,\n      }\n    })\n    \n    // add measures, list of full objects\n    if (this.has_pivots) {\n      this.pivot_values.forEach(pivot_value => {\n        this.measures.length.forEach((measure, m) => {\n          var include_measure = (                                     // for pivoted measures, skip table calcs for row totals\n            pivot_value.key != '$$$_row_total_$$$'                    // if user wants a row total for table calc, must define separately\n          ) || (\n            pivot_value.key == '$$$_row_total_$$$' \n            && measure.is_table_calculation == false\n          )\n\n          if (include_measure) {\n            var pivotKey = pivot_value.key\n            var measureName = measure.name\n            var columnId = pivotKey + '.' + measureName\n\n            var levels = [] // will contain a list of all the pivot values for this column\n            var level_sort_values = []\n            this.pivot_fields.forEach(pivot => { \n              levels.push(pivot_value[pivot.name])\n              level_sort_values.push(pivot_value.sort_values[pivot.name]) \n            })\n\n            var column = new Column(columnId, this, measure)\n            column.levels = levels\n            column.pivoted = true\n            column.pivot_key = pivotKey\n\n            // TODO: Hide function\n\n            this.columns.push(column)\n          }\n        })\n      })\n    } else {\n      // noticeably simpler for flat tables!\n      this.measures.forEach(measure => {\n        var column = new Column(measure.name, vis, measure)\n\n        this.columns.push(column)\n\n        if (typeof this.config['style|' + column.id] !== 'undefined') {\n          if (this.config['style|' + column.id] === 'hide') {\n            column.hide = true\n          }\n        }\n      })\n    }\n    \n    // add supermeasures, if present\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      queryResponse.fields.supermeasure_like.forEach(supermeasure => {\n        var mea = new ModelMeasure({\n          name: supermeasure.name,\n          label: supermeasure.label,\n          view: '',\n        })\n        this.measures.push(mea) \n\n        var column = new Column(mea.name, this, mea)\n        column.levels = newArray(queryResponse.fields.pivots.length, '')\n        column.super = true\n\n        if (typeof this.config['style|' + column.id] !== 'undefined') {\n          if (this.config['style|' + column.id] === 'hide') {\n            column.hide = true\n          }\n        }\n        this.columns.push(column)\n      })\n    }\n  }\n\n  buildRows(lookerData) {\n    lookerData.forEach(lookerRow => {\n      var row = new Row() // TODO: consider creating the row object once all required field values identified\n      \n      this.columns.forEach(column => {\n        var name = column.modelField.name\n\n        // flatten data, if pivoted. Looker's data structure is nested for pivots (to a single level, no matter how many pivots)\n        if (column.pivoted) {\n          row.data[column.id] = lookerRow[name][column.pivot_key]\n        } else {\n          row.data[column.id] = lookerRow[column.id]\n        }\n\n        if (typeof row.data[column.id] !== 'undefined') {\n          if (column.modelField.type === 'measure') {\n            var current_min = this.ranges[name].min\n            var current_max = this.ranges[name].max\n            var row_value = row.data[column.id].value\n\n            this.ranges[name].min = Math.min(current_min, row_value)\n            this.ranges[name].max = Math.max(current_max, row_value)\n          } else if (column.modelField.type === 'dimension') {\n            var current_set = this.ranges[name].set\n            var row_value = row.data[column.id].value\n\n            if (current_set.indexOf(row_value) === -1) {\n              current_set.push(row_value)\n            }\n          }\n\n          if (typeof row.data[column.id].cell_style === 'undefined') {\n            row.data[column.id].cell_style = []\n          }\n        }\n      })\n\n      // set a unique id for the row\n      var all_dims = []\n      this.dimensions.forEach(dimension => {\n        all_dims.push(lookerRow[dimension.name].value)\n      })\n      row.id = all_dims.join('|')\n\n      this.data.push(row)\n    })\n  }\n\n  getDimensionByName(name) {\n    this.dimensions.forEach(d => {\n      if (d.name === name) {\n        return d\n      }\n    })\n  }\n\n  getMeasureByName(name) {\n    this.measures.forEach(m => {\n      if (m.name === name) {\n        return m\n      }\n    })\n  }\n\n  /**\n   * Returns dataset as a simple json object\n   * Includes line_items only (e.g. no row subtotals)\n   * \n   * @param {boolean} includeRowId - adds a unique lookerId value to each row\n   * @param {boolean} melt - if dataset is pivoted, will 'melt' back to flat data\n   */\n  getJson(includeRowId=true, melt=false) {\n    var jsonData = []\n    if (!this.has_pivots || !melt) {\n      this.data.forEach(r => {\n        var row = {}\n        this.columns\n          .filter(c => !c.hide).forEach(c => {\n            row[c.id] = r.data[c.id].value\n          })\n        if (includeRowId) {\n          row.lookerId = r.id\n        }\n        jsonData.push(row)\n      })\n    } else {\n      this.pivot_values.forEach(p => {\n        this.data.forEach(r => {\n          var row = {}\n          for (var pivot_value in p.data) {\n            row[pivot_value] = p.data[pivot_value]\n          }\n          this.columns // 'flat fields' i.e. dimensions and supermeasures\n            .filter(c => !c.hide)\n            .filter(c => c.type === 'dimension' || c.super)\n            .forEach(c => {\n              row[c.id] = r.data[c.id].value\n            })\n          this.columns // 'pivoted fields' i.e. measures\n            .filter(c => !c.hide)\n            .filter(c => c.pivoted)\n            .forEach(c => {\n              var valueRef = p.key + '.' + c.modelField.name\n              row[c.modelField.name] = r.data[valueRef].value\n            })\n          if (includeRowId) {\n            row.lookerId = p.key + '|' + r.id\n          }\n          row.lookerPivotKey = p.key\n          jsonData.push(row)\n        })\n      })\n    }\n\n    return jsonData\n  }\n\n  getTooltipFromD3(d) {\n    var tipText = ''\n\n    // this.dimensions.forEach(dimension => {\n    //   tiptext += \"<p><em>\" + dimension.label + \":</em> \" + row[dimension.name].rendered + \"</p>\"\n    // })\n\n    Object.entries(d).forEach(entry => {\n      tipText += \"<p><em>\" + entry[0] + \":</em> \" + entry[1] + \"</p>\"\n    })\n    \n    return tipText;\n  }\n}\n\nconst getConfigOptions = (visModel, pluginSettings=pluginDefaults, baseOptions={}) => {\n  var pluginSettings = {...pluginDefaults, ...pluginSettings} \n  var newOptions = baseOptions\n\n  visModel.dimensions.forEach((dimension, i) => {\n    if (pluginSettings.dimensionLabels) {\n      newOptions['label|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: dimension.label,\n        default: dimension.label,\n        order: i * 10 + 1,\n      }\n    }\n\n    if (pluginSettings.dimensionHide) {\n      newOptions['hide|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'boolean',\n        label: 'Hide',\n        display_size: 'third',\n        order: i * 10 + 2,\n      }\n    }\n  })\n\n  visModel.measures.forEach((measure, i) => {\n    if (pluginSettings.measureLabels) {\n      newOptions['label|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: measure.label_short || measure.label,\n        default: measure.label_short || measure.label,\n        order: 100 + i * 10 + 1,\n      }\n    }\n\n    if (pluginSettings.measureStyles.length > 0) {\n      newOptions['style|' + visModel.measures[i].name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Style',\n        display: 'select',\n        values: optionChoices.measureStyles,\n        order: 100 + i * 10 + 2\n      }\n    }\n  })\n\n  if (pluginSettings.sizeBy) {\n    var sizeByOptions = [];\n    visModel.measures.forEach(measure => {\n        var option = {};\n        option[measure.label] = measure.name;\n        sizeByOptions.push(option);\n    })\n  \n    newOptions[\"sizeBy\"] = {\n        section: \" Visualization\",\n        type: \"string\",\n        label: \"Size By\",\n        display: \"select\",\n        values: sizeByOptions,\n        default: \"0\",\n        order: 300,\n    }\n  }\n\n  // colorByOptions include:\n  // - by dimension\n  // - by pivot key (which are also dimensions)\n  // - by pivot series (one color per column)\n  var colorByOptions = [];\n  visModel.dimensions.forEach(dimension => {\n      var option = {};\n      option[dimension.label] = dimension.name;\n      colorByOptions.push(option)\n  })\n\n  visModel.pivot_fields.forEach(pivot_field => {\n    var option = {};\n    option[pivot_field.label] = pivot_field.name;\n    colorByOptions.push(option)\n  })\n\n  if (visModel.pivot_fields.length > 1 ) {\n    colorByOptions.push({'Pivot Series': 'lookerPivotKey'})\n  }\n  \n  if (pluginSettings.colorBy) {\n    newOptions[\"colorBy\"] = {\n      section: \" Visualization\",\n      type: \"string\",\n      label: \"Color By\",\n      display: \"select\",\n      values: colorByOptions,\n      default: \"0\",\n      order: 100,\n    } \n  }\n\n  if (pluginSettings.groupBy) {\n    newOptions[\"groupBy\"] = {\n      section: \" Visualization\",\n      type: \"string\",\n      label: \"Group By\",\n      display: \"select\",\n      values: colorByOptions,\n      default: \"0\",\n      order: 200,\n    } \n  }\n\n  return newOptions\n}\n\nexports.VisPluginModel = VisPluginModel\nexports.getConfigOptions = getConfigOptions\n"],"sourceRoot":""}
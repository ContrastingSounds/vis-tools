{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/looker_helpers.js","webpack:///./src/vis_plugin.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelDimension","vis","view","label","is_numeric","value_format","heading","short_name","unit","this","super","type","align","hide","config","Series","keys","values","types","length","line_items_only","with_subtotals","push","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelMeasure","is_table_calculation","calculation_type","can_pivot","is_turtle","style","CellSeries","column","row","sort_value","series","rendered","modelField","toString","SSF","format","ColumnSeries","PivotField","Row","id","sort","data","Column","transposed","idx","pos","levels","pivot_key","colspans","variance_type","pivoted","subtotal","sort_by_measure_values","sort_by_pivot_values","level","labels","useShortName","useViewName","join","has_pivots","sortColsBy","useHeadings","pluginDefaults","dimensionLabels","dimensionHide","measureLabels","measureStyles","colorBy","groupBy","sizeBy","VisPluginModel","lookerData","queryResponse","dimensions","measures","columns","ranges","pivot_fields","pivot_values","fields","supermeasure_like","has_supers","addPivots","addDimensions","addMeasures","buildRows","pivots","forEach","pivot","pivot_field","label_short","view_label","set","pivot_value","current_set","row_value","indexOf","dimension_like","dimension","dim","measure_like","measure","mea","pivotKey","columnId","level_sort_values","sort_values","supermeasure","lookerRow","current_min","current_max","cell_style","all_dims","includeRowId","melt","jsonData","filter","valueRef","lookerId","lookerPivotKey","tipText","entries","entry","getConfigOptions","visModel","pluginSettings","baseOptions","newOptions","section","default","order","display_size","display","optionChoices","sizeByOptions","option","colorByOptions"],"mappings":"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","file":"vis_plugin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, name, view, label, is_numeric, value_format = '', heading = '', short_name = '', unit = ''}) {\n    this.vis = vis\n    this.name = name\n    this.view = view\n    this.label = label\n    this.is_numeric = is_numeric\n    this.value_format = value_format\n    this.heading = heading\n    this.short_name = short_name\n    this.unit = unit\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ \n    vis, name, view, label, is_numeric,\n    value_format = '', heading = '', short_name = '', unit = ''\n  }) {\n    super({ vis, name, view, label, is_numeric, value_format, heading, short_name, unit })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n    this.hide = false\n\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n  }\n}\n\nclass ModelMeasure extends ModelDimension {\n  constructor({ \n    vis, name, view, label, is_numeric,\n    is_table_calculation, calculation_type, can_pivot, is_turtle = false,\n    heading = '', short_name = '', unit = '', value_format = ''\n  }) {\n    super({ vis, name, view, label, is_numeric, value_format, heading, short_name, unit })\n\n    this.type = 'measure'\n    this.is_table_calculation = is_table_calculation\n    this.calculation_type = calculation_type\n    this.can_pivot = can_pivot\n    this.is_turtle = is_turtle\n    this.align = 'right'\n    this.hide = false\n    this.style = []\n\n    if (typeof this.vis.config['style|' + this.name] !== 'undefined') {\n      if (this.vis.config['style|' + this.name] === 'hide') {\n        this.hide = true\n      } else {\n        this.style.push(this.vis.config['style|' + this.name])\n      }\n    }\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = []\n\n      var line_items_only = []\n      var with_subtotals = []\n      for (var i = 0; i < keys.length; i++) {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(this.values[i])\n          with_subtotals.push(this.values[i])\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(this.values[i])\n        }\n      }\n\n      this.min_for_display = Math.min(with_subtotals)\n      this.max_for_display = Math.max(with_subtotals)\n      this.min = Math.min(line_items_only)\n      this.max = Math.max(line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  to_string() {\n    var rendered = ''\n    for (var i = 0; i < this.series.keys.length; i++) {\n      rendered += this.series.keys[i] + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    }\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\nclass PivotField {\n  constructor({ name, label, view }) {\n    this.name = name,\n    this.label = label,\n    this.view = view\n  }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    this.modelField = null\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n    this.colspans = []\n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.variance_type = '' // empty | absolute | percentage\n    this.pivoted = false\n    this.subtotal = false\n    this.super = false\n\n    this.series = null\n    \n    this.sort_by_measure_values = [] // [index -1|dimension 0|measure 1|row totals & supermeasures 2, column number, [measure values]  ]\n    this.sort_by_pivot_values = []   // [index -1|dimension 0|measure 1|row totals & supermeasures 2, [pivot values], column number    ]\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} label_with_view - full field name including label e.g. \"Users Name\"\n   * @param {*} label_with_pivots - adds all pivot values \"Total Users Q1 Male\"\n   */\n  getLabel (level) {\n    if (this.transposed) {\n      return this.labels[level]\n    }\n\n    if (typeof this.vis.useShortName !== 'undefined') {\n      switch (this.variance_type) {\n        case 'absolute':\n          var label = 'Var #'\n          break;\n        case 'percentage':\n          var label = 'Var %'\n          break;\n        default:\n          var label = this.vis.useShortName ? this.modelField.short_name || this.modelField.label : this.modelField.label\n      }\n    } else {\n      var label = this.modelField.label\n    }\n    \n\n    var key = 'label|' + this.modelField.name\n    if (typeof this.vis.config[key] !== 'undefined' && this.vis.config[key] !== this.modelField.label) {\n      label = this.vis.config[key] ? this.vis.config[key] : label\n    }\n\n    if (typeof this.vis.useViewName !== 'undefined') {\n      if (this.vis.useViewName) { \n        label = [this.modelField.view, label].join(' ') \n      }\n    }\n    \n    if (typeof this.vis.has_pivots !== 'undefined') {\n      if (this.vis.has_pivots) { \n        if (this.vis.sortColsBy === 'getSortByPivots') {\n          if (level < this.levels.length) {\n            label = this.levels[level]\n          } else {\n            // label already set\n          }\n        } else { // params.config.sortColumnsBy === 'getSortByMeasures'\n          if (level >= 1) {\n            label = this.levels[level - 1]\n          } else {\n            // label already set\n          }\n        } \n      } else { // flat table\n        if (this.vis.useHeadings && level === 0) {\n          var key = 'heading|' + this.modelField.name\n          if (typeof this.vis.config[key] !== 'undefined') {\n            label = this.vis.config[key] ? this.vis.config[key] : this.modelField.heading\n          } else {\n            label = this.modelField.heading\n          }\n        } else {\n          // label already set\n        }\n      }\n    }\n\n    return label\n  }\n\n  updateSortByMeasures (idx) {\n    if (this.sort_by_measure_values[0] == 1) {\n      if (!this.pivoted && !this.subtotal) {\n        this.sort_by_measure_values = [1, idx]\n      }\n    }\n  }\n\n  getSortByMeasures () {\n    return this.sort_by_measure_values\n  }\n\n  getSortByPivots () {\n    return this.sort_by_pivot_values\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.PivotField = PivotField\nexports.Row = Row\nexports.Column = Column\n","import { newArray, ModelDimension, ModelMeasure, PivotField, Row, Column } from './looker_helpers'\n\nconst pluginDefaults = {\n  dimensionLabels: true,\n  dimensionHide: false,\n  measureLabels: true,\n  measureStyles: [],\n  colorBy: false,\n  groupBy: false,\n  sizeBy: false,\n}\n\n/**\n * Represents an \"enriched data object\" with additional methods and properties for data vis\n * Takes the data, config and queryResponse objects as inputs to the constructor\n */\nclass VisPluginModel {\n  /**\n   * Build the lookerData object\n   * @constructor\n   * \n   * 1. Check for pivots and supermeasures\n   * 2. Add dimensions, list of ids, list of full objects\n   * 3. Add measures, list of ids, list of full objects\n   * 4. Build rows\n   * \n   * @param {*} lookerData \n   * @param {*} config \n   * @param {*} queryResponse \n   */\n  constructor(lookerData, config, queryResponse) {\n    this.config = config\n\n    this.dimensions = []\n    this.measures = []\n    this.columns = []\n    this.data = []\n    \n\n    this.ranges = {}\n    \n    this.pivot_fields = []\n    this.pivot_values = []\n    this.has_pivots = false\n    \n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      this.has_supers = true\n    } else {\n      this.has_supers = false\n    }\n\n    this.addPivots(queryResponse)\n    this.addDimensions(queryResponse)\n    this.addMeasures(queryResponse)\n    this.buildRows(lookerData)\n  }\n\n  addPivots(queryResponse) {\n    if (typeof queryResponse.pivots !== 'undefined') {\n      queryResponse.fields.pivots.forEach(pivot => { \n        var pivot_field = new PivotField({\n          name: pivot.name,\n          label: pivot.label_short || pivot.label,\n          view: pivot.view_label || '',\n        })\n        this.pivot_fields.push(pivot_field) \n        this.ranges[pivot_field.name] = {set : []}\n      })\n      \n      this.pivot_values = queryResponse.pivots\n      this.ranges['lookerPivotKey'] = {set: []}\n\n      this.pivot_values.forEach(pivot_value => {\n        this.ranges['lookerPivotKey'].set.push(pivot_value.key)\n        \n        for (var key in pivot_value.data) {\n          var current_set = this.ranges[key].set\n          var row_value = pivot_value.data[key]\n          if (current_set.indexOf(row_value) === -1) {\n            current_set.push(row_value)\n          }\n        }\n      })\n      this.has_pivots = true\n    }\n  }\n\n  addDimensions(queryResponse) {\n    queryResponse.fields.dimension_like.forEach(dimension => {\n      var dim = new ModelDimension({\n        vis: this,\n        name: dimension.name,\n        label: dimension.label_short || dimension.label,\n        view: dimension.view_label || '',\n        is_numeric: dimension.is_numeric\n      })\n      this.dimensions.push(dim)\n      this.ranges[dim.name] = {\n        set: [],\n      }\n\n      var column = new Column(dim.name, this, dim) \n      column.levels = newArray(queryResponse.fields.pivots.length, '') // populate empty levels when pivoted\n\n      if (typeof this.config['hide|' + column.id] !== 'undefined') {\n        if (this.config['hide|' + column.id]) {\n          column.hide = true\n        }\n      }\n\n      this.columns.push(column)\n    })\n  }\n\n  addMeasures(queryResponse) {\n    // add measures, list of ids\n    queryResponse.fields.measure_like.forEach(measure => {\n      var mea = new ModelMeasure({\n        vis: this,\n        name: measure.name,\n        label: measure.label_short || measure.label,\n        view: measure.view_label || '',\n        is_table_calculation: typeof measure.is_table_calculation !== 'undefined',\n      })\n      this.measures.push(mea) \n      this.ranges[mea.name] = {\n        min: 100000000,\n        max: 0,\n      }\n    })\n    \n    // add measures, list of full objects\n    if (this.has_pivots) {\n      this.pivot_values.forEach(pivot_value => {\n        this.measures.length.forEach((measure, m) => {\n          var include_measure = (                                     // for pivoted measures, skip table calcs for row totals\n            pivot_value.key != '$$$_row_total_$$$'                    // if user wants a row total for table calc, must define separately\n          ) || (\n            pivot_value.key == '$$$_row_total_$$$' \n            && measure.is_table_calculation == false\n          )\n\n          if (include_measure) {\n            var pivotKey = pivot_value.key\n            var measureName = measure.name\n            var columnId = pivotKey + '.' + measureName\n\n            var levels = [] // will contain a list of all the pivot values for this column\n            var level_sort_values = []\n            this.pivot_fields.forEach(pivot => { \n              levels.push(pivot_value[pivot.name])\n              level_sort_values.push(pivot_value.sort_values[pivot.name]) \n            })\n\n            var column = new Column(columnId, this, measure)\n            column.levels = levels\n            column.pivoted = true\n            column.pivot_key = pivotKey\n\n            // TODO: Hide function\n\n            this.columns.push(column)\n          }\n        })\n      })\n    } else {\n      // noticeably simpler for flat tables!\n      this.measures.forEach(measure => {\n        var column = new Column(measure.name, vis, measure)\n\n        this.columns.push(column)\n\n        if (typeof this.config['style|' + column.id] !== 'undefined') {\n          if (this.config['style|' + column.id] === 'hide') {\n            column.hide = true\n          }\n        }\n      })\n    }\n    \n    // add supermeasures, if present\n    if (typeof queryResponse.fields.supermeasure_like !== 'undefined') {\n      queryResponse.fields.supermeasure_like.forEach(supermeasure => {\n        var mea = new ModelMeasure({\n          name: supermeasure.name,\n          label: supermeasure.label,\n          view: '',\n        })\n        this.measures.push(mea) \n\n        var column = new Column(mea.name, this, mea)\n        column.levels = newArray(queryResponse.fields.pivots.length, '')\n        column.super = true\n\n        if (typeof this.config['style|' + column.id] !== 'undefined') {\n          if (this.config['style|' + column.id] === 'hide') {\n            column.hide = true\n          }\n        }\n        this.columns.push(column)\n      })\n    }\n  }\n\n  buildRows(lookerData) {\n    lookerData.forEach(lookerRow => {\n      var row = new Row() // TODO: consider creating the row object once all required field values identified\n      \n      this.columns.forEach(column => {\n        var name = column.modelField.name\n\n        // flatten data, if pivoted. Looker's data structure is nested for pivots (to a single level, no matter how many pivots)\n        if (column.pivoted) {\n          row.data[column.id] = lookerRow[name][column.pivot_key]\n        } else {\n          row.data[column.id] = lookerRow[column.id]\n        }\n\n        if (typeof row.data[column.id] !== 'undefined') {\n          if (column.modelField.type === 'measure') {\n            var current_min = this.ranges[name].min\n            var current_max = this.ranges[name].max\n            var row_value = row.data[column.id].value\n\n            this.ranges[name].min = Math.min(current_min, row_value)\n            this.ranges[name].max = Math.max(current_max, row_value)\n          } else if (column.modelField.type === 'dimension') {\n            var current_set = this.ranges[name].set\n            var row_value = row.data[column.id].value\n\n            if (current_set.indexOf(row_value) === -1) {\n              current_set.push(row_value)\n            }\n          }\n\n          if (typeof row.data[column.id].cell_style === 'undefined') {\n            row.data[column.id].cell_style = []\n          }\n        }\n      })\n\n      // set a unique id for the row\n      var all_dims = []\n      this.dimensions.forEach(dimension => {\n        all_dims.push(lookerRow[dimension.name].value)\n      })\n      row.id = all_dims.join('|')\n\n      this.data.push(row)\n    })\n  }\n\n  getDimensionByName(name) {\n    this.dimensions.forEach(d => {\n      if (d.name === name) {\n        return d\n      }\n    })\n  }\n\n  getMeasureByName(name) {\n    this.measures.forEach(m => {\n      if (m.name === name) {\n        return m\n      }\n    })\n  }\n\n  /**\n   * Returns dataset as a simple json object\n   * Includes line_items only (e.g. no row subtotals)\n   * \n   * @param {boolean} includeRowId - adds a unique lookerId value to each row\n   * @param {boolean} melt - if dataset is pivoted, will 'melt' back to flat data\n   */\n  getJson(includeRowId=true, melt=false) {\n    var jsonData = []\n    if (!this.has_pivots || !melt) {\n      this.data.forEach(r => {\n        var row = {}\n        this.columns\n          .filter(c => !c.hide).forEach(c => {\n            row[c.id] = r.data[c.id].value\n          })\n        if (includeRowId) {\n          row.lookerId = r.id\n        }\n        jsonData.push(row)\n      })\n    } else {\n      this.pivot_values.forEach(p => {\n        this.data.forEach(r => {\n          var row = {}\n          for (var pivot_value in p.data) {\n            row[pivot_value] = p.data[pivot_value]\n          }\n          this.columns // 'flat fields' i.e. dimensions and supermeasures\n            .filter(c => !c.hide)\n            .filter(c => c.type === 'dimension' || c.super)\n            .forEach(c => {\n              row[c.id] = r.data[c.id].value\n            })\n          this.columns // 'pivoted fields' i.e. measures\n            .filter(c => !c.hide)\n            .filter(c => c.pivoted)\n            .forEach(c => {\n              var valueRef = p.key + '.' + c.modelField.name\n              row[c.modelField.name] = r.data[valueRef].value\n            })\n          if (includeRowId) {\n            row.lookerId = p.key + '|' + r.id\n          }\n          row.lookerPivotKey = p.key\n          jsonData.push(row)\n        })\n      })\n    }\n\n    return jsonData\n  }\n\n  getTooltipFromD3(d) {\n    var tipText = ''\n\n    // this.dimensions.forEach(dimension => {\n    //   tiptext += \"<p><em>\" + dimension.label + \":</em> \" + row[dimension.name].rendered + \"</p>\"\n    // })\n\n    Object.entries(d).forEach(entry => {\n      tipText += \"<p><em>\" + entry[0] + \":</em> \" + entry[1] + \"</p>\"\n    })\n    \n    return tipText;\n  }\n}\n\nconst getConfigOptions = (visModel, pluginSettings=pluginDefaults, baseOptions={}) => {\n  var pluginSettings = {...pluginDefaults, ...pluginSettings} \n  var newOptions = baseOptions\n\n  visModel.dimensions.forEach((dimension, i) => {\n    if (pluginSettings.dimensionLabels) {\n      newOptions['label|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'string',\n        label: dimension.label,\n        default: dimension.label,\n        order: i * 10 + 1,\n      }\n    }\n\n    if (pluginSettings.dimensionHide) {\n      newOptions['hide|' + dimension.name] = {\n        section: 'Dimensions',\n        type: 'boolean',\n        label: 'Hide',\n        display_size: 'third',\n        order: i * 10 + 2,\n      }\n    }\n  })\n\n  visModel.measures.forEach((measure, i) => {\n    if (pluginSettings.measureLabels) {\n      newOptions['label|' + measure.name] = {\n        section: 'Measures',\n        type: 'string',\n        label: measure.label_short || measure.label,\n        default: measure.label_short || measure.label,\n        order: 100 + i * 10 + 1,\n      }\n    }\n\n    if (pluginSettings.measureStyles.length > 0) {\n      newOptions['style|' + visModel.measures[i].name] = {\n        section: 'Measures',\n        type: 'string',\n        label: 'Style',\n        display: 'select',\n        values: optionChoices.measureStyles,\n        order: 100 + i * 10 + 2\n      }\n    }\n  })\n\n  if (pluginSettings.sizeBy) {\n    var sizeByOptions = [];\n    visModel.measures.forEach(measure => {\n        var option = {};\n        option[measure.label] = measure.name;\n        sizeByOptions.push(option);\n    })\n  \n    newOptions[\"sizeBy\"] = {\n        section: \" Visualization\",\n        type: \"string\",\n        label: \"Size By\",\n        display: \"select\",\n        values: sizeByOptions,\n        default: \"0\",\n        order: 300,\n    }\n  }\n\n  // colorByOptions include:\n  // - by dimension\n  // - by pivot key (which are also dimensions)\n  // - by pivot series (one color per column)\n  var colorByOptions = [];\n  visModel.dimensions.forEach(dimension => {\n      var option = {};\n      option[dimension.label] = dimension.name;\n      colorByOptions.push(option)\n  })\n\n  visModel.pivot_fields.forEach(pivot_field => {\n    var option = {};\n    option[pivot_field.label] = pivot_field.name;\n    colorByOptions.push(option)\n  })\n\n  if (visModel.pivot_fields.length > 1 ) {\n    colorByOptions.push({'Pivot Series': 'lookerPivotKey'})\n  }\n  \n  if (pluginSettings.colorBy) {\n    newOptions[\"colorBy\"] = {\n      section: \" Visualization\",\n      type: \"string\",\n      label: \"Color By\",\n      display: \"select\",\n      values: colorByOptions,\n      default: \"0\",\n      order: 100,\n    } \n  }\n\n  if (pluginSettings.groupBy) {\n    newOptions[\"groupBy\"] = {\n      section: \" Visualization\",\n      type: \"string\",\n      label: \"Group By\",\n      display: \"select\",\n      values: colorByOptions,\n      default: \"0\",\n      order: 200,\n    } \n  }\n\n  return newOptions\n}\n\n\n\nexports.VisPluginModel = VisPluginModel\nexports.getConfigOptions = getConfigOptions\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelField","vis","queryResponseField","this","view","view_label","label","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","heading","short_name","unit","tags","forEach","tag","split","Series","keys","values","types","length","line_items_only","with_subtotals","push","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelDimension","super","align","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","HeaderField","Row","id","sort","data","Column","transposed","idx","pos","levels","pivot_key","variance_type","pivoted","subtotal","sort_by_measure_values","sort_by_pivot_values","colspans","colspan_values","headers","header","level","labels","visId","useShortName","config_setting","useViewName","join","has_pivots","sortColsBy","useHeadings","header_levels","getLabel","column_heading","unshift","headerData","getHeaderLevels"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,G,gBCpErD,MAAMC,EACJ,aAAY,IAAEC,EAAG,mBAAEC,IACjBC,KAAKF,IAAMA,EACXE,KAAK5B,KAAO2B,EAAmB3B,KAC/B4B,KAAKC,KAAOF,EAAmBG,YAAc,GAC7CF,KAAKG,MAAQJ,EAAmBK,aAAeL,EAAmBI,MAClEH,KAAKK,WAAaN,EAAmBM,WACrCL,KAAKM,SAAW,CAAC,OAAQ,WAAY,QAAQC,SAASR,EAAmBS,MACzER,KAAKS,aAAeV,EAAmBU,aAEvCT,KAAKU,SAAW,IACgB,aAA5BX,EAAmBS,MAAuBT,EAAmBY,aAC/DX,KAAKU,SAAuC,aAA5BX,EAAmBS,KAAsB,WAAaT,EAAmBY,UAAUvC,MAGrG4B,KAAKY,MAAO,OACwC,IAAzCZ,KAAKF,IAAIe,OAAO,QAAUb,KAAK5B,OACpC4B,KAAKF,IAAIe,OAAO,QAAUb,KAAK5B,QACjC4B,KAAKY,MAAO,GAIhBZ,KAAKc,MAAQ,GACb,IAAIC,EAAgBf,KAAKF,IAAIe,OAAO,SAAWb,KAAK5B,WACvB,IAAlB2C,IACa,SAAlBA,EACFf,KAAKY,MAAO,EAEZZ,KAAKc,MAAQC,GAIjBf,KAAKgB,QAAU,GACfhB,KAAKiB,WAAa,GAClBjB,KAAKkB,KAAO,QAC2B,IAA5BnB,EAAmBoB,MAC5BpB,EAAmBoB,KAAKC,QAAQC,IAC9B,IAAIF,EAAOE,EAAIC,MAAM,KACrB,GAAgB,cAAZH,EAAK,GACP,OAAQA,EAAK,IACX,IAAK,UACHnB,KAAKgB,QAAUG,EAAK,GAAK,MAC3B,IAAK,aACHnB,KAAKiB,WAAaE,EAAK,GAAK,MAC9B,IAAK,OACHnB,KAAKkB,KAAOC,EAAK,GAAK,MACxB,IAAK,QACHnB,KAAKc,MAAQK,EAAK,OA4ChC,MAAMI,EACJ,aAAY,KAAEC,EAAI,OAAEC,EAAM,MAAEC,EAAQ,KAClC,GAAIF,EAAKG,SAAWF,EAAOE,OAAS,CAClC3B,KAAKwB,KAAOA,EACZxB,KAAKyB,OAASA,EACdzB,KAAK0B,MAAQA,EAEb,IAAIE,EAAkB,GAClBC,EAAiB,GAErB7B,KAAKyB,OAAOL,QAAQ,CAACtC,EAAOjB,KAC1BmC,KAAK0B,MAAM7D,QAAyB,IAAb6D,EAAM7D,GAAqB6D,EAAM7D,GAAK,YACvC,cAAlBmC,KAAK0B,MAAM7D,IACb+D,EAAgBE,KAAKhD,GACrB+C,EAAeC,KAAKhD,IACO,aAAlBkB,KAAK0B,MAAM7D,IACpBgE,EAAeC,KAAKhD,KAIxBkB,KAAK+B,gBAAkBC,KAAKC,IAAIJ,GAChC7B,KAAKkC,gBAAkBF,KAAKG,IAAIN,GAChC7B,KAAKiC,IAAMD,KAAKC,IAAIL,GACpB5B,KAAKmC,IAAMH,KAAKG,IAAIP,GACpB5B,KAAKoC,IAAMR,EAAgBS,OAAO,CAACC,EAAGC,IAAMD,EAAIC,EAAG,GACnDvC,KAAKwC,MAAQZ,EAAgBD,OAC7B3B,KAAKyC,IAAMb,EAAgBD,OAAS,EAAI3B,KAAKoC,IAAMR,EAAgBD,OAAS,UAE5Ee,QAAQC,IAAI,iEA+MlBhF,EAAQiF,SA9US,SAASjB,EAAQ7C,GAEhC,IADA,IAAI+D,EAAM,GACD/E,EAAI,EAAGA,EAAI6D,EAAQ7D,IAC1B+E,EAAIf,KAAKhD,GAEX,OAAO+D,GA0UTlF,EAAQmF,eAhRR,cAA6BjD,EAC3B,aAAY,IAAEC,EAAG,mBAAEC,IACjBgD,MAAM,CAAEjD,MAAKC,uBAEbC,KAAKQ,KAAO,YACZR,KAAKgD,MAAQ,SA4QjBrF,EAAQsF,aAxQR,cAA2BpD,EACzB,aAAY,IAAEC,EAAG,mBAAEC,EAAkB,UAAEmD,IACrCH,MAAM,CAAEjD,MAAKC,uBAEbC,KAAKQ,KAAO,UACZR,KAAKgD,MAAQ,QAEbhD,KAAKmD,0BAA0E,IAA5CpD,EAAmBoD,sBAAwCpD,EAAmBoD,qBACjHnD,KAAKoD,iBAAmBrD,EAAmBS,KAC3CR,KAAKqD,UAAYtD,EAAmBsD,UACpCrD,KAAKkD,UAAYA,IA+PrBvF,EAAQ2F,WA7MR,MACE,aAAY,OAAEC,EAAM,IAAEC,EAAG,WAAEC,EAAU,OAAEC,IACrC1D,KAAKuD,OAASA,EACdvD,KAAKwD,IAAMA,EACXxD,KAAKyD,WAAaA,EAClBzD,KAAK0D,OAAS,IAAInC,EAAOmC,GAG3B,WACE,IAAIC,EAAW,GAQf,OAPA3D,KAAK0D,OAAOlC,KAAKJ,QAAQ,CAAChC,EAAKvB,KAC7B8F,GAAYvE,EAAM,IAClB,IAAIwE,EAA0D,KAAxC5D,KAAKuD,OAAOM,WAAWpD,aACrBT,KAAK0D,OAAOjC,OAAO5D,GAAGiG,WACtBC,IAAIC,OAAOhE,KAAKuD,OAAOM,WAAWpD,aAAcT,KAAK0D,OAAOjC,OAAO5D,IAC3F8F,GAAYC,EAAkB,MAEzBD,IA6LXhG,EAAQsG,aAzLR,MACE,aAAY,OAAEV,EAAM,WAAElD,EAAU,OAAEqD,IAChC1D,KAAKuD,OAASA,EACdvD,KAAKK,WAAaA,EAClBL,KAAK0D,OAAS,IAAInC,EAAOmC,KAsL7B/F,EAAQuG,YA7PR,MACE,aAAY,IAAEpE,EAAG,mBAAEC,EAAqB,CAAE3B,KAAM,GAAI+B,MAAO,GAAIF,KAAM,KAAQ,CAAEH,MAAKC,uBAClF2C,QAAQC,IAAI,gBAAiB7C,EAAKC,EAAmB3B,MACrD4B,KAAKF,IAAMA,EACXE,KAAK5B,KAAO2B,EAAmB3B,KAC/B4B,KAAKG,MAAQJ,EAAmBK,YAAcL,EAAmBK,YAAcL,EAAmBI,MAClGH,KAAKC,KAAOF,EAAmBG,aAwPnCvC,EAAQwG,IA9KR,MACE,YAAY3D,EAAO,aACjBR,KAAKoE,GAAK,GACVpE,KAAK6D,WAAa,KAClB7D,KAAKY,MAAO,EACZZ,KAAKQ,KAAOA,EACZR,KAAKqE,KAAO,GACZrE,KAAKsE,KAAO,KAwKhB3G,EAAQ4G,OA3JR,MACE,YAAYH,EAAItE,EAAK+D,GACnB7D,KAAKoE,GAAKA,EACVpE,KAAKF,IAAMA,EACXE,KAAK6D,WAAaA,EAClB7D,KAAKwE,YAAa,EAElBxE,KAAKyE,IAAM,EACXzE,KAAK0E,IAAM,EACX1E,KAAK2E,OAAS,GACd3E,KAAK4E,UAAY,GAEjB5E,KAAKkB,KAAO2C,EAAW3C,MAAQ,GAC/BlB,KAAKY,KAAOiD,EAAWjD,OAAQ,EAC/BZ,KAAK6E,cAAgB,GACrB7E,KAAK8E,SAAU,EACf9E,KAAK+E,UAAW,EAChB/E,KAAK+C,OAAQ,EAEb/C,KAAK0D,OAAS,KAEd1D,KAAKgF,uBAAyB,GAC9BhF,KAAKiF,qBAAuB,GAE5BjF,KAAKkF,SAAW,GAEhB,IAAIC,EAAiB,GACrBnF,KAAKF,IAAIsF,QAAQhE,QAAQiE,IACvBF,EAAeE,EAAOjH,OAAS,IAEjC4B,KAAKF,IAAIqF,eAAenF,KAAKoE,IAAMe,EAOrC,SAAUG,GACR,GAAItF,KAAKwE,WACP,OAAOxE,KAAKuF,OAAOD,GAGrB,QAA8B,IAAnBtF,KAAKF,IAAI0F,OAA4C,iBAAnBxF,KAAKF,IAAI0F,MACpD,OAAQxF,KAAK6E,eACX,IAAK,WACH,IAAI1E,EAAQ,QACZ,MACF,IAAK,aACCA,EAAQ,QACZ,MACF,QACMA,EAAQH,KAAKF,IAAI2F,cAAezF,KAAK6D,WAAW5C,YAAsCjB,KAAK6D,WAAW1D,WAG1GA,EAAQH,KAAK6D,WAAW1D,MAG9B,IA0BUuF,QAzBoB,KAD1BA,EAAiB1F,KAAKF,IAAIe,OAAO,SAAWb,KAAK6D,WAAWzF,QACnBsH,IAAmB1F,KAAK6D,WAAW1D,QAC9EA,EAAQuF,GAAkCvF,QAGR,IAAzBH,KAAKF,IAAI6F,aAA+B3F,KAAKF,IAAI6F,cAC1DxF,EAAQ,CAACH,KAAK6D,WAAW5D,KAAME,GAAOyF,KAAK,WAGV,IAAxB5F,KAAKF,IAAI+F,cACd7F,KAAKF,IAAI+F,WACiB,oBAAxB7F,KAAKF,IAAIgG,WACPR,EAAQtF,KAAK2E,OAAOhD,SACtBxB,EAAQH,KAAK2E,OAAOW,IAKlBA,GAAS,IACXnF,EAAQH,KAAK2E,OAAOW,EAAQ,IAM5BtF,KAAKF,IAAIiG,aAAyB,IAAVT,IAGxBnF,OAD4B,KAD1BuF,EAAiB1F,KAAKF,IAAIe,OAAO,WAAab,KAAK6D,WAAWzF,QAExDsH,GAEA1F,KAAK6D,WAAW7C,UAOhC,OAAOb,EAQT,kBACE,GAAuC,oBAAnCH,KAAK6D,WAAW/D,IAAIgG,WACtB,IAAIE,EAAgB,IAAIhG,KAAK2E,OAAQ3E,KAAKiG,SAASjG,KAAK2E,OAAOhD,cAE3DqE,EAAgB,CAAChG,KAAKiG,SAAS,MAAOjG,KAAK2E,QAGjD,GAAI3E,KAAK6D,WAAW/D,IAAIiG,cAAgB/F,KAAK6D,WAAW/D,IAAI+F,WAAY,CACtE,IAAIK,EAAiBlG,KAAK6D,WAAW7C,QACjC0E,EAAiB1F,KAAK6D,WAAW/D,IAAIe,OAAO,WAAab,KAAK6D,WAAWzF,WAC/C,IAAnBsH,IACTQ,EAAiBR,GAAkCQ,GAErDF,EAAcG,QAAQD,GAGxB,OAAOF,EAGT,gBACE,IAAII,EAAa,GACbzB,EAAS3E,KAAKqG,kBAKlB,OAJArG,KAAK6D,WAAW/D,IAAIsF,QAAQhE,QAAQ,CAACiE,EAAQxH,KAC3CuI,EAAWf,EAAOjH,MAAQuG,EAAO9G,KAG5BuI,EAGT,qBAAsB3B,GACkB,GAAlCzE,KAAKgF,uBAAuB,KACzBhF,KAAK8E,SAAY9E,KAAK+E,WACzB/E,KAAKgF,uBAAyB,CAAC,EAAGP,KAKxC,oBACE,OAAOzE,KAAKgF,uBAGd,kBACE,OAAOhF,KAAKiF","file":"vis_primitives.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = queryResponseField.is_numeric\n    this.is_array = ['list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = ''\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style = style_setting\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'style':\n              this.style = tags[2] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' && queryResponseField.is_table_calculation\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = queryResponseField.is_turtle\n    this.can_pivot = can_pivot\n  }\n}\n\nclass HeaderField {\n  constructor({ vis, queryResponseField = { name: '', label: '', view: '' }} = { vis, queryResponseField }) {\n    console.log('HeaderField()', vis, queryResponseField.name)\n    this.vis = vis\n    this.name = queryResponseField.name,\n    this.label = queryResponseField.label_short ? queryResponseField.label_short : queryResponseField.label,\n    this.view = queryResponseField.view_label\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(with_subtotals)\n      this.max_for_display = Math.max(with_subtotals)\n      this.min = Math.min(line_items_only)\n      this.max = Math.max(line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  toString() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    this.modelField = null\n    this.hide = false\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.variance_type = '' // empty | absolute | percentage\n    this.pivoted = false\n    this.subtotal = false\n    this.super = false\n\n    this.series = null\n    \n    this.sort_by_measure_values = [] // [index -1|dimension 0|measure 1|row totals & supermeasures 2, column number, [measure values]  ]\n    this.sort_by_pivot_values = []   // [index -1|dimension 0|measure 1|row totals & supermeasures 2, [pivot values], column number    ]\n\n    this.colspans = []\n\n    var colspan_values = {}\n    this.vis.headers.forEach(header => {\n      colspan_values[header.name] = -1\n    })\n    this.vis.colspan_values[this.id] = colspan_values\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getLabel (level) {\n    if (this.transposed) {\n      return this.labels[level]\n    }\n\n    if (typeof this.vis.visId !== 'undefined' && this.vis.visId === 'report_table') {\n      switch (this.variance_type) {\n        case 'absolute':\n          var label = 'Var #'\n          break;\n        case 'percentage':\n          var label = 'Var %'\n          break;\n        default:\n          var label = this.vis.useShortName ? this.modelField.short_name || this.modelField.label : this.modelField.label\n      }\n    } else {\n      var label = this.modelField.label\n    }\n    \n    var config_setting = this.vis.config['label|' + this.modelField.name]\n    if (typeof config_setting !== 'undefined' && config_setting !== this.modelField.label) {\n      label = config_setting ? config_setting : label\n    }\n\n    if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n      label = [this.modelField.view, label].join(' ') \n    }\n    \n    if (typeof this.vis.has_pivots !== 'undefined') {\n      if (this.vis.has_pivots) { \n        if (this.vis.sortColsBy === 'getSortByPivots') {\n          if (level < this.levels.length) {\n            label = this.levels[level]\n          } else {\n            // label already set\n          }\n        } else { // params.config.sortColumnsBy === 'getSortByMeasures'\n          if (level >= 1) {\n            label = this.levels[level - 1]\n          } else {\n            // label already set\n          }\n        } \n      } else { // flat table\n        if (this.vis.useHeadings && level === 0) {\n          var config_setting = this.vis.config['heading|' + this.modelField.name]\n          if (typeof config_setting !== 'undefined') {\n            label = config_setting ? config_setting : this.modelField.heading\n          } else {\n            label = this.modelField.heading\n          }\n        } else {\n          // label already set\n        }\n      }\n    }\n    return label\n  }\n\n  /***\n   * Returns array of all header fields per column\n   * 1. Combine pivot values with measure label, in order set by sortColsBy option\n   * 2. Add headings if used (option chosen, flat tables only)\n   */\n  getHeaderLevels () {\n    if (this.modelField.vis.sortColsBy === 'getSortByPivots') {\n      var header_levels = [...this.levels, this.getLabel(this.levels.length)]\n    } else {\n      var header_levels = [this.getLabel(0), ...this.levels]\n    }\n\n    if (this.modelField.vis.useHeadings && !this.modelField.vis.has_pivots) {\n      var column_heading = this.modelField.heading\n      var config_setting = this.modelField.vis.config['heading|' + this.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        column_heading = config_setting ? config_setting : column_heading\n      } \n      header_levels.unshift(column_heading)\n    }\n\n    return header_levels\n  }\n\n  getHeaderData () {\n    var headerData = {}\n    var levels = this.getHeaderLevels()\n    this.modelField.vis.headers.forEach((header, i) => {\n      headerData[header.name] = levels[i]\n    })\n\n    return headerData\n  }\n\n  updateSortByMeasures (idx) {\n    if (this.sort_by_measure_values[0] == 1) {\n      if (!this.pivoted && !this.subtotal) {\n        this.sort_by_measure_values = [1, idx]\n      }\n    }\n  }\n\n  getSortByMeasures () {\n    return this.sort_by_measure_values\n  }\n\n  getSortByPivots () {\n    return this.sort_by_pivot_values\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.HeaderField = HeaderField\nexports.Row = Row\nexports.Column = Column\n"],"sourceRoot":""}
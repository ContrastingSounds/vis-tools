{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/vis_primitives.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ModelField","vis","queryResponseField","this","view","view_label","label","field_group_variant","label_short","is_numeric","is_array","includes","type","value_format","geo_type","map_layer","hide","config","style","style_setting","heading","short_name","unit","tags","forEach","tag","split","Series","keys","values","types","length","line_items_only","with_subtotals","push","min_for_display","Math","min","max_for_display","max","sum","reduce","a","b","count","avg","console","log","newArray","arr","ModelDimension","super","align","ModelPivot","ModelMeasure","can_pivot","is_table_calculation","calculation_type","is_turtle","CellSeries","column","row","sort_value","series","rendered","formatted_value","modelField","toString","SSF","format","ColumnSeries","HeaderCell","pivotData","DataCell","html","links","cell_style","rowid","colid","rowspan","Row","id","sort","data","Column","transposed","idx","pos","levels","pivot_key","variance_type","pivoted","subtotal","sort_by_measure_values","sort_by_pivot_values","colspans","colspan_values","headers","header","level","headerField","header_setting","label_setting","visId","useShortName","useViewName","join","sortColsBy","header_levels","getLabel","useHeadings","has_pivots","column_heading","config_setting","unshift","headerData"],"mappings":"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","file":"vis_primitives.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * Returns an array of given length, all populated with same value\n * Convenience function e.g. to initialise arrays of zeroes or nulls\n * @param {*} length \n * @param {*} value \n */\nconst newArray = function(length, value) {\n  var arr = []\n  for (var l = 0; l < length; l++) {\n    arr.push(value)\n  }\n  return arr\n}\n\nclass ModelField {\n  constructor({ vis, queryResponseField }) {\n    this.vis = vis\n    this.name = queryResponseField.name\n    this.view = queryResponseField.view_label || ''\n    this.label = queryResponseField.field_group_variant || queryResponseField.label_short || queryResponseField.label\n    this.is_numeric = typeof queryResponseField.is_numeric !== 'undefined' ? queryResponseField.is_numeric : false\n    this.is_array = ['list', 'number_list', 'location', 'tier'].includes(queryResponseField.type)\n    this.value_format = queryResponseField.value_format ? queryResponseField.value_format : ''\n\n    this.geo_type = ''\n    if (queryResponseField.type === 'location' || queryResponseField.map_layer) {\n      this.geo_type = queryResponseField.type === 'location' ? 'location' : queryResponseField.map_layer.name\n    } \n\n    this.hide = false\n    if (typeof this.vis.config['hide|' + this.name] !== 'undefined') {\n      if (this.vis.config['hide|' + this.name]) {\n        this.hide = true\n      } \n    }\n\n    this.style = ''\n    var style_setting = this.vis.config['style|' + this.name]\n    if (typeof style_setting !== 'undefined') {\n      if (style_setting === 'hide') {\n        this.hide = true\n      } else {\n        this.style = style_setting\n      }\n    }\n\n    this.heading = ''\n    this.short_name = ''\n    this.unit = ''\n    if (typeof queryResponseField.tags !== 'undefined') {\n      queryResponseField.tags.forEach(tag => {\n        var tags = tag.split(':')\n        if (tags[0] === 'vis-tools') {\n          switch (tags[1]) {\n            case 'heading':\n              this.heading = tags[2] ; break\n            case 'short_name':\n              this.short_name = tags[2] ; break\n            case 'unit':\n              this.unit = tags[2] ; break\n            case 'style':\n              this.style = tags[2] ; break\n          }\n        }\n      })\n    }\n  }\n}\n\nclass ModelDimension extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'dimension'    \n    this.align = 'left'\n  }\n}\n\nclass ModelPivot extends ModelField {\n  constructor({ vis, queryResponseField }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'pivot'    \n    this.align = 'center'\n  }\n}\n\nclass ModelMeasure extends ModelField {\n  constructor({ vis, queryResponseField, can_pivot }) {\n    super({ vis, queryResponseField })\n\n    this.type = 'measure'\n    this.align = 'right'\n\n    this.is_table_calculation = typeof queryResponseField.is_table_calculation !== 'undefined' ? queryResponseField.is_table_calculation : false\n    this.calculation_type = queryResponseField.type\n    this.is_turtle = typeof queryResponseField.is_turtle !== 'undefined' ? queryResponseField.is_turtle : false\n    this.can_pivot = can_pivot\n  }\n}\n\nclass HeaderCell {\n  constructor({ vis, type, modelField = { name: '', label: '', view: '' }, pivotData = {} } = { vis, type, modelField, pivotData }) {\n    this.vis = vis\n    this.type = type\n    \n    this.modelField = modelField\n    // this.name = modelField.name\n    // this.view = modelField.view\n\n    this.pivotData = pivotData\n  }\n}\n\n/**\n * types: dimension | line_item | subtotal | total\n */\nclass Series {\n  constructor({ keys, values, types = [] }) {\n    if (keys.length === values.length ) {\n      this.keys = keys\n      this.values = values\n      this.types = types\n\n      var line_items_only = []\n      var with_subtotals = []\n\n      this.values.forEach((value, i) => {\n        this.types[i] = typeof types[i] !== 'undefined' ? types[i] : 'line_item'\n        if (this.types[i] === 'line_item') {\n          line_items_only.push(value)\n          with_subtotals.push(value)\n        } else if (this.types[i] === 'subtotal') {\n          with_subtotals.push(value)\n        }\n      })\n\n      this.min_for_display = Math.min(...with_subtotals)\n      this.max_for_display = Math.max(...with_subtotals)\n      this.min = Math.min(...line_items_only)\n      this.max = Math.max(...line_items_only)\n      this.sum = line_items_only.reduce((a, b) => a + b, 0)\n      this.count = line_items_only.length\n      this.avg = line_items_only.length > 0 ? this.sum / line_items_only.length : null\n    } else {\n      console.log('Could not construct series, arrays were of different length.')\n    }\n  }\n}\n\nclass CellSeries {\n  constructor({ column, row, sort_value, series}) {\n    this.column = column\n    this.row = row\n    this.sort_value = sort_value\n    this.series = new Series(series)\n  }\n\n  toString() {\n    var rendered = ''\n    this.series.keys.forEach((key, i) => {\n      rendered += key + ':'\n      var formatted_value = this.column.modelField.value_format === '' \n                            ? this.series.values[i].toString() \n                            : SSF.format(this.column.modelField.value_format, this.series.values[i])\n      rendered += formatted_value + ' '\n    })\n    return rendered\n  }\n}\n\nclass ColumnSeries {\n  constructor({ column, is_numeric, series }) {\n    this.column = column\n    this.is_numeric = is_numeric\n    this.series = new Series(series)\n  }\n}\n\nclass DataCell {\n  constructor({ value, rendered = null, html = null, links = [], cell_style = [], align = 'right', rowid = '', colid = '', rowspan = 1} = {})\n    {\n      this.value = value\n      this.rendered = rendered\n      this.html = html\n      this.links = links\n      this.cell_style = cell_style\n      this.align = align\n\n      this.rowid = rowid\n      this.colid = colid\n      this.rowspan = rowspan\n    }\n}\n\n/**\n * Represents a row in the dataset that populates the vis.\n * This may be an addtional row (e.g. subtotal) not in the original query\n * @class\n */\nclass Row {\n  constructor(type = 'line_item') {\n    this.id = ''\n    // this.modelField = null\n    this.hide = false\n    this.type = type  // line_item | subtotal | total\n    this.sort = []    // [ section, subtotal group, row number ]\n    this.data = {}    // Indexed by Column.id\n                      // { value: any, rendered: string, html?: string, links?: array }\n  }\n}\n\n/**\n * Represents a column in the dataset that populates the vis.\n * This may be an additional columns (e.g. subtotal, variance) not in the original query\n * \n * Ensures all key vis properties (e.g. 'label') are consistent across different field types\n * \n * @class\n */\nclass Column {\n  constructor(id, vis, modelField) {\n    this.id = id\n    this.vis = vis\n    this.modelField = modelField\n    this.transposed = false\n\n    this.idx = 0\n    this.pos = 0\n    this.levels = []\n    this.pivot_key = '' \n\n    this.unit = modelField.unit || ''\n    this.hide = modelField.hide || false\n    this.variance_type = '' // empty | absolute | percentage\n    this.pivoted = false\n    this.subtotal = false\n    this.super = false\n\n    this.series = null\n    \n    this.sort_by_measure_values = [] // [index -1|dimension 0|measure 1|row totals & supermeasures 2, column number, [measure values]  ]\n    this.sort_by_pivot_values = []   // [index -1|dimension 0|measure 1|row totals & supermeasures 2, [pivot values], column number    ]\n\n    this.colspans = []\n\n    var colspan_values = {}\n    this.vis.headers.forEach(header => {\n      colspan_values[header.type] = 1\n    })\n    this.vis.colspan_values[this.id] = colspan_values\n  }\n\n  /**\n   * Returns a header label for a column, to display in table vis\n   * @param {*} level\n   */\n  getLabel (level) {\n    var headerField = this.levels[level]\n\n    var label = headerField.modelField.label\n\n    var header_setting = this.vis.config['heading|' + headerField.modelField.name]\n    var label_setting = this.vis.config['label|' + headerField.modelField.name]\n\n    if (headerField.type === 'heading') {\n      if (typeof header_setting !== 'undefined') {\n        label = header_setting ? header_setting : headerField.modelField.heading\n      } else {\n        label = headerField.modelField.heading\n      }\n      return label\n    }\n\n    if (headerField.type === 'field') {\n      if (typeof this.vis.visId !== 'undefined' && this.vis.visId === 'report_table') {\n        switch (this.variance_type) {\n          case 'absolute':\n            label = 'Var #'\n            break;\n          case 'percentage':\n            label = 'Var %'\n            break;\n          default:\n            label = this.vis.useShortName\n             ? headerField.modelField.short_name || headerField.modelField.label \n             : headerField.modelField.label\n        }\n      } \n      \n      if (typeof label_setting !== 'undefined' && label_setting !== this.modelField.label) {\n        label = label_setting ? label_setting : label\n      }\n  \n      if (typeof this.vis.useViewName !== 'undefined' && this.vis.useViewName) {\n        label = [this.modelField.view, label].join(' ') \n      }\n    }\n    \n    return label\n  }\n\n  /***\n   * Returns array of all header fields per column\n   * 1. Combine pivot values with measure label, in order set by sortColsBy option\n   * 2. Add headings if used (option chosen, flat tables only)\n   */\n  getHeaderLevels () {\n    if (this.modelField.vis.sortColsBy === 'getSortByPivots') {\n      var header_levels = [...this.levels, this.getLabel(this.levels.length)]\n    } else {\n      var header_levels = [this.getLabel(0), ...this.levels]\n    }\n\n    if (this.modelField.vis.useHeadings && !this.modelField.vis.has_pivots) {\n      var column_heading = this.modelField.heading\n      var config_setting = this.modelField.vis.config['heading|' + this.modelField.name]\n      if (typeof config_setting !== 'undefined') {\n        column_heading = config_setting ? config_setting : column_heading\n      } \n      header_levels.unshift(column_heading)\n    }\n\n    return header_levels\n  }\n\n  getHeaderData () {\n    var headerData = {}\n    this.modelField.vis.headers.forEach((header, i) => {\n      headerData[header.type] = this.levels[i]\n    })\n\n    return headerData\n  }\n\n  updateSortByMeasures (idx) {\n    if (this.sort_by_measure_values[0] == 1) {\n      if (!this.pivoted && !this.subtotal) {\n        this.sort_by_measure_values = [1, idx]\n      }\n    }\n  }\n\n  getSortByMeasures () {\n    return this.sort_by_measure_values\n  }\n\n  getSortByPivots () {\n    return this.sort_by_pivot_values\n  }\n}\n\nexports.newArray = newArray\nexports.ModelDimension = ModelDimension\nexports.ModelPivot = ModelPivot\nexports.ModelMeasure = ModelMeasure\nexports.CellSeries = CellSeries\nexports.ColumnSeries = ColumnSeries\nexports.HeaderCell = HeaderCell\nexports.DataCell = DataCell\nexports.Row = Row\nexports.Column = Column\n"],"sourceRoot":""}